{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap d3dc79484772af2ff822","webpack:///./public/fonts/slkscr-webfont.eot","webpack:///(webpack)/buildin/global.js","webpack:///./src/partials/Game.js","webpack:///./src/settings.js","webpack:///./src/util/KeyPressMapCallBack.js","webpack:///./src/styles/game.css?abf4","webpack:///./src/index.js","webpack:///./src/partials/Ball.js","webpack:///./src/partials/Board.js","webpack:///./src/partials/Paddle.js","webpack:///./src/partials/ScoreBoard.js","webpack:///./src/styles/game.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./public/fonts/slkscr-webfont.svg","webpack:///./public/fonts/slkscr-webfont.ttf","webpack:///./public/fonts/slkscr-webfont.woff","webpack:///./~/process/browser.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/style-loader/addStyles.js","webpack:///./~/svg.js/dist/svg.js","webpack:///./~/timers-browserify/main.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_Board","_svg","_svg2","obj","default","Game","gameSettings","boardSvg","p1PaddleSvg","p2PaddleSvg","ballSvg","score1Svg","score2Svg","board","Board","isPaused","player1","moveUp","moveDown","player2","reset","isStarted","start","update","render","KEYS","p1Up","p1Down","p2Up","p2Down","gameStart","GameSettings","maxScroe","intervalToWaitAfterScoreTimeInMs","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","Array","isArray","KeyPressMapCallBack","allowedKeysCodesAndCallBacks","keyPressedMap","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","keys","set","return","code","has","callBackFromAllPressedKeys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref","_ref2","keyCode","content","locals","_interopRequireDefault","_settings","_Game","_Game2","_KeyPressMapCallBack","_KeyPressMapCallBack2","game","keyMapCallBack","player1MoveUp","player1MoveDown","player2MoveUp","player2MoveDown","startOrPause","document","body","addEventListener","press","event","preventDefault","release","gameLoop","gameloop","requestAnimationFrame","Ball","cx","originalCX","cy","originalCY","direction","vx","vy","pingSounds","Audio","bbox","isDirty","arguments","Math","random","floor","abs","boardBox","paddle1Box","paddle2Box","ballBox","hitSide","checkforWallCollision","checkforPaddleCollision","hitLeft","x","hitRight","x2","width","hitTop","y","hitBottom","y2","height","collisionDetected","hitP1PadBySide","hitP2PadBySide","console","log","sound","shift","play","center","radiosSize","circle","_timers","_Paddle","_ScoreBoard","_Ball","rbox","score","ScoreBoard","paddle1","Paddle","paddle2","ball","startMoving","updatePos","scores","_this","setTimeout","paddleSvg","boardHeight","originalY","speed","max","min","playerThatScore","text","toString","list","result","item","join","mediaQuery","alreadyImportedModules","id","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","global","setImmediate","callback","task","tasksByHandle","nextHandle","registerImmediate","clearImmediate","handle","runIfPresent","currentlyRunningATask","doc","attachTo","getPrototypeOf","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","onGlobalMessage","source","data","indexOf","slice","attachEvent","MessageChannel","channel","port1","port2","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","self","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","removeStyleElement","parentNode","idx","splice","createStyleElement","type","createLinkElement","linkElement","rel","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","memoize","fn","memo","isOldIE","test","navigator","userAgent","toLowerCase","getElementsByTagName","DEBUG","newList","mayRemove","textStore","replacement","filter","Boolean","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","pathRegReplace","a","b","replace","SVG","regex","dots","array_clone","clone","is","el","matches","selector","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","camelCase","toUpperCase","capitalize","charAt","fullHex","hex","substring","compToHex","comp","proportionalSize","element","box","deltaTransformPoint","matrix","arrayToMatrix","f","parseMatrix","Matrix","ensureCentre","arrayToString","il","assignNewId","node","SVGElement","adopt","eid","nodeName","fullBox","w","h","idFromReference","url","match","reference","supported","Doc","parser","draw","prepare","ns","xmlns","xlink","svgjs","createElementNS","createSVGRect","did","create","extend","methods","pop","Set","inherit","invent","config","initializer","constructor","construct","parent","Container","Nested","Gradient","Element","namespace","defs","setData","parse","getAttribute","nested","size","style","poly","polyline","path","native","numberAndUnit","rgb","transforms","whitespace","isHex","isRgb","isCss","isBlank","isNumber","isPercent","isImage","delimiter","hyphen","pathLetters","isPathLetter","numbersWithDots","utils","map","block","radians","PI","degrees","r","filterSVGElements","nodes","defaults","attrs","fill-opacity","stroke-opacity","stroke-width","stroke-linejoin","stroke-linecap","fill","stroke","opacity","rx","ry","offset","stop-opacity","stop-color","font-size","font-family","text-anchor","Color","color","exec","parseInt","toHex","toRgb","brightness","morph","destination","at","pos","isColor","fallback","valueOf","lastValue","lastDestination","settle","seen","split","string","trim","parseFloat","reverse","PointArray","toLine","x1","y1","points","move","isNaN","getBBox","pathHandlers","M","p0","L","H","V","C","S","Q","T","Z","A","mlhvqtcsa","jl","PathArray","equalCommands","pathArray","sourceArray","destinationArray","paramCnt","reduce","prev","curr","Point","Number","unit","isFinite","toJSON","plus","number","minus","times","divide","to","relative","_stroke","_event","dom","attr","withData","writeDataToDom","cloneNode","add","after","removeElement","addTo","put","putIn","inside","show","hide","visible","classes","hasClass","addClass","removeClass","toggleClass","parents","svg","well","Parent","innerHTML","each","lines","removeAttribute","easing","-","<>","cos",">","sin","<","from","MorphObj","Situation","init","reversed","reversing","duration","delay","Date","finish","ease","loop","loops","animations","FX","_target","situations","active","situation","paused","lastPos","absPos","_speed","animate","timeToAbsPos","timestamp","absPosToTime","startAnimFrame","stopAnimFrame","animationFrame","step","cancelAnimationFrame","startCurrent","initAnimations","dequeue","stop","initialTransformation","matrixify","clearQueue","clearCurrent","jumpToEnd","atEnd","temp","atStart","isAbsPos","durDivSpd","pause","last","progress","easeIt","wrapper","detail","_callStart","during","eased","afterAll","duringAll","method","ignoreTime","absPosInt","lastLoop","fire","fx","eachAt","multiply","undo","extract","isEased","real","v","G","transform","num","Text","plot","leading","viewbox","ViewBox","Stop","Box","left","top","merge","xMin","Infinity","xMax","yMin","yMax","forEach","BBox","contains","Exception","topParent","Shape","clientLeft","clientTop","clientWidth","clientHeight","tbox","warn","RBox","getBoundingClientRect","addOffset","pageXOffset","pageYOffset","screenCTM","inverse","base","abcdef","px","py","skewX","atan2","transformedX","sqrt","transformedY","skewY","scaleX","scaleY","rotation","translate","scale","around","rotate","flip","skew","tan","createSVGMatrix","ctm","getCTM","rect","getScreenCTM","point","createSVGPoint","matrixTransform","attributes","nodeValue","image","Image","pattern","setAttributeNS","rebuild","Rotate","Scale","Skew","Translate","untransform","str","kv","toParent","pCtm","toDoc","Transformation","inversed","params","_undo","children","first","deep","clear","hasChildNodes","lastChild","_defs","ungroup","depth","Defs","flatten","view","we","he","wm","hm","reg","offsetWidth","offsetHeight","zoom","handlerMap","listenerId","listener","ev","_svgjsListenerId","removeEventListener","Event","dispatchEvent","CustomEvent","cancelable","gbox","trans","group","siblings","position","previous","forward","backward","front","back","before","Mask","targets","unmask","mask","maskWith","masker","ClipPath","unclip","clip","clipWith","clipper","gradient","fy","Pattern","patternUnits","getElementById","spof","Bare","words","symbol","Use","file","use","Rect","Circle","Ellipse","ellipse","Line","line","Polyline","Polygon","polygon","_array","morphArray","Path","load","img","_loaded","ratio","_error","src","loaded","error","_rebuild","_build","oy","nodeType","newLined","textContent","build","tspan","newLine","textPath","blankLineOffset","dy","plain","Tspan","dx","t","getComputedTextLength","TextPath","track","link","linkTo","Marker","ref","sugar","prefix","extension","dmove","radius","getTotalLength","pointAt","getPointAtLength","font","members","elements","remember","k","memory","forget","_memory","select","query","querySelectorAll","bubbles","createEvent","initCustomEvent","lastTime","vendors","currTime","getTime","timeToCall","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"public/fonts/slkscr-webfont.eot\";\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Board = __webpack_require__(8);\n\nvar _svg = __webpack_require__(19);\n\nvar _svg2 = _interopRequireDefault(_svg);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Game = function () {\n    function Game(gameSettings) {\n        _classCallCheck(this, Game);\n\n        var boardSvg = _svg2.default.get(\"game-svg\");\n        var p1PaddleSvg = _svg2.default.get(\"p1Paddle\");\n        var p2PaddleSvg = _svg2.default.get(\"p2Paddle\");\n        var ballSvg = _svg2.default.get(\"ball\");\n        var score1Svg = _svg2.default.get(\"p1Score\");\n        var score2Svg = _svg2.default.get(\"p2Score\");\n\n        this.gameSettings = gameSettings;\n\n        this.board = new _Board.Board(gameSettings, boardSvg, p1PaddleSvg, p2PaddleSvg, ballSvg, score1Svg, score2Svg);\n    }\n\n    _createClass(Game, [{\n        key: \"player1MoveUp\",\n        value: function player1MoveUp() {\n            if (this.isPaused) {\n                return;\n            }\n            return this.board.player1.moveUp();\n        }\n    }, {\n        key: \"player1MoveDown\",\n        value: function player1MoveDown() {\n            if (this.isPaused) {\n                return;\n            }\n            return this.board.player1.moveDown();\n        }\n    }, {\n        key: \"player2MoveUp\",\n        value: function player2MoveUp() {\n            if (this.isPaused) {\n                return;\n            }\n            return this.board.player2.moveUp();\n        }\n    }, {\n        key: \"player2MoveDown\",\n        value: function player2MoveDown() {\n            if (this.isPaused) {\n                return;\n            }\n            return this.board.player2.moveDown();\n        }\n\n        // get scores() {\n        //     return this.board.scoreBoard.scores;\n        // }\n\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this.board.reset();\n            this.isStarted = false;\n            this.isPaused = true;\n        }\n    }, {\n        key: \"startOrPause\",\n        value: function startOrPause() {\n            if (!this.isStarted) {\n                this.reset();\n                this.board.start();\n            }\n            this.isPaused = !this.isPaused;\n            this.isStarted = true;\n        }\n    }, {\n        key: \"gameloop\",\n        value: function gameloop() {\n            if (!this.isPaused && this.isStarted) {\n                this.board.update();\n            }\n            this.board.render();\n        }\n    }]);\n\n    return Game;\n}();\n\nexports.default = Game;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar KEYS = exports.KEYS = {\n    p1Up: \"KeyA\", // player 1 up key\n    p1Down: \"KeyZ\", // player 1 down key\n    p2Up: \"ArrowUp\", // player 2 up key\n    p2Down: \"ArrowDown\", // player 2 down key\n    gameStart: \"Space\"\n};\n\nvar GameSettings = exports.GameSettings = {\n    maxScroe: 10,\n    intervalToWaitAfterScoreTimeInMs: 250\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar KeyPressMapCallBack = function () {\n    function KeyPressMapCallBack(allowedKeysCodesAndCallBacks) {\n        _classCallCheck(this, KeyPressMapCallBack);\n\n        this.allowedKeysCodesAndCallBacks = allowedKeysCodesAndCallBacks;\n        this.keyPressedMap = new Map();\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = allowedKeysCodesAndCallBacks.keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var key = _step.value;\n\n                this.keyPressedMap.set(key, false);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n\n    _createClass(KeyPressMapCallBack, [{\n        key: \"release\",\n        value: function release(code) {\n            if (!this.keyPressedMap.has(code)) {\n                return false;\n            }\n            this.keyPressedMap.set(code, false);\n            return true;\n        }\n    }, {\n        key: \"press\",\n        value: function press(code) {\n            if (!this.keyPressedMap.has(code)) {\n                return false;\n            }\n            this.keyPressedMap.set(code, true);\n            this.callBackFromAllPressedKeys();\n            return true;\n        }\n    }, {\n        key: \"callBackFromAllPressedKeys\",\n        value: function callBackFromAllPressedKeys() {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.keyPressedMap[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var _ref = _step2.value;\n\n                    var _ref2 = _slicedToArray(_ref, 2);\n\n                    var keyCode = _ref2[0];\n                    var isPressed = _ref2[1];\n\n                    if (isPressed) {\n                        this.allowedKeysCodesAndCallBacks.get(keyCode)();\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n    }]);\n\n    return KeyPressMapCallBack;\n}();\n\nexports.default = KeyPressMapCallBack;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(11);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(18)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./game.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./game.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(5);\n\nvar _settings = __webpack_require__(3);\n\nvar _Game = __webpack_require__(2);\n\nvar _Game2 = _interopRequireDefault(_Game);\n\nvar _KeyPressMapCallBack = __webpack_require__(4);\n\nvar _KeyPressMapCallBack2 = _interopRequireDefault(_KeyPressMapCallBack);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar game = new _Game2.default(_settings.GameSettings);\ngame.reset();\n\nvar keyMapCallBack = new _KeyPressMapCallBack2.default(new Map([[_settings.KEYS.p1Up, function () {\n    return game.player1MoveUp();\n}], [_settings.KEYS.p1Down, function () {\n    return game.player1MoveDown();\n}], [_settings.KEYS.p2Up, function () {\n    return game.player2MoveUp();\n}], [_settings.KEYS.p2Down, function () {\n    return game.player2MoveDown();\n}], [_settings.KEYS.gameStart, function () {\n    return game.startOrPause();\n}]]));\n\ndocument.body.addEventListener(\"keydown\", function (e) {\n    var isKeyIsMapped = keyMapCallBack.press(e.code);\n    if (isKeyIsMapped) {\n        event.preventDefault();\n    }\n});\ndocument.body.addEventListener(\"keyup\", function (e) {\n    keyMapCallBack.release(e.code);\n});\n\n//TODO, Only Start the render Render after start the game\n\n(function gameLoop() {\n    game.gameloop();\n    requestAnimationFrame(gameLoop);\n})();\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Ball = exports.Ball = function () {\n    function Ball(ballSvg) {\n        _classCallCheck(this, Ball);\n\n        this.ballSvg = ballSvg;\n        this.cx = this.originalCX = ballSvg.cx();\n        this.cy = this.originalCY = ballSvg.cy();\n        this.direction = this.vx = this.vy = 0;\n        this.reset();\n\n        this.pingSounds = [new Audio(\"public/sounds/pong-01.wav\"), new Audio(\"public/sounds/pong-02.wav\"), new Audio(\"public/sounds/pong-03.wav\")];\n    }\n\n    _createClass(Ball, [{\n        key: \"bbox\",\n        value: function bbox() {\n            return this.ballSvg.bbox();\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this.isDirty = true;\n\n            this.cx = this.originalCX;\n            this.cy = this.originalCY;\n            this.direction = this.vx = this.vy = 0;\n        }\n    }, {\n        key: \"startMoving\",\n        value: function startMoving() {\n            var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n            this.isDirty = true;\n\n            this.direction = direction || (Math.random() > .5 ? 1 : -1);\n            while (this.vy === 0) {\n                this.vy = Math.floor(Math.random() * 10 - 5);\n            }\n            this.vx = this.direction * (6 - Math.abs(this.vy));\n        }\n    }, {\n        key: \"updatePos\",\n        value: function updatePos(boardBox, paddle1Box, paddle2Box) {\n            this.isDirty = true;\n\n            var ballBox = this.bbox();\n            var hitSide = this.checkforWallCollision(ballBox, boardBox);\n            this.checkforPaddleCollision(ballBox, paddle1Box, paddle2Box);\n\n            this.cx += this.vx;\n            this.cy += this.vy;\n\n            return hitSide;\n        }\n    }, {\n        key: \"checkforWallCollision\",\n        value: function checkforWallCollision(ballBox, boardBox) {\n            var hitLeft = ballBox.x <= 0;\n            var hitRight = ballBox.x2 >= boardBox.width;\n            var hitTop = ballBox.y <= 0;\n            var hitBottom = ballBox.y2 >= boardBox.height;\n\n            if (hitLeft) {\n                return -1;\n            } else if (hitRight) {\n                return 1;\n            } else if (hitTop || hitBottom) {\n                this.vy *= -1;\n                this.collisionDetected();\n            }\n\n            return 0;\n        }\n    }, {\n        key: \"checkforPaddleCollision\",\n        value: function checkforPaddleCollision(ballBox, paddle1Box, paddle2Box) {\n\n            var hitP1PadBySide = ballBox.x <= paddle1Box.x2 && ballBox.y2 >= paddle1Box.y && ballBox.y <= paddle1Box.y2 && this.vx < 0;\n            // const hitP1FromTop    = ballBox.x <= paddle1Box.x2 && ballBox.x2 >= paddle1Box.x && ballBox.y  <  paddle1Box.y  && ballBox.y2 >= paddle1Box.y  && ballBox.cy <= paddle1Box.cy && this.vy > 0;\n            // const hitP1FromBotton = ballBox.x <= paddle1Box.x2 && ballBox.x2 >= paddle1Box.x && ballBox.y2 >  paddle1Box.y2 && ballBox.y  <= paddle1Box.y2 && ballBox.cy >= paddle1Box.cy && this.vy < 0;\n\n            var hitP2PadBySide = ballBox.x2 >= paddle2Box.x && ballBox.y2 >= paddle2Box.y && ballBox.y <= paddle2Box.y2 && this.vx > 0;\n            // const hitP2FromTop    = ballBox.x2 >= paddle2Box.x && ballBox.x  >= paddle2Box.x2 && ballBox.y  <  paddle1Box.y  && ballBox.y2 >= paddle1Box.y  && ballBox.cy <= paddle1Box.cy && this.vy > 0;\n            // const hitP2FromBotton = ballBox.x2 >= paddle2Box.x && ballBox.x  >= paddle1Box.x2 && ballBox.y2 >  paddle2Box.y2 && ballBox.y  <= paddle2Box.y2 && ballBox.cy >= paddle2Box.cy && this.vy < 0;\n\n            // if(hitP1FromTop || hitP2FromTop){\n            //     this.vy *= -1;\n            //     this.collisionDetected();\n            //     console.log(\"HitPaddle! Front Top\");\n            //     return;\n            // }\n            // if(hitP1FromBotton || hitP2FromBotton){\n            //     this.vy *= -1;\n            //     this.collisionDetected();\n            //     console.log(\"HitPaddle! Front Botton\");\n            //     return;\n            // }\n            if (hitP1PadBySide || hitP2PadBySide) {\n                this.vx *= -1;\n                this.direction *= -1;\n                this.collisionDetected();\n                console.log(\"HitPaddle! Front Side\");\n                return;\n            }\n        }\n    }, {\n        key: \"collisionDetected\",\n        value: function collisionDetected() {\n            var sound = this.pingSounds.shift();\n            sound.play();\n            this.pingSounds.push(sound);\n        }\n    }, {\n        key: \"render\",\n        value: function render() {\n            if (!this.isDirty) {\n                return;\n            }\n            this.ballSvg.center(this.cx, this.cy);\n\n            this.isDirty = this.vx !== 0 || this.vy !== 0;\n        }\n    }], [{\n        key: \"createNewBallElement\",\n        value: function createNewBallElement(boardSvg) {\n            var radiosSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            radiosSize = radiosSize === 0 ? 3 + Math.random() * 16 : radiosSize;\n            var ballSvg = boardSvg.circle(radiosSize).center(boardSvg.width / 2, boardSvg.height / 2);\n            return new Ball(ballSvg);\n        }\n    }]);\n\n    return Ball;\n}();\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Board = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _timers = __webpack_require__(20);\n\nvar _Paddle = __webpack_require__(9);\n\nvar _ScoreBoard = __webpack_require__(10);\n\nvar _Ball = __webpack_require__(7);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Board = exports.Board = function () {\n    function Board(gameSettings, boardSvg, p1PaddleSvg, p2PaddleSvg, ballSvg, score1Svg, score2Svg) {\n        _classCallCheck(this, Board);\n\n        this.gameSettings = gameSettings;\n\n        this.boardSvg = boardSvg;\n\n        this.width = boardSvg.width();\n        this.height = boardSvg.height();\n        this.boardBox = this.boardSvg.rbox();\n\n        this.score = new _ScoreBoard.ScoreBoard(score1Svg, score2Svg);\n        this.paddle1 = new _Paddle.Paddle(p1PaddleSvg, this.height);\n        this.paddle2 = new _Paddle.Paddle(p2PaddleSvg, this.height);\n        this.ball = new _Ball.Ball(ballSvg, this.width, this.height);\n    }\n\n    _createClass(Board, [{\n        key: \"reset\",\n        value: function reset() {\n            this.score.reset();\n            this.paddle1.reset();\n            this.paddle2.reset();\n            this.ball.reset();\n        }\n    }, {\n        key: \"start\",\n        value: function start() {\n            this.ball.startMoving();\n        }\n    }, {\n        key: \"update\",\n        value: function update() {\n            var paddle1Box = this.paddle1.bbox();\n            var paddle2Box = this.paddle2.bbox();\n\n            var hitSide = this.ball.updatePos(this.boardBox, paddle1Box, paddle2Box);\n            if (hitSide !== 0) {\n                this.scores(hitSide);\n            }\n        }\n    }, {\n        key: \"scores\",\n        value: function scores(hitSide) {\n            var _this = this;\n\n            this.ball.reset();\n            (0, _timers.setTimeout)(function () {\n                return _this.ball.startMoving(hitSide * -1);\n            }, this.gameSettings.intervalToWaitAfterScoreTimeInMs);\n            this.score.scores(hitSide === -1 ? 2 : 1);\n        }\n    }, {\n        key: \"render\",\n        value: function render() {\n            this.score.render();\n            this.paddle1.render();\n            this.paddle2.render();\n            this.ball.render();\n        }\n    }, {\n        key: \"player1\",\n        get: function get() {\n            return this.paddle1;\n        }\n    }, {\n        key: \"player2\",\n        get: function get() {\n            return this.paddle2;\n        }\n    }, {\n        key: \"scoreBoard\",\n        get: function get() {\n            return this.score;\n        }\n    }]);\n\n    return Board;\n}();\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Paddle = exports.Paddle = function () {\n    function Paddle(paddleSvg, boardHeight) {\n        _classCallCheck(this, Paddle);\n\n        this.paddleSvg = paddleSvg;\n        this.boardHeight = boardHeight;\n\n        this.height = paddleSvg.height();\n        this.originalY = this.y = paddleSvg.y();\n\n        this.speed = 56 / 5;\n\n        this.reset();\n    }\n\n    _createClass(Paddle, [{\n        key: \"bbox\",\n        value: function bbox() {\n            return this.paddleSvg.bbox();\n        }\n    }, {\n        key: \"moveUp\",\n        value: function moveUp() {\n            this.isDirty = true;\n\n            this.y = Math.max(0, this.y - this.speed);\n        }\n    }, {\n        key: \"moveDown\",\n        value: function moveDown() {\n            this.isDirty = true;\n\n            this.y = Math.min(this.boardHeight - this.height, this.y + this.speed);\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this.isDirty = true;\n\n            this.y = this.originalY;\n        }\n    }, {\n        key: \"render\",\n        value: function render() {\n            if (!this.isDirty) {\n                return;\n            }\n            this.paddleSvg.y(this.y);\n\n            this.isDirty = false;\n        }\n    }]);\n\n    return Paddle;\n}();\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ScoreBoard = exports.ScoreBoard = function () {\n    function ScoreBoard(score1Svg, score2Svg) {\n        _classCallCheck(this, ScoreBoard);\n\n        this.score1Svg = score1Svg;\n        this.score2Svg = score2Svg;\n        this.reset();\n    }\n\n    _createClass(ScoreBoard, [{\n        key: \"reset\",\n        value: function reset() {\n            this.isDirty = true;\n            this.player1 = 0;\n            this.player2 = 0;\n        }\n    }, {\n        key: \"scores\",\n        value: function scores(playerThatScore) {\n            this.isDirty = true;\n\n            if (playerThatScore === 1) {\n                this.player1++;\n            }\n            if (playerThatScore === 2) {\n                this.player2++;\n            }\n        }\n    }, {\n        key: \"render\",\n        value: function render() {\n            if (!this.isDirty) {\n                return;\n            }\n\n            this.score1Svg.text(this.player1.toString());\n            this.score2Svg.text(this.player2.toString());\n\n            this.isDirty = false;\n        }\n    }]);\n\n    return ScoreBoard;\n}();\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(12)();\n// imports\n\n\n// module\nexports.push([module.i, \"a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:\\\"\\\";content:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:Silkscreen Web;src:url(\" + __webpack_require__(0) + \");src:url(\" + __webpack_require__(0) + \"?#iefix) format(\\\"embedded-opentype\\\"),url(\" + __webpack_require__(15) + \") format(\\\"woff\\\"),url(\" + __webpack_require__(14) + \") format(\\\"truetype\\\"),url(\" + __webpack_require__(13) + \"#silkscreennormal) format(\\\"svg\\\");font-weight:400;font-style:normal}html{font-size:16px}body{align-items:center;display:flex;font-family:Silkscreen Web,monotype;height:100vh;justify-content:center;width:100%}h1{font-size:2.5rem;margin-bottom:1rem;text-align:center}.game-board svg{background:#353535;color:#fff;stroke:#fff;fill:#fff;font-size:2rem}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"public/fonts/slkscr-webfont.svg\";\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"public/fonts/slkscr-webfont.ttf\";\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"public/fonts/slkscr-webfont.woff\";\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(16)))\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\tlinkElement.rel = \"stylesheet\";\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.6.4\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Wed Feb 07 2018 22:59:25 GMT+0100 (Mitteleuropäische Zeit)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function(){\r\n      return factory(root, root.document)\r\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// The main wrapping element\r\nvar SVG = this.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        return array\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent, withData) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(parent.node.parentNode.nodeName == '#document') return null // #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // prepare value list for morphing\r\n    if(SVG.regex.delimiter.test(from)) return new SVG.Array(from).morph(to)\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n;[  'click'\r\n  , 'dblclick'\r\n  , 'mousedown'\r\n  , 'mouseup'\r\n  , 'mouseover'\r\n  , 'mouseout'\r\n  , 'mousemove'\r\n  // , 'mouseenter' -> not supported by IE\r\n  // , 'mouseleave' -> not supported by IE\r\n  , 'touchstart'\r\n  , 'touchmove'\r\n  , 'touchleave'\r\n  , 'touchend'\r\n  , 'touchcancel' ].forEach(function(event) {\r\n\r\n  // add event to SVG.Element\r\n  SVG.Element.prototype[event] = function(f) {\r\n    // bind event to element rather than element node\r\n    SVG.on(this.node, event, f)\r\n    return this\r\n  }\r\n})\r\n\r\n// Initialize listeners stack\r\nSVG.listeners = []\r\nSVG.handlerMap = []\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function(node, event, listener, binding, options) {\r\n  // create listener, get object-index\r\n  var l     = listener.bind(binding || node.instance || node)\r\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n    , ev    = event.split('.')[0]\r\n    , ns    = event.split('.')[1] || '*'\r\n\r\n\r\n  // ensure valid object\r\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\r\n  if(!listener._svgjsListenerId)\r\n    listener._svgjsListenerId = ++SVG.listenerId\r\n\r\n  // reference listener\r\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\r\n\r\n  // add listener\r\n  node.addEventListener(ev, l, options || false)\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function(node, event, listener) {\r\n  var index = SVG.handlerMap.indexOf(node)\r\n    , ev    = event && event.split('.')[0]\r\n    , ns    = event && event.split('.')[1]\r\n    , namespace = ''\r\n\r\n  if(index == -1) return\r\n\r\n  if (listener) {\r\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\r\n    if(!listener) return\r\n\r\n    // remove listener reference\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n      // remove listener\r\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\r\n      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n    }\r\n\r\n  } else if (ns && ev) {\r\n    // remove all listeners for a namespaced event\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n      for (listener in SVG.listeners[index][ev][ns])\r\n        SVG.off(node, [ev, ns].join('.'), listener)\r\n\r\n      delete SVG.listeners[index][ev][ns]\r\n    }\r\n\r\n  } else if (ns){\r\n    // remove all listeners for a specific namespace\r\n    for(event in SVG.listeners[index]){\r\n        for(namespace in SVG.listeners[index][event]){\r\n            if(ns === namespace){\r\n                SVG.off(node, [event, ns].join('.'))\r\n            }\r\n        }\r\n    }\r\n\r\n  } else if (ev) {\r\n    // remove all listeners for the event\r\n    if (SVG.listeners[index][ev]) {\r\n      for (namespace in SVG.listeners[index][ev])\r\n        SVG.off(node, [ev, namespace].join('.'))\r\n\r\n      delete SVG.listeners[index][ev]\r\n    }\r\n\r\n  } else {\r\n    // remove all listeners on a given node\r\n    for (event in SVG.listeners[index])\r\n      SVG.off(node, event)\r\n\r\n    delete SVG.listeners[index]\r\n    delete SVG.handlerMap[index]\r\n\r\n  }\r\n}\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function(event, listener, binding, options) {\r\n    SVG.on(this.node, event, listener, binding, options)\r\n\r\n    return this\r\n  }\r\n  // Unbind event from listener\r\n, off: function(event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n\r\n    return this\r\n  }\r\n  // Fire given event\r\n, fire: function(event, data) {\r\n\r\n    // Dispatch event\r\n    if(event instanceof window.Event){\r\n        this.node.dispatchEvent(event)\r\n    }else{\r\n        this.node.dispatchEvent(event = new window.CustomEvent(event, {detail:data, cancelable: true}))\r\n    }\r\n\r\n    this._event = event\r\n    return this\r\n  }\r\n, event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      return this.node.parentNode.nodeName == '#document' ? null : this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    // Set initial state\r\n    Array.isArray(members) ? this.members = members : this.clear()\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = url.toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEvent = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(17);\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d3dc79484772af2ff822","module.exports = __webpack_public_path__ + \"public/fonts/slkscr-webfont.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/fonts/slkscr-webfont.eot\n// module id = 0\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 1\n// module chunks = 0","import { Board } from \"./Board.js\";\r\nimport SVG from \"svg.js\";\r\n\r\nexport default class Game {\r\n\r\n\tconstructor(gameSettings) {\r\n        const boardSvg = SVG.get(\"game-svg\");\r\n        const p1PaddleSvg = SVG.get(\"p1Paddle\");\r\n        const p2PaddleSvg = SVG.get(\"p2Paddle\");\r\n        const ballSvg = SVG.get(\"ball\");\r\n        const score1Svg = SVG.get(\"p1Score\");\r\n        const score2Svg = SVG.get(\"p2Score\");\r\n\r\n        this.gameSettings = gameSettings;\r\n\r\n        this.board = new Board(gameSettings, boardSvg, p1PaddleSvg, p2PaddleSvg, ballSvg, score1Svg, score2Svg);\r\n\t}\r\n\r\n    player1MoveUp() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.player1.moveUp();\r\n    }\r\n    player1MoveDown() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.player1.moveDown();\r\n    }\r\n    player2MoveUp() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.player2.moveUp();\r\n    }\r\n    player2MoveDown() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.player2.moveDown();\r\n    }\r\n\r\n    // get scores() {\r\n    //     return this.board.scoreBoard.scores;\r\n    // }\r\n\r\n    reset() {\r\n        this.board.reset()\r\n        this.isStarted = false;\r\n        this.isPaused = true;\r\n    }\r\n\r\n    startOrPause() {\r\n        if(!this.isStarted){\r\n            this.reset();\r\n            this.board.start();\r\n        }\r\n        this.isPaused = !this.isPaused;\r\n        this.isStarted = true;\r\n    }\r\n\r\n\tgameloop() {\r\n        if(!this.isPaused && this.isStarted){\r\n            this.board.update();\r\n        }\r\n        this.board.render();\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/partials/Game.js","export const KEYS = {\r\n    p1Up: \"KeyA\",        // player 1 up key\r\n    p1Down: \"KeyZ\",        // player 1 down key\r\n    p2Up: \"ArrowUp\",    // player 2 up key\r\n    p2Down: \"ArrowDown\",// player 2 down key\r\n    gameStart: \"Space\",\r\n}\r\n\r\nexport const GameSettings = {\r\n    maxScroe: 10,\r\n    intervalToWaitAfterScoreTimeInMs : 250,\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/settings.js","export default class KeyPressMapCallBack {\r\n\r\n    constructor(allowedKeysCodesAndCallBacks){\r\n        this.allowedKeysCodesAndCallBacks = allowedKeysCodesAndCallBacks;\r\n        this.keyPressedMap = new Map();\r\n        for (const key of allowedKeysCodesAndCallBacks.keys()) {\r\n            this.keyPressedMap.set(key, false);\r\n        }\r\n    }\r\n\r\n    release(code){\r\n        if(!this.keyPressedMap.has(code)){\r\n            return false;\r\n        }\r\n        this.keyPressedMap.set(code, false);\r\n        return true;\r\n    }\r\n\r\n    press(code){\r\n        if(!this.keyPressedMap.has(code)){\r\n            return false;\r\n        }\r\n        this.keyPressedMap.set(code, true);\r\n        this.callBackFromAllPressedKeys();\r\n        return true;\r\n    }\r\n\r\n    callBackFromAllPressedKeys() {\r\n        for (const [keyCode, isPressed] of this.keyPressedMap) {\r\n            if(isPressed){\r\n                this.allowedKeysCodesAndCallBacks.get(keyCode)();\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/KeyPressMapCallBack.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./game.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./game.css\", function() {\n\t\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./game.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/game.css\n// module id = 5\n// module chunks = 0","import \"./styles/game.css\";\r\nimport { KEYS, GameSettings} from \"./settings.js\";\r\nimport Game from \"./partials/Game\";\r\nimport KeyPressMapCallBack from \"./util/KeyPressMapCallBack.js\"\r\n\r\nconst game = new Game(GameSettings);\r\ngame.reset();\r\n\r\nconst keyMapCallBack = new KeyPressMapCallBack(new Map([\r\n    [ KEYS.p1Up  , () => game.player1MoveUp()   ],\r\n    [ KEYS.p1Down, () => game.player1MoveDown() ],\r\n    [ KEYS.p2Up  , () => game.player2MoveUp()   ],\r\n    [ KEYS.p2Down, () => game.player2MoveDown() ],\r\n    [ KEYS.gameStart, () => game.startOrPause()  ]\r\n]));\r\n\r\ndocument.body.addEventListener(\"keydown\", function (e) {\r\n    const isKeyIsMapped = keyMapCallBack.press(e.code);\r\n    if(isKeyIsMapped){\r\n        event.preventDefault();\r\n    }\r\n});\r\ndocument.body.addEventListener(\"keyup\", function (e) {\r\n    keyMapCallBack.release(e.code);\r\n});\r\n\r\n//TODO, Only Start the render Render after start the game\r\n\r\n(function gameLoop() {\r\n    game.gameloop();\r\n    requestAnimationFrame(gameLoop);\r\n})();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","\r\nexport class Ball{\r\n    constructor(ballSvg){\r\n        this.ballSvg = ballSvg;\r\n        this.cx = this.originalCX = ballSvg.cx();\r\n        this.cy = this.originalCY = ballSvg.cy();\r\n        this.direction = this.vx = this.vy = 0;\r\n        this.reset();\r\n\r\n        this.pingSounds = [ new Audio(\"public/sounds/pong-01.wav\"),\r\n                            new Audio(\"public/sounds/pong-02.wav\"),\r\n                            new Audio(\"public/sounds/pong-03.wav\")];\r\n    }\r\n\r\n    static createNewBallElement(boardSvg, radiosSize = 0) {\r\n        radiosSize = radiosSize === 0 ? (3 + Math.random() * 16) : radiosSize;\r\n        const ballSvg = boardSvg.circle(radiosSize).center(boardSvg.width/2, boardSvg.height/2);\r\n        return new Ball(ballSvg);\r\n    }\r\n\r\n    bbox() {\r\n        return this.ballSvg.bbox();\r\n    }\r\n\r\n    reset() {\r\n        this.isDirty = true;\r\n\r\n        this.cx = this.originalCX;\r\n        this.cy = this.originalCY;\r\n        this.direction = this.vx = this.vy = 0;\r\n    }\r\n\r\n    startMoving(direction = null) {\r\n        this.isDirty = true;\r\n\r\n        this.direction = direction || (Math.random() > .5 ? 1 : -1);\r\n        while(this.vy === 0){\r\n            this.vy = Math.floor(Math.random() * 10 - 5);\r\n        }\r\n        this.vx = this.direction * (6 - Math.abs(this.vy));\r\n    }\r\n\r\n    updatePos(boardBox, paddle1Box, paddle2Box){\r\n        this.isDirty = true;\r\n\r\n        const ballBox = this.bbox();\r\n        const hitSide = this.checkforWallCollision(ballBox, boardBox);\r\n        this.checkforPaddleCollision(ballBox, paddle1Box, paddle2Box)\r\n\r\n        this.cx += this.vx;\r\n        this.cy += this.vy;\r\n\r\n        return hitSide;\r\n    }\r\n\r\n    checkforWallCollision(ballBox, boardBox) {\r\n\t\tconst hitLeft = ballBox.x <= 0;\r\n\t\tconst hitRight = ballBox.x2 >= boardBox.width;\r\n\t\tconst hitTop = ballBox.y <= 0;\r\n\t\tconst hitBottom = ballBox.y2 >= boardBox.height;\r\n\r\n\t\tif (hitLeft) {\r\n            return -1;\r\n        } else if (hitRight) {\r\n            return 1;\r\n\t\t} else if (hitTop || hitBottom) {\r\n            this.vy *= -1;\r\n            this.collisionDetected();\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    checkforPaddleCollision(ballBox, paddle1Box, paddle2Box){\r\n\r\n        const hitP1PadBySide  = ballBox.x <= paddle1Box.x2 && ballBox.y2 >= paddle1Box.y && ballBox.y  <= paddle1Box.y2 && this.vx < 0;\r\n        // const hitP1FromTop    = ballBox.x <= paddle1Box.x2 && ballBox.x2 >= paddle1Box.x && ballBox.y  <  paddle1Box.y  && ballBox.y2 >= paddle1Box.y  && ballBox.cy <= paddle1Box.cy && this.vy > 0;\r\n        // const hitP1FromBotton = ballBox.x <= paddle1Box.x2 && ballBox.x2 >= paddle1Box.x && ballBox.y2 >  paddle1Box.y2 && ballBox.y  <= paddle1Box.y2 && ballBox.cy >= paddle1Box.cy && this.vy < 0;\r\n\r\n        const hitP2PadBySide  = ballBox.x2 >= paddle2Box.x && ballBox.y2 >= paddle2Box.y  && ballBox.y  <= paddle2Box.y2 && this.vx > 0;\r\n        // const hitP2FromTop    = ballBox.x2 >= paddle2Box.x && ballBox.x  >= paddle2Box.x2 && ballBox.y  <  paddle1Box.y  && ballBox.y2 >= paddle1Box.y  && ballBox.cy <= paddle1Box.cy && this.vy > 0;\r\n        // const hitP2FromBotton = ballBox.x2 >= paddle2Box.x && ballBox.x  >= paddle1Box.x2 && ballBox.y2 >  paddle2Box.y2 && ballBox.y  <= paddle2Box.y2 && ballBox.cy >= paddle2Box.cy && this.vy < 0;\r\n\r\n        // if(hitP1FromTop || hitP2FromTop){\r\n        //     this.vy *= -1;\r\n        //     this.collisionDetected();\r\n        //     console.log(\"HitPaddle! Front Top\");\r\n        //     return;\r\n        // }\r\n        // if(hitP1FromBotton || hitP2FromBotton){\r\n        //     this.vy *= -1;\r\n        //     this.collisionDetected();\r\n        //     console.log(\"HitPaddle! Front Botton\");\r\n        //     return;\r\n        // }\r\n        if(hitP1PadBySide || hitP2PadBySide){\r\n            this.vx *= -1;\r\n            this.direction *= -1;\r\n            this.collisionDetected();\r\n            console.log(\"HitPaddle! Front Side\");\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    collisionDetected(){\r\n        const sound = this.pingSounds.shift();\r\n        sound.play();\r\n        this.pingSounds.push(sound);\r\n    }\r\n\r\n    render() {\r\n        if(!this.isDirty){\r\n            return;\r\n        }\r\n        this.ballSvg.center(this.cx, this.cy);\r\n\r\n        this.isDirty = (this.vx !== 0 || this.vy !== 0);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/partials/Ball.js","import { setTimeout } from \"timers\";\r\nimport { Paddle } from \"./Paddle.js\";\r\nimport { ScoreBoard } from \"./ScoreBoard.js\";\r\nimport { Ball } from \"./Ball.js\";\r\n\r\nexport class Board{\r\n    constructor(gameSettings, boardSvg, p1PaddleSvg, p2PaddleSvg, ballSvg, score1Svg, score2Svg){\r\n        this.gameSettings = gameSettings;\r\n\r\n        this.boardSvg = boardSvg;\r\n\r\n        this.width = boardSvg.width();\r\n        this.height = boardSvg.height();\r\n        this.boardBox = this.boardSvg.rbox();\r\n\r\n        this.score = new ScoreBoard(score1Svg, score2Svg);\r\n        this.paddle1 = new Paddle(p1PaddleSvg, this.height);\r\n        this.paddle2 = new Paddle(p2PaddleSvg, this.height);\r\n        this.ball = new Ball(ballSvg, this.width, this.height);\r\n    }\r\n\r\n    get player1() {\r\n        return this.paddle1;\r\n    }\r\n    get player2() {\r\n        return this.paddle2;\r\n    }\r\n    get scoreBoard() {\r\n        return this.score;\r\n    }\r\n\r\n    reset() {\r\n        this.score.reset()\r\n        this.paddle1.reset();\r\n        this.paddle2.reset();\r\n        this.ball.reset();\r\n    }\r\n\r\n    start() {\r\n        this.ball.startMoving();\r\n    }\r\n\r\n    update() {\r\n        const paddle1Box = this.paddle1.bbox();\r\n        const paddle2Box = this.paddle2.bbox();\r\n\r\n        let hitSide = this.ball.updatePos(this.boardBox, paddle1Box, paddle2Box);\r\n        if(hitSide !== 0){\r\n             this.scores(hitSide);\r\n        }\r\n    }\r\n\r\n    scores(hitSide){\r\n        this.ball.reset();\r\n        setTimeout(()=> this.ball.startMoving(hitSide*-1), this.gameSettings.intervalToWaitAfterScoreTimeInMs);\r\n        this.score.scores(hitSide === -1 ? 2 : 1);\r\n    }\r\n\r\n    render() {\r\n        this.score.render()\r\n        this.paddle1.render();\r\n        this.paddle2.render();\r\n        this.ball.render();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/partials/Board.js","\r\nexport class Paddle{\r\n    constructor(paddleSvg, boardHeight) {\r\n        this.paddleSvg = paddleSvg;\r\n        this.boardHeight = boardHeight;\r\n\r\n        this.height = paddleSvg.height();\r\n        this.originalY = this.y = paddleSvg.y();\r\n\r\n        this.speed = (56/5);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    bbox() {\r\n        return this.paddleSvg.bbox();\r\n    }\r\n\r\n    moveUp() {\r\n        this.isDirty = true;\r\n\r\n        this.y = Math.max(0, (this.y - this.speed));\r\n    }\r\n\r\n    moveDown() {\r\n        this.isDirty = true;\r\n\r\n        this.y = Math.min((this.boardHeight - this.height), (this.y + this.speed));\r\n    }\r\n\r\n    reset() {\r\n        this.isDirty = true;\r\n\r\n        this.y = this.originalY;\r\n    }\r\n\r\n    render() {\r\n        if(!this.isDirty){\r\n            return;\r\n        }\r\n        this.paddleSvg.y(this.y);\r\n\r\n        this.isDirty = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/partials/Paddle.js","export class ScoreBoard{\r\n    constructor(score1Svg, score2Svg){\r\n        this.score1Svg = score1Svg;\r\n        this.score2Svg = score2Svg;\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        this.isDirty = true;\r\n        this.player1 = 0;\r\n        this.player2 = 0;\r\n    }\r\n\r\n    scores(playerThatScore){\r\n        this.isDirty = true;\r\n\r\n        if(playerThatScore === 1){\r\n            this.player1++;\r\n        }\r\n        if(playerThatScore === 2){\r\n            this.player2++;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.isDirty){\r\n            return;\r\n        }\r\n\r\n        this.score1Svg.text(this.player1.toString());\r\n        this.score2Svg.text(this.player2.toString());\r\n\r\n        this.isDirty = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/partials/ScoreBoard.js","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:\\\"\\\";content:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:Silkscreen Web;src:url(\" + require(\"../../public/fonts/slkscr-webfont.eot\") + \");src:url(\" + require(\"../../public/fonts/slkscr-webfont.eot\") + \"?#iefix) format(\\\"embedded-opentype\\\"),url(\" + require(\"../../public/fonts/slkscr-webfont.woff\") + \") format(\\\"woff\\\"),url(\" + require(\"../../public/fonts/slkscr-webfont.ttf\") + \") format(\\\"truetype\\\"),url(\" + require(\"../../public/fonts/slkscr-webfont.svg\") + \"#silkscreennormal) format(\\\"svg\\\");font-weight:400;font-style:normal}html{font-size:16px}body{align-items:center;display:flex;font-family:Silkscreen Web,monotype;height:100vh;justify-content:center;width:100%}h1{font-size:2.5rem;margin-bottom:1rem;text-align:center}.game-board svg{background:#353535;color:#fff;stroke:#fff;fill:#fff;font-size:2rem}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/styles/game.css\n// module id = 11\n// module chunks = 0","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 12\n// module chunks = 0","module.exports = __webpack_public_path__ + \"public/fonts/slkscr-webfont.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/fonts/slkscr-webfont.svg\n// module id = 13\n// module chunks = 0","module.exports = __webpack_public_path__ + \"public/fonts/slkscr-webfont.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/fonts/slkscr-webfont.ttf\n// module id = 14\n// module chunks = 0","module.exports = __webpack_public_path__ + \"public/fonts/slkscr-webfont.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/fonts/slkscr-webfont.woff\n// module id = 15\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 16\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 17\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(self.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction createLinkElement(options) {\n\tvar linkElement = document.createElement(\"link\");\n\tlinkElement.rel = \"stylesheet\";\n\tinsertStyleElement(options, linkElement);\n\treturn linkElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else if(obj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\") {\n\t\tstyleElement = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t\tif(styleElement.href)\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\n\t\t};\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyleElement.setAttribute(\"media\", media)\n\t}\n\n\tif(styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink(linkElement, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\tif(sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = linkElement.href;\n\n\tlinkElement.href = URL.createObjectURL(blob);\n\n\tif(oldSrc)\n\t\tURL.revokeObjectURL(oldSrc);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader/addStyles.js\n// module id = 18\n// module chunks = 0","/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.6.4\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Wed Feb 07 2018 22:59:25 GMT+0100 (Mitteleuropäische Zeit)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// The main wrapping element\r\nvar SVG = this.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        return array\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent, withData) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(parent.node.parentNode.nodeName == '#document') return null // #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // prepare value list for morphing\r\n    if(SVG.regex.delimiter.test(from)) return new SVG.Array(from).morph(to)\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n;[  'click'\r\n  , 'dblclick'\r\n  , 'mousedown'\r\n  , 'mouseup'\r\n  , 'mouseover'\r\n  , 'mouseout'\r\n  , 'mousemove'\r\n  // , 'mouseenter' -> not supported by IE\r\n  // , 'mouseleave' -> not supported by IE\r\n  , 'touchstart'\r\n  , 'touchmove'\r\n  , 'touchleave'\r\n  , 'touchend'\r\n  , 'touchcancel' ].forEach(function(event) {\r\n\r\n  // add event to SVG.Element\r\n  SVG.Element.prototype[event] = function(f) {\r\n    // bind event to element rather than element node\r\n    SVG.on(this.node, event, f)\r\n    return this\r\n  }\r\n})\r\n\r\n// Initialize listeners stack\r\nSVG.listeners = []\r\nSVG.handlerMap = []\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function(node, event, listener, binding, options) {\r\n  // create listener, get object-index\r\n  var l     = listener.bind(binding || node.instance || node)\r\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n    , ev    = event.split('.')[0]\r\n    , ns    = event.split('.')[1] || '*'\r\n\r\n\r\n  // ensure valid object\r\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\r\n  if(!listener._svgjsListenerId)\r\n    listener._svgjsListenerId = ++SVG.listenerId\r\n\r\n  // reference listener\r\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\r\n\r\n  // add listener\r\n  node.addEventListener(ev, l, options || false)\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function(node, event, listener) {\r\n  var index = SVG.handlerMap.indexOf(node)\r\n    , ev    = event && event.split('.')[0]\r\n    , ns    = event && event.split('.')[1]\r\n    , namespace = ''\r\n\r\n  if(index == -1) return\r\n\r\n  if (listener) {\r\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\r\n    if(!listener) return\r\n\r\n    // remove listener reference\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n      // remove listener\r\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\r\n      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n    }\r\n\r\n  } else if (ns && ev) {\r\n    // remove all listeners for a namespaced event\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n      for (listener in SVG.listeners[index][ev][ns])\r\n        SVG.off(node, [ev, ns].join('.'), listener)\r\n\r\n      delete SVG.listeners[index][ev][ns]\r\n    }\r\n\r\n  } else if (ns){\r\n    // remove all listeners for a specific namespace\r\n    for(event in SVG.listeners[index]){\r\n        for(namespace in SVG.listeners[index][event]){\r\n            if(ns === namespace){\r\n                SVG.off(node, [event, ns].join('.'))\r\n            }\r\n        }\r\n    }\r\n\r\n  } else if (ev) {\r\n    // remove all listeners for the event\r\n    if (SVG.listeners[index][ev]) {\r\n      for (namespace in SVG.listeners[index][ev])\r\n        SVG.off(node, [ev, namespace].join('.'))\r\n\r\n      delete SVG.listeners[index][ev]\r\n    }\r\n\r\n  } else {\r\n    // remove all listeners on a given node\r\n    for (event in SVG.listeners[index])\r\n      SVG.off(node, event)\r\n\r\n    delete SVG.listeners[index]\r\n    delete SVG.handlerMap[index]\r\n\r\n  }\r\n}\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function(event, listener, binding, options) {\r\n    SVG.on(this.node, event, listener, binding, options)\r\n\r\n    return this\r\n  }\r\n  // Unbind event from listener\r\n, off: function(event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n\r\n    return this\r\n  }\r\n  // Fire given event\r\n, fire: function(event, data) {\r\n\r\n    // Dispatch event\r\n    if(event instanceof window.Event){\r\n        this.node.dispatchEvent(event)\r\n    }else{\r\n        this.node.dispatchEvent(event = new window.CustomEvent(event, {detail:data, cancelable: true}))\r\n    }\r\n\r\n    this._event = event\r\n    return this\r\n  }\r\n, event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      return this.node.parentNode.nodeName == '#document' ? null : this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    // Set initial state\r\n    Array.isArray(members) ? this.members = members : this.clear()\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = url.toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEvent = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/svg.js/dist/svg.js\n// module id = 19\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}