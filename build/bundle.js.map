{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/random-js/lib/random.js","webpack:///(webpack)/buildin/global.js","webpack:///./public/fonts/slkscr-webfont.eot","webpack:///./node_modules/svg.js/dist/svg.js","webpack:///./src/Pong/Ball.js","webpack:///./src/Pong/Score.js","webpack:///./src/Pong/ScoreBoard.js","webpack:///./src/Pong/Paddle.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./src/Pong/Board.js","webpack:///./src/Pong/Game.js","webpack:///./src/settings.js","webpack:///./src/util/KeyPressMapCallBack.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./public/fonts/slkscr-webfont.svg","webpack:///./public/fonts/slkscr-webfont.ttf","webpack:///./public/fonts/slkscr-webfont.woff","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/css-loader/lib/url/escape.js","webpack:///./src/styles/game.css","webpack:///./src/styles/game.css?d2fb","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","root","imul","Math","a","b","al","bl","stringRepeat","String","repeat","x","y","pattern","count","result","Random","engine","this","engines","nativeMath","TypeError","data","index","proto","returnValue","add","generate","addend","toInteger","number","ceil","floor","convertSliceArgument","length","max","min","returnUndefined","random","mt19937","Int32Array","refreshData","k","tmp","uses","next","temper","getUseCount","discard","seed","initial","previous","seedWithArray","source","j","sourceLength","autoSeed","generateEntropyArray","Array","browserCrypto","crypto","getRandomValues","array","push","Date","getTime","int32","uint32","uint53","uint53Full","high","int53","int53Full","integer","isPowerOfTwoMinusOne","downscaleToRange","range","masking","extendedRange","maximum","downscaleToLoopCheckedRange","upscaleWithinU53","highRange","ret","upscaleToLoopCheckedRange","upscaleWithinI53AndLoopCheck","isFinite","RangeError","realZeroToOneInclusive","realZeroToOneExclusive","real","left","right","inclusive","multiplier","bool","isLeastBitTrue","lessThan","numerator","denominator","percentage","scaled","round","probability","pick","begin","end","start","finish","distribution","lowerHex","upperHex","slice","picker","clone","shuffle","downTo","sample","population","sampleSize","tailLength","die","sideCount","dice","dieCount","uuid4","zeroPad","string","zeroCount","toString","pool","Error","charAt","hex","toUpperCase","upper","date","undefined","g","Function","eval","e","window","document","SVG","element","supported","Doc","parser","draw","prepare","ns","xmlns","xlink","svgjs","createElementNS","createSVGRect","did","eid","capitalize","create","setAttribute","extend","methods","key","arguments","pop","Set","inherit","invent","config","initializer","constructor","construct","parent","Container","adopt","node","instance","nodeName","parentNode","SVGElement","Nested","Gradient","Element","type","namespace","defs","setData","JSON","parse","getAttribute","body","getElementsByTagName","documentElement","nested","size","style","poly","polyline","path","native","addEventListener","regex","numberAndUnit","rgb","reference","transforms","whitespace","isHex","isRgb","isCss","isBlank","isNumber","isPercent","isImage","delimiter","hyphen","pathLetters","isPathLetter","numbersWithDots","dots","utils","map","block","il","filter","radians","PI","degrees","filterSVGElements","nodes","el","defaults","attrs","fill-opacity","stroke-opacity","stroke-width","stroke-linejoin","stroke-linecap","fill","stroke","opacity","cx","cy","width","height","rx","ry","offset","stop-opacity","stop-color","font-size","font-family","text-anchor","Color","color","match","test","exec","replace","parseInt","substring","join","toHex","compToHex","toRgb","brightness","morph","destination","at","pos","isColor","fallback","valueOf","lastValue","lastDestination","settle","seen","indexOf","isArray","split","trim","parseFloat","reverse","array_clone","arr","PointArray","toLine","x1","y1","x2","y2","points","len","move","box","bbox","isNaN","getBBox","pathHandlers","M","p0","L","H","V","C","S","Q","T","Z","A","mlhvqtcsa","jl","PathArray","arrayToString","equalCommands","pathArray","sourceArray","destinationArray","paramCnt","pathRegReplace","reduce","prev","curr","concat","Point","Number","unit","toJSON","plus","minus","times","divide","to","relative","_stroke","_event","dom","attr","center","proportionalSize","withData","writeDataToDom","assignNewId","childNodes","id","cloneNode","after","remove","removeElement","addTo","put","putIn","inside","show","hide","visible","classes","hasClass","addClass","removeClass","toggleClass","matches","doc","parents","selector","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","svg","well","createElement","Parent","appendChild","innerHTML","firstChild","each","lines","fn","removeAttribute","keys","stringify","is","obj","easing","-","<>","cos",">","sin","<","from","MorphObj","Situation","init","reversed","reversing","duration","delay","ease","loop","loops","animations","styles","once","FX","_target","situations","active","situation","paused","lastPos","absPos","_speed","animate","queue","target","timeToAbsPos","timestamp","absPosToTime","startAnimFrame","stopAnimFrame","animationFrame","requestAnimationFrame","step","bind","cancelAnimationFrame","startCurrent","initAnimations","shift","dequeue","stop","initialTransformation","matrixify","clearQueue","clearCurrent","jumpToEnd","atEnd","reset","temp","atStart","isAbsPos","durDivSpd","speed","pause","last","play","progress","easeIt","on","wrapper","detail","off","_callStart","during","eased","afterAll","duringAll","method","args","ignoreTime","absPosInt","lastLoop","Boolean","fire","fx","eachAt","self","apply","Matrix","multiply","undo","extract","matrix","isEased","setTimeout","v","G","transform","num","Text","plot","leading","viewbox","ViewBox","update","Stop","Box","top","fullBox","merge","xMin","Infinity","xMax","yMin","yMax","pts","forEach","BBox","contains","Exception","topParent","Shape","clientLeft","clientTop","clientWidth","clientHeight","tbox","console","warn","rbox","RBox","getBoundingClientRect","addOffset","pageXOffset","pageYOffset","screenCTM","inverse","base","arrayToMatrix","abcdef","px","deltaTransformPoint","py","skewX","atan2","f","transformedX","sqrt","transformedY","skewY","scaleX","scaleY","rotation","parseMatrix","translate","scale","around","rotate","flip","skew","tan","createSVGMatrix","ctm","getCTM","rect","getScreenCTM","point","createSVGPoint","matrixTransform","attributes","nodeValue","image","Image","setAttributeNS","rebuild","ensureCentre","Rotate","Scale","Skew","Translate","untransform","str","kv","toParent","pCtm","toDoc","Transformation","inversed","params","_undo","cssText","camelCase","children","insertBefore","has","first","deep","removeChild","clear","hasChildNodes","lastChild","_defs","ungroup","depth","Defs","flatten","view","we","he","wm","hm","reg","offsetWidth","offsetHeight","zoom","event","listeners","handlerMap","listenerId","listener","binding","options","ev","_svgjsListenerId","removeEventListener","Event","dispatchEvent","CustomEvent","cancelable","gbox","trans","group","siblings","position","forward","backward","front","back","before","Mask","targets","unmask","mask","maskWith","masker","ClipPath","unclip","clip","clipWith","clipper","gradient","fy","Pattern","patternUnits","getElementById","version","spof","Bare","words","text","createTextNode","Symbol","symbol","Use","file","use","Rect","Circle","circle","Ellipse","ellipse","Line","line","Polyline","Polygon","polygon","_array","morphArray","Path","load","url","img","_loaded","ratio","_error","src","loaded","error","_rebuild","_build","oy","nodeType","newLined","textContent","build","tspan","newLine","textPath","blankLineOffset","dy","plain","Tspan","dx","t","getComputedTextLength","TextPath","track","link","linkTo","Marker","ref","marker","sugar","prefix","toLowerCase","comp","w","h","extension","dmove","radius","getTotalLength","pointAt","getPointAtLength","font","members","elements","splice","set","remember","memory","forget","_memory","idFromReference","select","query","querySelectorAll","bubbles","createEvent","initCustomEvent","lastTime","vendors","callback","currTime","timeToCall","clearTimeout","factory","_randomJs","default","Ball","ballSvg","autoRespawn","isMute","_classCallCheck","autoRespawnInternal","originalCX","originalCY","direction","vx","vy","pingSounds","Audio","isDirty","isMoving","abs","boardBox","paddle1Box","paddle2Box","ballBox","hitSide","checkforWallCollision","checkforPaddleCollision","hitLeft","hitRight","hitTop","hitBottom","collisionDetected","hitP1PadBySide","hitP2PadBySide","sound","boardSvg","radiusSize","Score","scoreSvg","scoreInternal","score","_Score","ScoreBoard","score1Svg","score2Svg","player1","_Score2","player2","playerThatScore","scores","render","player1Score","player2Score","Paddle","paddleSvg","boardHeight","paddleSpeedFunction","originHeight","originalY","calculateSpeed","updateSize","myScore","opponentScore","ajust","newH","moveDown","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","versions","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","cwd","chdir","dir","umask","global","setImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","getPrototypeOf","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","script","onreadystatechange","attachEvent","task","clearImmediate","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","_timers","_Paddle","_ScoreBoard","_Ball","_randomJs2","Board","gameSettings","p1PaddleSvg","p2PaddleSvg","p1WinnerSvg","p2WinnerSvg","paddle1","paddleSpeedCalculatorFunc","paddle2","balls","fireBall","playerFired","ball","createNewBallElement","firstBallRadius","isGameMute","startMovingTo","randomBallMinRadius","randomBallMaxRadius","maxOfBallsInGame","startMoving","intervalToNewBallStartInARoundInMs","removeBalls","addBall","removeBall","_this","updatePos","intervalToWaitAfterScoreToNewRoundInMs","maxScore","endOfGame","scoreBoard","winningPalyer","_Board","_svg","Game","_svg2","gamePauseTextSvg","board","isPaused","moveUp","player1FireBall","player2FireBall","isStarted","KEYS","p1Up","p1Down","p1Fire","p2Up","p2Down","p2Fire","gameStart","GameSettings","KeyPressMapCallBack","allowedKeysCodesAndCallBacks","keyPressedMap","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","err","return","code","callBackFromAllPressedKeys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref","_ref2","_slicedToArray","keyCode","css","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","memo","stylesInDom","isOldIE","all","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","refs","parts","addStyle","listToStyles","list","newStyles","part","media","sourceMap","insertStyleElement","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","removeStyleElement","idx","createStyleElement","addAttrs","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","unescape","encodeURIComponent","blob","oldSrc","href","styleSheet","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","cssNode","useSourceMap","content","cssMapping","sourceMapping","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","escape","hmr","locals","_settings","game","_Game2","keyMapCallBack","_KeyPressMapCallBack2","player1MoveUp","player1MoveDown","player2MoveUp","player2MoveDown","startOrPause","press","preventDefault","release","gameLoop","gameloop"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","/*jshint eqnull:true*/\n(function (root) {\n  \"use strict\";\n\n  var GLOBAL_KEY = \"Random\";\n\n  var imul = (typeof Math.imul !== \"function\" || Math.imul(0xffffffff, 5) !== -5 ?\n    function (a, b) {\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0;\n    } :\n    Math.imul);\n\n  var stringRepeat = (typeof String.prototype.repeat === \"function\" && \"x\".repeat(3) === \"xxx\" ?\n    function (x, y) {\n      return x.repeat(y);\n    } : function (pattern, count) {\n      var result = \"\";\n      while (count > 0) {\n        if (count & 1) {\n          result += pattern;\n        }\n        count >>= 1;\n        pattern += pattern;\n      }\n      return result;\n    });\n\n  function Random(engine) {\n    if (!(this instanceof Random)) {\n      return new Random(engine);\n    }\n\n    if (engine == null) {\n      engine = Random.engines.nativeMath;\n    } else if (typeof engine !== \"function\") {\n      throw new TypeError(\"Expected engine to be a function, got \" + typeof engine);\n    }\n    this.engine = engine;\n  }\n  var proto = Random.prototype;\n\n  Random.engines = {\n    nativeMath: function () {\n      return (Math.random() * 0x100000000) | 0;\n    },\n    mt19937: (function (Int32Array) {\n      // http://en.wikipedia.org/wiki/Mersenne_twister\n      function refreshData(data) {\n        var k = 0;\n        var tmp = 0;\n        for (;\n          (k | 0) < 227; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k + 397) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        for (;\n          (k | 0) < 623; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k - 227) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        tmp = (data[623] & 0x80000000) | (data[0] & 0x7fffffff);\n        data[623] = data[396] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n      }\n\n      function temper(value) {\n        value ^= value >>> 11;\n        value ^= (value << 7) & 0x9d2c5680;\n        value ^= (value << 15) & 0xefc60000;\n        return value ^ (value >>> 18);\n      }\n\n      function seedWithArray(data, source) {\n        var i = 1;\n        var j = 0;\n        var sourceLength = source.length;\n        var k = Math.max(sourceLength, 624) | 0;\n        var previous = data[0] | 0;\n        for (;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x0019660d)) + (source[j] | 0) + (j | 0)) | 0;\n          i = (i + 1) | 0;\n          ++j;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n          if (j >= sourceLength) {\n            j = 0;\n          }\n        }\n        for (k = 623;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x5d588b65)) - i) | 0;\n          i = (i + 1) | 0;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n        }\n        data[0] = 0x80000000;\n      }\n\n      function mt19937() {\n        var data = new Int32Array(624);\n        var index = 0;\n        var uses = 0;\n\n        function next() {\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n\n          var value = data[index];\n          index = (index + 1) | 0;\n          uses += 1;\n          return temper(value) | 0;\n        }\n        next.getUseCount = function() {\n          return uses;\n        };\n        next.discard = function (count) {\n          uses += count;\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n          while ((count - index) > 624) {\n            count -= 624 - index;\n            refreshData(data);\n            index = 0;\n          }\n          index = (index + count) | 0;\n          return next;\n        };\n        next.seed = function (initial) {\n          var previous = 0;\n          data[0] = previous = initial | 0;\n\n          for (var i = 1; i < 624; i = (i + 1) | 0) {\n            data[i] = previous = (imul((previous ^ (previous >>> 30)), 0x6c078965) + i) | 0;\n          }\n          index = 624;\n          uses = 0;\n          return next;\n        };\n        next.seedWithArray = function (source) {\n          next.seed(0x012bd6aa);\n          seedWithArray(data, source);\n          return next;\n        };\n        next.autoSeed = function () {\n          return next.seedWithArray(Random.generateEntropyArray());\n        };\n        return next;\n      }\n\n      return mt19937;\n    }(typeof Int32Array === \"function\" ? Int32Array : Array)),\n    browserCrypto: (typeof crypto !== \"undefined\" && typeof crypto.getRandomValues === \"function\" && typeof Int32Array === \"function\") ? (function () {\n      var data = null;\n      var index = 128;\n\n      return function () {\n        if (index >= 128) {\n          if (data === null) {\n            data = new Int32Array(128);\n          }\n          crypto.getRandomValues(data);\n          index = 0;\n        }\n\n        return data[index++] | 0;\n      };\n    }()) : null\n  };\n\n  Random.generateEntropyArray = function () {\n    var array = [];\n    var engine = Random.engines.nativeMath;\n    for (var i = 0; i < 16; ++i) {\n      array[i] = engine() | 0;\n    }\n    array.push(new Date().getTime() | 0);\n    return array;\n  };\n\n  function returnValue(value) {\n    return function () {\n      return value;\n    };\n  }\n\n  // [-0x80000000, 0x7fffffff]\n  Random.int32 = function (engine) {\n    return engine() | 0;\n  };\n  proto.int32 = function () {\n    return Random.int32(this.engine);\n  };\n\n  // [0, 0xffffffff]\n  Random.uint32 = function (engine) {\n    return engine() >>> 0;\n  };\n  proto.uint32 = function () {\n    return Random.uint32(this.engine);\n  };\n\n  // [0, 0x1fffffffffffff]\n  Random.uint53 = function (engine) {\n    var high = engine() & 0x1fffff;\n    var low = engine() >>> 0;\n    return (high * 0x100000000) + low;\n  };\n  proto.uint53 = function () {\n    return Random.uint53(this.engine);\n  };\n\n  // [0, 0x20000000000000]\n  Random.uint53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x200000) {\n        if ((high & 0x3fffff) === 0x200000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low;\n      }\n    }\n  };\n  proto.uint53Full = function () {\n    return Random.uint53Full(this.engine);\n  };\n\n  // [-0x20000000000000, 0x1fffffffffffff]\n  Random.int53 = function (engine) {\n    var high = engine() | 0;\n    var low = engine() >>> 0;\n    return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n  };\n  proto.int53 = function () {\n    return Random.int53(this.engine);\n  };\n\n  // [-0x20000000000000, 0x20000000000000]\n  Random.int53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x400000) {\n        if ((high & 0x7fffff) === 0x400000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n      }\n    }\n  };\n  proto.int53Full = function () {\n    return Random.int53Full(this.engine);\n  };\n\n  function add(generate, addend) {\n    if (addend === 0) {\n      return generate;\n    } else {\n      return function (engine) {\n        return generate(engine) + addend;\n      };\n    }\n  }\n\n  Random.integer = (function () {\n    function isPowerOfTwoMinusOne(value) {\n      return ((value + 1) & value) === 0;\n    }\n\n    function bitmask(masking) {\n      return function (engine) {\n        return engine() & masking;\n      };\n    }\n\n    function downscaleToLoopCheckedRange(range) {\n      var extendedRange = range + 1;\n      var maximum = extendedRange * Math.floor(0x100000000 / extendedRange);\n      return function (engine) {\n        var value = 0;\n        do {\n          value = engine() >>> 0;\n        } while (value >= maximum);\n        return value % extendedRange;\n      };\n    }\n\n    function downscaleToRange(range) {\n      if (isPowerOfTwoMinusOne(range)) {\n        return bitmask(range);\n      } else {\n        return downscaleToLoopCheckedRange(range);\n      }\n    }\n\n    function isEvenlyDivisibleByMaxInt32(value) {\n      return (value | 0) === 0;\n    }\n\n    function upscaleWithHighMasking(masking) {\n      return function (engine) {\n        var high = engine() & masking;\n        var low = engine() >>> 0;\n        return (high * 0x100000000) + low;\n      };\n    }\n\n    function upscaleToLoopCheckedRange(extendedRange) {\n      var maximum = extendedRange * Math.floor(0x20000000000000 / extendedRange);\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() & 0x1fffff;\n          var low = engine() >>> 0;\n          ret = (high * 0x100000000) + low;\n        } while (ret >= maximum);\n        return ret % extendedRange;\n      };\n    }\n\n    function upscaleWithinU53(range) {\n      var extendedRange = range + 1;\n      if (isEvenlyDivisibleByMaxInt32(extendedRange)) {\n        var highRange = ((extendedRange / 0x100000000) | 0) - 1;\n        if (isPowerOfTwoMinusOne(highRange)) {\n          return upscaleWithHighMasking(highRange);\n        }\n      }\n      return upscaleToLoopCheckedRange(extendedRange);\n    }\n\n    function upscaleWithinI53AndLoopCheck(min, max) {\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() | 0;\n          var low = engine() >>> 0;\n          ret = ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n        } while (ret < min || ret > max);\n        return ret;\n      };\n    }\n\n    return function (min, max) {\n      min = Math.floor(min);\n      max = Math.floor(max);\n      if (min < -0x20000000000000 || !isFinite(min)) {\n        throw new RangeError(\"Expected min to be at least \" + (-0x20000000000000));\n      } else if (max > 0x20000000000000 || !isFinite(max)) {\n        throw new RangeError(\"Expected max to be at most \" + 0x20000000000000);\n      }\n\n      var range = max - min;\n      if (range <= 0 || !isFinite(range)) {\n        return returnValue(min);\n      } else if (range === 0xffffffff) {\n        if (min === 0) {\n          return Random.uint32;\n        } else {\n          return add(Random.int32, min + 0x80000000);\n        }\n      } else if (range < 0xffffffff) {\n        return add(downscaleToRange(range), min);\n      } else if (range === 0x1fffffffffffff) {\n        return add(Random.uint53, min);\n      } else if (range < 0x1fffffffffffff) {\n        return add(upscaleWithinU53(range), min);\n      } else if (max - 1 - min === 0x1fffffffffffff) {\n        return add(Random.uint53Full, min);\n      } else if (min === -0x20000000000000 && max === 0x20000000000000) {\n        return Random.int53Full;\n      } else if (min === -0x20000000000000 && max === 0x1fffffffffffff) {\n        return Random.int53;\n      } else if (min === -0x1fffffffffffff && max === 0x20000000000000) {\n        return add(Random.int53, 1);\n      } else if (max === 0x20000000000000) {\n        return add(upscaleWithinI53AndLoopCheck(min - 1, max - 1), 1);\n      } else {\n        return upscaleWithinI53AndLoopCheck(min, max);\n      }\n    };\n  }());\n  proto.integer = function (min, max) {\n    return Random.integer(min, max)(this.engine);\n  };\n\n  // [0, 1] (floating point)\n  Random.realZeroToOneInclusive = function (engine) {\n    return Random.uint53Full(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneInclusive = function () {\n    return Random.realZeroToOneInclusive(this.engine);\n  };\n\n  // [0, 1) (floating point)\n  Random.realZeroToOneExclusive = function (engine) {\n    return Random.uint53(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneExclusive = function () {\n    return Random.realZeroToOneExclusive(this.engine);\n  };\n\n  Random.real = (function () {\n    function multiply(generate, multiplier) {\n      if (multiplier === 1) {\n        return generate;\n      } else if (multiplier === 0) {\n        return function () {\n          return 0;\n        };\n      } else {\n        return function (engine) {\n          return generate(engine) * multiplier;\n        };\n      }\n    }\n\n    return function (left, right, inclusive) {\n      if (!isFinite(left)) {\n        throw new RangeError(\"Expected left to be a finite number\");\n      } else if (!isFinite(right)) {\n        throw new RangeError(\"Expected right to be a finite number\");\n      }\n      return add(\n        multiply(\n          inclusive ? Random.realZeroToOneInclusive : Random.realZeroToOneExclusive,\n          right - left),\n        left);\n    };\n  }());\n  proto.real = function (min, max, inclusive) {\n    return Random.real(min, max, inclusive)(this.engine);\n  };\n\n  Random.bool = (function () {\n    function isLeastBitTrue(engine) {\n      return (engine() & 1) === 1;\n    }\n\n    function lessThan(generate, value) {\n      return function (engine) {\n        return generate(engine) < value;\n      };\n    }\n\n    function probability(percentage) {\n      if (percentage <= 0) {\n        return returnValue(false);\n      } else if (percentage >= 1) {\n        return returnValue(true);\n      } else {\n        var scaled = percentage * 0x100000000;\n        if (scaled % 1 === 0) {\n          return lessThan(Random.int32, (scaled - 0x80000000) | 0);\n        } else {\n          return lessThan(Random.uint53, Math.round(percentage * 0x20000000000000));\n        }\n      }\n    }\n\n    return function (numerator, denominator) {\n      if (denominator == null) {\n        if (numerator == null) {\n          return isLeastBitTrue;\n        }\n        return probability(numerator);\n      } else {\n        if (numerator <= 0) {\n          return returnValue(false);\n        } else if (numerator >= denominator) {\n          return returnValue(true);\n        }\n        return lessThan(Random.integer(0, denominator - 1), numerator);\n      }\n    };\n  }());\n  proto.bool = function (numerator, denominator) {\n    return Random.bool(numerator, denominator)(this.engine);\n  };\n\n  function toInteger(value) {\n    var number = +value;\n    if (number < 0) {\n      return Math.ceil(number);\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function convertSliceArgument(value, length) {\n    if (value < 0) {\n      return Math.max(value + length, 0);\n    } else {\n      return Math.min(value, length);\n    }\n  }\n  Random.pick = function (engine, array, begin, end) {\n    var length = array.length;\n    var start = begin == null ? 0 : convertSliceArgument(toInteger(begin), length);\n    var finish = end === void 0 ? length : convertSliceArgument(toInteger(end), length);\n    if (start >= finish) {\n      return void 0;\n    }\n    var distribution = Random.integer(start, finish - 1);\n    return array[distribution(engine)];\n  };\n  proto.pick = function (array, begin, end) {\n    return Random.pick(this.engine, array, begin, end);\n  };\n\n  function returnUndefined() {\n    return void 0;\n  }\n  var slice = Array.prototype.slice;\n  Random.picker = function (array, begin, end) {\n    var clone = slice.call(array, begin, end);\n    if (!clone.length) {\n      return returnUndefined;\n    }\n    var distribution = Random.integer(0, clone.length - 1);\n    return function (engine) {\n      return clone[distribution(engine)];\n    };\n  };\n\n  Random.shuffle = function (engine, array, downTo) {\n    var length = array.length;\n    if (length) {\n      if (downTo == null) {\n        downTo = 0;\n      }\n      for (var i = (length - 1) >>> 0; i > downTo; --i) {\n        var distribution = Random.integer(0, i);\n        var j = distribution(engine);\n        if (i !== j) {\n          var tmp = array[i];\n          array[i] = array[j];\n          array[j] = tmp;\n        }\n      }\n    }\n    return array;\n  };\n  proto.shuffle = function (array) {\n    return Random.shuffle(this.engine, array);\n  };\n\n  Random.sample = function (engine, population, sampleSize) {\n    if (sampleSize < 0 || sampleSize > population.length || !isFinite(sampleSize)) {\n      throw new RangeError(\"Expected sampleSize to be within 0 and the length of the population\");\n    }\n\n    if (sampleSize === 0) {\n      return [];\n    }\n\n    var clone = slice.call(population);\n    var length = clone.length;\n    if (length === sampleSize) {\n      return Random.shuffle(engine, clone, 0);\n    }\n    var tailLength = length - sampleSize;\n    return Random.shuffle(engine, clone, tailLength - 1).slice(tailLength);\n  };\n  proto.sample = function (population, sampleSize) {\n    return Random.sample(this.engine, population, sampleSize);\n  };\n\n  Random.die = function (sideCount) {\n    return Random.integer(1, sideCount);\n  };\n  proto.die = function (sideCount) {\n    return Random.die(sideCount)(this.engine);\n  };\n\n  Random.dice = function (sideCount, dieCount) {\n    var distribution = Random.die(sideCount);\n    return function (engine) {\n      var result = [];\n      result.length = dieCount;\n      for (var i = 0; i < dieCount; ++i) {\n        result[i] = distribution(engine);\n      }\n      return result;\n    };\n  };\n  proto.dice = function (sideCount, dieCount) {\n    return Random.dice(sideCount, dieCount)(this.engine);\n  };\n\n  // http://en.wikipedia.org/wiki/Universally_unique_identifier\n  Random.uuid4 = (function () {\n    function zeroPad(string, zeroCount) {\n      return stringRepeat(\"0\", zeroCount - string.length) + string;\n    }\n\n    return function (engine) {\n      var a = engine() >>> 0;\n      var b = engine() | 0;\n      var c = engine() | 0;\n      var d = engine() >>> 0;\n\n      return (\n        zeroPad(a.toString(16), 8) +\n        \"-\" +\n        zeroPad((b & 0xffff).toString(16), 4) +\n        \"-\" +\n        zeroPad((((b >> 4) & 0x0fff) | 0x4000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c & 0x3fff) | 0x8000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c >> 4) & 0xffff).toString(16), 4) +\n        zeroPad(d.toString(16), 8));\n    };\n  }());\n  proto.uuid4 = function () {\n    return Random.uuid4(this.engine);\n  };\n\n  Random.string = (function () {\n    // has 2**x chars, for faster uniform distribution\n    var DEFAULT_STRING_POOL = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-\";\n\n    return function (pool) {\n      if (pool == null) {\n        pool = DEFAULT_STRING_POOL;\n      }\n\n      var length = pool.length;\n      if (!length) {\n        throw new Error(\"Expected pool not to be an empty string\");\n      }\n\n      var distribution = Random.integer(0, length - 1);\n      return function (engine, length) {\n        var result = \"\";\n        for (var i = 0; i < length; ++i) {\n          var j = distribution(engine);\n          result += pool.charAt(j);\n        }\n        return result;\n      };\n    };\n  }());\n  proto.string = function (length, pool) {\n    return Random.string(pool)(this.engine, length);\n  };\n\n  Random.hex = (function () {\n    var LOWER_HEX_POOL = \"0123456789abcdef\";\n    var lowerHex = Random.string(LOWER_HEX_POOL);\n    var upperHex = Random.string(LOWER_HEX_POOL.toUpperCase());\n\n    return function (upper) {\n      if (upper) {\n        return upperHex;\n      } else {\n        return lowerHex;\n      }\n    };\n  }());\n  proto.hex = function (length, upper) {\n    return Random.hex(upper)(this.engine, length);\n  };\n\n  Random.date = function (start, end) {\n    if (!(start instanceof Date)) {\n      throw new TypeError(\"Expected start to be a Date, got \" + typeof start);\n    } else if (!(end instanceof Date)) {\n      throw new TypeError(\"Expected end to be a Date, got \" + typeof end);\n    }\n    var distribution = Random.integer(start.getTime(), end.getTime());\n    return function (engine) {\n      return new Date(distribution(engine));\n    };\n  };\n  proto.date = function (start, end) {\n    return Random.date(start, end)(this.engine);\n  };\n\n  if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return Random;\n    });\n  } else if (typeof module !== \"undefined\" && typeof require === \"function\") {\n    module.exports = Random;\n  } else {\n    (function () {\n      var oldGlobal = root[GLOBAL_KEY];\n      Random.noConflict = function () {\n        root[GLOBAL_KEY] = oldGlobal;\n        return this;\n      };\n    }());\n    root[GLOBAL_KEY] = Random;\n  }\n}(this));","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","module.exports = __webpack_public_path__ + \"public/fonts/slkscr-webfont.eot\";","/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.6.4\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Wed Feb 07 2018 22:59:25 GMT+0100 (Mitteleuropäische Zeit)\n*/;\n(function(root, factory) {\r\n  /* istanbul ignore next */\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function(){\r\n      return factory(root, root.document)\r\n    })\r\n  } else if (typeof exports === 'object') {\r\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\r\n  } else {\r\n    root.SVG = factory(root, root.document)\r\n  }\r\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\r\n\r\n// The main wrapping element\r\nvar SVG = this.SVG = function(element) {\r\n  if (SVG.supported) {\r\n    element = new SVG.Doc(element)\r\n\r\n    if(!SVG.parser.draw)\r\n      SVG.prepare()\r\n\r\n    return element\r\n  }\r\n}\r\n\r\n// Default namespaces\r\nSVG.ns    = 'http://www.w3.org/2000/svg'\r\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\r\nSVG.xlink = 'http://www.w3.org/1999/xlink'\r\nSVG.svgjs = 'http://svgjs.com/svgjs'\r\n\r\n// Svg support test\r\nSVG.supported = (function() {\r\n  return !! document.createElementNS &&\r\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\r\n})()\r\n\r\n// Don't bother to continue if SVG is not supported\r\nif (!SVG.supported) return false\r\n\r\n// Element id sequence\r\nSVG.did  = 1000\r\n\r\n// Get next named element id\r\nSVG.eid = function(name) {\r\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\r\n}\r\n\r\n// Method for element creation\r\nSVG.create = function(name) {\r\n  // create element\r\n  var element = document.createElementNS(this.ns, name)\r\n\r\n  // apply unique id\r\n  element.setAttribute('id', this.eid(name))\r\n\r\n  return element\r\n}\r\n\r\n// Method for extending objects\r\nSVG.extend = function() {\r\n  var modules, methods, key, i\r\n\r\n  // Get list of modules\r\n  modules = [].slice.call(arguments)\r\n\r\n  // Get object with extensions\r\n  methods = modules.pop()\r\n\r\n  for (i = modules.length - 1; i >= 0; i--)\r\n    if (modules[i])\r\n      for (key in methods)\r\n        modules[i].prototype[key] = methods[key]\r\n\r\n  // Make sure SVG.Set inherits any newly added methods\r\n  if (SVG.Set && SVG.Set.inherit)\r\n    SVG.Set.inherit()\r\n}\r\n\r\n// Invent new element\r\nSVG.invent = function(config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create == 'function' ?\r\n    config.create :\r\n    function() {\r\n      this.constructor.call(this, SVG.create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit)\r\n    initializer.prototype = new config.inherit\r\n\r\n  // Extend with methods\r\n  if (config.extend)\r\n    SVG.extend(initializer, config.extend)\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct)\r\n    SVG.extend(config.parent || SVG.Container, config.construct)\r\n\r\n  return initializer\r\n}\r\n\r\n// Adopt existing svg elements\r\nSVG.adopt = function(node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance) return node.instance\r\n\r\n  // initialize variables\r\n  var element\r\n\r\n  // adopt with element-specific settings\r\n  if (node.nodeName == 'svg')\r\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\r\n  else if (node.nodeName == 'linearGradient')\r\n    element = new SVG.Gradient('linear')\r\n  else if (node.nodeName == 'radialGradient')\r\n    element = new SVG.Gradient('radial')\r\n  else if (SVG[capitalize(node.nodeName)])\r\n    element = new SVG[capitalize(node.nodeName)]\r\n  else\r\n    element = new SVG.Element(node)\r\n\r\n  // ensure references\r\n  element.type  = node.nodeName\r\n  element.node  = node\r\n  node.instance = element\r\n\r\n  // SVG.Class specific preparations\r\n  if (element instanceof SVG.Doc)\r\n    element.namespace().defs()\r\n\r\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n\r\n  return element\r\n}\r\n\r\n// Initialize parsing element\r\nSVG.prepare = function() {\r\n  // Select document body and create invisible svg element\r\n  var body = document.getElementsByTagName('body')[0]\r\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\r\n\r\n  // Create parser object\r\n  SVG.parser = {\r\n    body: body || document.documentElement\r\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\r\n  , poly: draw.polyline().node\r\n  , path: draw.path().node\r\n  , native: SVG.create('svg')\r\n  }\r\n}\r\n\r\nSVG.parser = {\r\n  native: SVG.create('svg')\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  if(!SVG.parser.draw)\r\n    SVG.prepare()\r\n}, false)\r\n\n// Storage for regular expressions\r\nSVG.regex = {\r\n  // Parse unit value\r\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n  // Parse hex value\r\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n  // Parse rgb value\r\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n  // Parse reference id\r\n, reference:        /#([a-z0-9\\-_]+)/i\r\n\r\n  // splits a transformation chain\r\n, transforms:       /\\)\\s*,?\\s*/\r\n\r\n  // Whitespace\r\n, whitespace:       /\\s/g\r\n\r\n  // Test hex value\r\n, isHex:            /^#[a-f0-9]{3,6}$/i\r\n\r\n  // Test rgb value\r\n, isRgb:            /^rgb\\(/\r\n\r\n  // Test css declaration\r\n, isCss:            /[^:]+:[^;]+;?/\r\n\r\n  // Test for blank string\r\n, isBlank:          /^(\\s+)?$/\r\n\r\n  // Test for numeric string\r\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n  // Test for percent value\r\n, isPercent:        /^-?[\\d\\.]+%$/\r\n\r\n  // Test for image url\r\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n  // split at whitespace and comma\r\n, delimiter:        /[\\s,]+/\r\n\r\n  // The following regex are used to parse the d attribute of a path\r\n\r\n  // Matches all hyphens which are not after an exponent\r\n, hyphen:           /([^e])\\-/gi\r\n\r\n  // Replaces and tests for all path letters\r\n, pathLetters:      /[MLHVCSQTAZ]/gi\r\n\r\n  // yes we need this one, too\r\n, isPathLetter:     /[MLHVCSQTAZ]/i\r\n\r\n  // matches 0.154.23.45\r\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n  // matches .\r\n, dots:             /\\./g\r\n}\r\n\nSVG.utils = {\r\n  // Map function\r\n  map: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      result.push(block(array[i]))\r\n\r\n    return result\r\n  }\r\n\r\n  // Filter function\r\n, filter: function(array, block) {\r\n    var i\r\n      , il = array.length\r\n      , result = []\r\n\r\n    for (i = 0; i < il; i++)\r\n      if (block(array[i]))\r\n        result.push(array[i])\r\n\r\n    return result\r\n  }\r\n\r\n  // Degrees to radians\r\n, radians: function(d) {\r\n    return d % 360 * Math.PI / 180\r\n  }\r\n\r\n  // Radians to degrees\r\n, degrees: function(r) {\r\n    return r * 180 / Math.PI % 360\r\n  }\r\n\r\n, filterSVGElements: function(nodes) {\r\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\r\n  }\r\n\r\n}\n\r\nSVG.defaults = {\r\n  // Default attribute values\r\n  attrs: {\r\n    // fill and stroke\r\n    'fill-opacity':     1\r\n  , 'stroke-opacity':   1\r\n  , 'stroke-width':     0\r\n  , 'stroke-linejoin':  'miter'\r\n  , 'stroke-linecap':   'butt'\r\n  , fill:               '#000000'\r\n  , stroke:             '#000000'\r\n  , opacity:            1\r\n    // position\r\n  , x:                  0\r\n  , y:                  0\r\n  , cx:                 0\r\n  , cy:                 0\r\n    // size\r\n  , width:              0\r\n  , height:             0\r\n    // radius\r\n  , r:                  0\r\n  , rx:                 0\r\n  , ry:                 0\r\n    // gradient\r\n  , offset:             0\r\n  , 'stop-opacity':     1\r\n  , 'stop-color':       '#000000'\r\n    // text\r\n  , 'font-size':        16\r\n  , 'font-family':      'Helvetica, Arial, sans-serif'\r\n  , 'text-anchor':      'start'\r\n  }\r\n\r\n}\n// Module for color convertions\r\nSVG.Color = function(color) {\r\n  var match\r\n\r\n  // initialize defaults\r\n  this.r = 0\r\n  this.g = 0\r\n  this.b = 0\r\n\r\n  if(!color) return\r\n\r\n  // parse color\r\n  if (typeof color === 'string') {\r\n    if (SVG.regex.isRgb.test(color)) {\r\n      // get rgb values\r\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1])\r\n      this.g = parseInt(match[2])\r\n      this.b = parseInt(match[3])\r\n\r\n    } else if (SVG.regex.isHex.test(color)) {\r\n      // get hex values\r\n      match = SVG.regex.hex.exec(fullHex(color))\r\n\r\n      // parse numeric values\r\n      this.r = parseInt(match[1], 16)\r\n      this.g = parseInt(match[2], 16)\r\n      this.b = parseInt(match[3], 16)\r\n\r\n    }\r\n\r\n  } else if (typeof color === 'object') {\r\n    this.r = color.r\r\n    this.g = color.g\r\n    this.b = color.b\r\n\r\n  }\r\n\r\n}\r\n\r\nSVG.extend(SVG.Color, {\r\n  // Default to hex conversion\r\n  toString: function() {\r\n    return this.toHex()\r\n  }\r\n  // Build hex value\r\n, toHex: function() {\r\n    return '#'\r\n      + compToHex(this.r)\r\n      + compToHex(this.g)\r\n      + compToHex(this.b)\r\n  }\r\n  // Build rgb value\r\n, toRgb: function() {\r\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\r\n  }\r\n  // Calculate true brightness\r\n, brightness: function() {\r\n    return (this.r / 255 * 0.30)\r\n         + (this.g / 255 * 0.59)\r\n         + (this.b / 255 * 0.11)\r\n  }\r\n  // Make color morphable\r\n, morph: function(color) {\r\n    this.destination = new SVG.Color(color)\r\n\r\n    return this\r\n  }\r\n  // Get morphed color at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // normalise pos\r\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\r\n\r\n    // generate morphed color\r\n    return new SVG.Color({\r\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\r\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\r\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\r\n    })\r\n  }\r\n\r\n})\r\n\r\n// Testers\r\n\r\n// Test if given value is a color string\r\nSVG.Color.test = function(color) {\r\n  color += ''\r\n  return SVG.regex.isHex.test(color)\r\n      || SVG.regex.isRgb.test(color)\r\n}\r\n\r\n// Test if given value is a rgb object\r\nSVG.Color.isRgb = function(color) {\r\n  return color && typeof color.r == 'number'\r\n               && typeof color.g == 'number'\r\n               && typeof color.b == 'number'\r\n}\r\n\r\n// Test if given value is a color\r\nSVG.Color.isColor = function(color) {\r\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\r\n}\n// Module for array conversion\r\nSVG.Array = function(array, fallback) {\r\n  array = (array || []).valueOf()\r\n\r\n  // if array is empty and fallback is provided, use fallback\r\n  if (array.length == 0 && fallback)\r\n    array = fallback.valueOf()\r\n\r\n  // parse array\r\n  this.value = this.parse(array)\r\n}\r\n\r\nSVG.extend(SVG.Array, {\r\n  // Make array morphable\r\n  morph: function(array) {\r\n    this.destination = this.parse(array)\r\n\r\n    // normalize length of arrays\r\n    if (this.value.length != this.destination.length) {\r\n      var lastValue       = this.value[this.value.length - 1]\r\n        , lastDestination = this.destination[this.destination.length - 1]\r\n\r\n      while(this.value.length > this.destination.length)\r\n        this.destination.push(lastDestination)\r\n      while(this.value.length < this.destination.length)\r\n        this.value.push(lastValue)\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Clean up any duplicate points\r\n, settle: function() {\r\n    // find all unique values\r\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\r\n      if (seen.indexOf(this.value[i]) == -1)\r\n        seen.push(this.value[i])\r\n\r\n    // set new value\r\n    return this.value = seen\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed array\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\r\n\r\n    return new SVG.Array(array)\r\n  }\r\n  // Convert array to string\r\n, toString: function() {\r\n    return this.value.join(' ')\r\n  }\r\n  // Real value\r\n, valueOf: function() {\r\n    return this.value\r\n  }\r\n  // Parse whitespace separated string\r\n, parse: function(array) {\r\n    array = array.valueOf()\r\n\r\n    // if already is an array, no need to parse it\r\n    if (Array.isArray(array)) return array\r\n\r\n    return this.split(array)\r\n  }\r\n  // Strip unnecessary whitespace\r\n, split: function(string) {\r\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n  }\r\n  // Reverse array\r\n, reverse: function() {\r\n    this.value.reverse()\r\n\r\n    return this\r\n  }\r\n, clone: function() {\r\n    var clone = new this.constructor()\r\n    clone.value = array_clone(this.value)\r\n    return clone\r\n  }\r\n})\n// Poly points array\r\nSVG.PointArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [[0,0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PointArray.prototype = new SVG.Array\r\nSVG.PointArray.prototype.constructor = SVG.PointArray\r\n\r\nSVG.extend(SVG.PointArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push(this.value[i].join(','))\r\n\r\n    return array.join(' ')\r\n  }\r\n  // Convert array to line object\r\n, toLine: function() {\r\n    return {\r\n      x1: this.value[0][0]\r\n    , y1: this.value[0][1]\r\n    , x2: this.value[1][0]\r\n    , y2: this.value[1][1]\r\n    }\r\n  }\r\n  // Get morphed array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\r\n      array.push([\r\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\r\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\r\n      ])\r\n\r\n    return new SVG.PointArray(array)\r\n  }\r\n  // Parse point string and flat array\r\n, parse: function(array) {\r\n    var points = []\r\n\r\n    array = array.valueOf()\r\n\r\n    // if it is an array\r\n    if (Array.isArray(array)) {\r\n      // and it is not flat, there is no need to parse it\r\n      if(Array.isArray(array[0])) {\r\n        return array\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples and parse points as floats\r\n    for(var i = 0, len = array.length; i < len; i = i + 2)\r\n      points.push([ array[i], array[i+1] ])\r\n\r\n    return points\r\n  }\r\n  // Move point string\r\n, move: function(x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y))\r\n      for (var i = this.value.length - 1; i >= 0; i--)\r\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\r\n\r\n    return this\r\n  }\r\n  // Resize poly string\r\n, size: function(width, height) {\r\n    var i, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\r\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get bounding box of points\r\n, bbox: function() {\r\n    SVG.parser.poly.setAttribute('points', this.toString())\r\n\r\n    return SVG.parser.poly.getBBox()\r\n  }\r\n})\r\n\nvar pathHandlers = {\r\n  M: function(c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return ['M', p.x, p.y]\r\n  },\r\n  L: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['L', c[0], c[1]]\r\n  },\r\n  H: function(c, p) {\r\n    p.x = c[0]\r\n    return ['H', c[0]]\r\n  },\r\n  V: function(c, p) {\r\n    p.y = c[0]\r\n    return ['V', c[0]]\r\n  },\r\n  C: function(c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\r\n  },\r\n  S: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['S', c[0], c[1], c[2], c[3]]\r\n  },\r\n  Q: function(c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return ['Q', c[0], c[1], c[2], c[3]]\r\n  },\r\n  T: function(c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return ['T', c[0], c[1]]\r\n  },\r\n  Z: function(c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return ['Z']\r\n  },\r\n  A: function(c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\r\n  }\r\n}\r\n\r\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\r\n\r\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\r\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\r\n    return function(c, p, p0) {\r\n      if(i == 'H') c[0] = c[0] + p.x\r\n      else if(i == 'V') c[0] = c[0] + p.y\r\n      else if(i == 'A'){\r\n        c[5] = c[5] + p.x,\r\n        c[6] = c[6] + p.y\r\n      }\r\n      else\r\n        for(var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j%2 ? p.y : p.x)\r\n        }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsa[i].toUpperCase())\r\n}\r\n\r\n// Path points array\r\nSVG.PathArray = function(array, fallback) {\r\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\r\n}\r\n\r\n// Inherit from SVG.Array\r\nSVG.PathArray.prototype = new SVG.Array\r\nSVG.PathArray.prototype.constructor = SVG.PathArray\r\n\r\nSVG.extend(SVG.PathArray, {\r\n  // Convert array to string\r\n  toString: function() {\r\n    return arrayToString(this.value)\r\n  }\r\n  // Move path string\r\n, move: function(x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\r\n        l = this.value[i][0]\r\n\r\n        if (l == 'M' || l == 'L' || l == 'T')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n\r\n        } else if (l == 'H')  {\r\n          this.value[i][1] += x\r\n\r\n        } else if (l == 'V')  {\r\n          this.value[i][1] += y\r\n\r\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n          this.value[i][1] += x\r\n          this.value[i][2] += y\r\n          this.value[i][3] += x\r\n          this.value[i][4] += y\r\n\r\n          if (l == 'C')  {\r\n            this.value[i][5] += x\r\n            this.value[i][6] += y\r\n          }\r\n\r\n        } else if (l == 'A')  {\r\n          this.value[i][6] += x\r\n          this.value[i][7] += y\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Resize path string\r\n, size: function(width, height) {\r\n    // get bounding box of current situation\r\n    var i, l, box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.value.length - 1; i >= 0; i--) {\r\n      l = this.value[i][0]\r\n\r\n      if (l == 'M' || l == 'L' || l == 'T')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'H')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n\r\n      } else if (l == 'V')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\r\n\r\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\r\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\r\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l == 'C')  {\r\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\r\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n\r\n      } else if (l == 'A')  {\r\n        // resize radii\r\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\r\n        this.value[i][2] = (this.value[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\r\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Test if the passed path array use the same path data commands as this path array\r\n, equalCommands: function(pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    equalCommands = this.value.length === pathArray.value.length\r\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\r\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  }\r\n  // Make path array morphable\r\n, morph: function(pathArray) {\r\n    pathArray = new SVG.PathArray(pathArray)\r\n\r\n    if(this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Get morphed path array at given position\r\n, at: function(pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this.value\r\n      , destinationArray = this.destination.value\r\n      , array = [], pathArray = new SVG.PathArray()\r\n      , i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [sourceArray[i][0]]\r\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if(array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] != 0)\r\n        array[i][5] = +(array[i][5] != 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  }\r\n  // Absolutize and parse path to array\r\n, parse: function(array) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof SVG.PathArray) return array.valueOf()\r\n\r\n    // prepare for parsing\r\n    var i, x0, y0, s, seg, arr\r\n      , x = 0\r\n      , y = 0\r\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\r\n\r\n    if(typeof array == 'string'){\r\n\r\n      array = array\r\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\r\n        .trim()                                 // trim\r\n        .split(SVG.regex.delimiter)   // split into array\r\n\r\n    }else{\r\n      array = array.reduce(function(prev, curr){\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var arr = []\r\n      , p = new SVG.Point()\r\n      , p0 = new SVG.Point()\r\n      , index = 0\r\n      , len = array.length\r\n\r\n    do{\r\n      // Test if we have a path letter\r\n      if(SVG.regex.isPathLetter.test(array[index])){\r\n        s = array[index]\r\n        ++index\r\n      // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      }else if(s == 'M'){\r\n        s = 'L'\r\n      }else if(s == 'm'){\r\n        s = 'l'\r\n      }\r\n\r\n      arr.push(pathHandlers[s].call(null,\r\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n          p, p0\r\n        )\r\n      )\r\n\r\n    }while(len > index)\r\n\r\n    return arr\r\n\r\n  }\r\n  // Get bounding box of path\r\n, bbox: function() {\r\n    SVG.parser.path.setAttribute('d', this.toString())\r\n\r\n    return SVG.parser.path.getBBox()\r\n  }\r\n\r\n})\r\n\n// Module for unit convertions\r\nSVG.Number = SVG.invent({\r\n  // Initialize\r\n  create: function(value, unit) {\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit  = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(SVG.regex.numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] == '%')\r\n          this.value /= 100\r\n        else if (unit[5] == 's')\r\n          this.value *= 1000\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n\r\n    } else {\r\n      if (value instanceof SVG.Number) {\r\n        this.value = value.valueOf()\r\n        this.unit  = value.unit\r\n      }\r\n    }\r\n\r\n  }\r\n  // Add methods\r\n, extend: {\r\n    // Stringalize\r\n    toString: function() {\r\n      return (\r\n        this.unit == '%' ?\r\n          ~~(this.value * 1e8) / 1e6:\r\n        this.unit == 's' ?\r\n          this.value / 1e3 :\r\n          this.value\r\n      ) + this.unit\r\n    }\r\n  , toJSON: function() {\r\n      return this.toString()\r\n    }\r\n  , // Convert to primitive\r\n    valueOf: function() {\r\n      return this.value\r\n    }\r\n    // Add number\r\n  , plus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this + number, this.unit || number.unit)\r\n    }\r\n    // Subtract number\r\n  , minus: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this - number, this.unit || number.unit)\r\n    }\r\n    // Multiply number\r\n  , times: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this * number, this.unit || number.unit)\r\n    }\r\n    // Divide number\r\n  , divide: function(number) {\r\n      number = new SVG.Number(number)\r\n      return new SVG.Number(this / number, this.unit || number.unit)\r\n    }\r\n    // Convert to different unit\r\n  , to: function(unit) {\r\n      var number = new SVG.Number(this)\r\n\r\n      if (typeof unit === 'string')\r\n        number.unit = unit\r\n\r\n      return number\r\n    }\r\n    // Make number morphable\r\n  , morph: function(number) {\r\n      this.destination = new SVG.Number(number)\r\n\r\n      if(number.relative) {\r\n        this.destination.value += this.value\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Get morphed number at given position\r\n  , at: function(pos) {\r\n      // Make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // Generate new morphed number\r\n      return new SVG.Number(this.destination)\r\n          .minus(this)\r\n          .times(pos)\r\n          .plus(this)\r\n    }\r\n\r\n  }\r\n})\r\n\n\r\nSVG.Element = SVG.invent({\r\n  // Initialize node\r\n  create: function(node) {\r\n    // make stroke value accessible dynamically\r\n    this._stroke = SVG.defaults.attrs.stroke\r\n    this._event = null\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    if (this.node = node) {\r\n      this.type = node.nodeName\r\n      this.node.instance = this\r\n\r\n      // store current attribute value\r\n      this._stroke = node.getAttribute('stroke') || this._stroke\r\n    }\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return this.attr('y', y)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\r\n    }\r\n    // Move element to given x and y values\r\n  , move: function(x, y) {\r\n      return this.x(x).y(y)\r\n    }\r\n    // Move element by its center\r\n  , center: function(x, y) {\r\n      return this.cx(x).cy(y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return this.attr('width', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('height', height)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .width(new SVG.Number(p.width))\r\n        .height(new SVG.Number(p.height))\r\n    }\r\n    // Clone element\r\n  , clone: function(parent, withData) {\r\n      // write dom data to the dom so the clone can pickup the data\r\n      this.writeDataToDom()\r\n\r\n      // clone element and assign new id\r\n      var clone = assignNewId(this.node.cloneNode(true))\r\n\r\n      // insert the clone in the given parent or after myself\r\n      if(parent) parent.add(clone)\r\n      else this.after(clone)\r\n\r\n      return clone\r\n    }\r\n    // Remove element\r\n  , remove: function() {\r\n      if (this.parent())\r\n        this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n    // Replace element\r\n  , replace: function(element) {\r\n      this.after(element).remove()\r\n\r\n      return element\r\n    }\r\n    // Add element to given container and return self\r\n  , addTo: function(parent) {\r\n      return parent.put(this)\r\n    }\r\n    // Add element to given container and return container\r\n  , putIn: function(parent) {\r\n      return parent.add(this)\r\n    }\r\n    // Get / set id\r\n  , id: function(id) {\r\n      return this.attr('id', id)\r\n    }\r\n    // Checks whether the given point inside the bounding box of the element\r\n  , inside: function(x, y) {\r\n      var box = this.bbox()\r\n\r\n      return x > box.x\r\n          && y > box.y\r\n          && x < box.x + box.width\r\n          && y < box.y + box.height\r\n    }\r\n    // Show element\r\n  , show: function() {\r\n      return this.style('display', '')\r\n    }\r\n    // Hide element\r\n  , hide: function() {\r\n      return this.style('display', 'none')\r\n    }\r\n    // Is element visible?\r\n  , visible: function() {\r\n      return this.style('display') != 'none'\r\n    }\r\n    // Return id on string conversion\r\n  , toString: function() {\r\n      return this.attr('id')\r\n    }\r\n    // Return array of classes on the node\r\n  , classes: function() {\r\n      var attr = this.attr('class')\r\n\r\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\r\n    }\r\n    // Return true if class exists on the node, false otherwise\r\n  , hasClass: function(name) {\r\n      return this.classes().indexOf(name) != -1\r\n    }\r\n    // Add class to the node\r\n  , addClass: function(name) {\r\n      if (!this.hasClass(name)) {\r\n        var array = this.classes()\r\n        array.push(name)\r\n        this.attr('class', array.join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove class from the node\r\n  , removeClass: function(name) {\r\n      if (this.hasClass(name)) {\r\n        this.attr('class', this.classes().filter(function(c) {\r\n          return c != name\r\n        }).join(' '))\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Toggle the presence of a class on the node\r\n  , toggleClass: function(name) {\r\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n    }\r\n    // Get referenced element form attribute value\r\n  , reference: function(attr) {\r\n      return SVG.get(this.attr(attr))\r\n    }\r\n    // Returns the parent element instance\r\n  , parent: function(type) {\r\n      var parent = this\r\n\r\n      // check for parent\r\n      if(!parent.node.parentNode) return null\r\n\r\n      // get parent element\r\n      parent = SVG.adopt(parent.node.parentNode)\r\n\r\n      if(!type) return parent\r\n\r\n      // loop trough ancestors if type is given\r\n      while(parent && parent.node instanceof window.SVGElement){\r\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n        if(parent.node.parentNode.nodeName == '#document') return null // #720\r\n        parent = SVG.adopt(parent.node.parentNode)\r\n      }\r\n    }\r\n    // Get parent document\r\n  , doc: function() {\r\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\r\n    }\r\n    // return array of all ancestors of given type up to the root svg\r\n  , parents: function(type) {\r\n      var parents = [], parent = this\r\n\r\n      do{\r\n        parent = parent.parent(type)\r\n        if(!parent || !parent.node) break\r\n\r\n        parents.push(parent)\r\n      } while(parent.parent)\r\n\r\n      return parents\r\n    }\r\n    // matches the element vs a css selector\r\n  , matches: function(selector){\r\n      return matches(this.node, selector)\r\n    }\r\n    // Returns the svg node to call native svg methods on it\r\n  , native: function() {\r\n      return this.node\r\n    }\r\n    // Import raw svg\r\n  , svg: function(svg) {\r\n      // create temporary holder\r\n      var well = document.createElement('svg')\r\n\r\n      // act as a setter if svg is given\r\n      if (svg && this instanceof SVG.Parent) {\r\n        // dump raw svg\r\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<(\\w+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\r\n\r\n        // transplant nodes\r\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\r\n          this.node.appendChild(well.firstChild.firstChild)\r\n\r\n      // otherwise act as a getter\r\n      } else {\r\n        // create a wrapping svg element in case of partial content\r\n        well.appendChild(svg = document.createElement('svg'))\r\n\r\n        // write svgjs data to the dom\r\n        this.writeDataToDom()\r\n\r\n        // insert a copy of this node\r\n        svg.appendChild(this.node.cloneNode(true))\r\n\r\n        // return target element\r\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\r\n      }\r\n\r\n      return this\r\n    }\r\n  // write svgjs data to the dom\r\n  , writeDataToDom: function() {\r\n\r\n      // dump variables recursively\r\n      if(this.each || this.lines){\r\n        var fn = this.each ? this : this.lines();\r\n        fn.each(function(){\r\n          this.writeDataToDom()\r\n        })\r\n      }\r\n\r\n      // remove previously set data\r\n      this.node.removeAttribute('svgjs:data')\r\n\r\n      if(Object.keys(this.dom).length)\r\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n\r\n      return this\r\n    }\r\n  // set given data to the elements data property\r\n  , setData: function(o){\r\n      this.dom = o\r\n      return this\r\n    }\r\n  , is: function(obj){\r\n      return is(this, obj)\r\n    }\r\n  }\r\n})\r\n\nSVG.easing = {\r\n  '-': function(pos){return pos}\r\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\r\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\r\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\r\n}\r\n\r\nSVG.morph = function(pos){\r\n  return function(from, to) {\r\n    return new SVG.MorphObj(from, to).at(pos)\r\n  }\r\n}\r\n\r\nSVG.Situation = SVG.invent({\r\n\r\n  create: function(o){\r\n    this.init = false\r\n    this.reversed = false\r\n    this.reversing = false\r\n\r\n    this.duration = new SVG.Number(o.duration).valueOf()\r\n    this.delay = new SVG.Number(o.delay).valueOf()\r\n\r\n    this.start = +new Date() + this.delay\r\n    this.finish = this.start + this.duration\r\n    this.ease = o.ease\r\n\r\n    // this.loop is incremented from 0 to this.loops\r\n    // it is also incremented when in an infinite loop (when this.loops is true)\r\n    this.loop = 0\r\n    this.loops = false\r\n\r\n    this.animations = {\r\n      // functionToCall: [list of morphable objects]\r\n      // e.g. move: [SVG.Number, SVG.Number]\r\n    }\r\n\r\n    this.attrs = {\r\n      // holds all attributes which are not represented from a function svg.js provides\r\n      // e.g. someAttr: SVG.Number\r\n    }\r\n\r\n    this.styles = {\r\n      // holds all styles which should be animated\r\n      // e.g. fill-color: SVG.Color\r\n    }\r\n\r\n    this.transforms = [\r\n      // holds all transformations as transformation objects\r\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\r\n    ]\r\n\r\n    this.once = {\r\n      // functions to fire at a specific position\r\n      // e.g. \"0.5\": function foo(){}\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\n\r\nSVG.FX = SVG.invent({\r\n\r\n  create: function(element) {\r\n    this._target = element\r\n    this.situations = []\r\n    this.active = false\r\n    this.situation = null\r\n    this.paused = false\r\n    this.lastPos = 0\r\n    this.pos = 0\r\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\r\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\r\n    this.absPos = 0\r\n    this._speed = 1\r\n  }\r\n\r\n, extend: {\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\r\n     * @param ease function || string Function which should be used for easing or easing keyword\r\n     * @param delay Number indicating the delay before the animation starts\r\n     * @return target || this\r\n     */\r\n    animate: function(o, ease, delay){\r\n\r\n      if(typeof o == 'object'){\r\n        ease = o.ease\r\n        delay = o.delay\r\n        o = o.duration\r\n      }\r\n\r\n      var situation = new SVG.Situation({\r\n        duration: o || 1000,\r\n        delay: delay || 0,\r\n        ease: SVG.easing[ease || '-'] || ease\r\n      })\r\n\r\n      this.queue(situation)\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * sets a delay before the next element of the queue is called\r\n     * @param delay Duration of delay in milliseconds\r\n     * @return this.target()\r\n     */\r\n  , delay: function(delay){\r\n      // The delay is performed by an empty situation with its duration\r\n      // attribute set to the duration of the delay\r\n      var situation = new SVG.Situation({\r\n        duration: delay,\r\n        delay: 0,\r\n        ease: SVG.easing['-']\r\n      })\r\n\r\n      return this.queue(situation)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the target of this animation\r\n     * @param null || target SVG.Element which should be set as new target\r\n     * @return target || this\r\n     */\r\n  , target: function(target){\r\n      if(target && target instanceof SVG.Element){\r\n        this._target = target\r\n        return this\r\n      }\r\n\r\n      return this._target\r\n    }\r\n\r\n    // returns the absolute position at a given time\r\n  , timeToAbsPos: function(timestamp){\r\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\r\n    }\r\n\r\n    // returns the timestamp from a given absolute positon\r\n  , absPosToTime: function(absPos){\r\n      return this.situation.duration/this._speed * absPos + this.situation.start\r\n    }\r\n\r\n    // starts the animationloop\r\n  , startAnimFrame: function(){\r\n      this.stopAnimFrame()\r\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\r\n    }\r\n\r\n    // cancels the animationframe\r\n  , stopAnimFrame: function(){\r\n      window.cancelAnimationFrame(this.animationFrame)\r\n    }\r\n\r\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\r\n  , start: function(){\r\n      // dont start if already started\r\n      if(!this.active && this.situation){\r\n        this.active = true\r\n        this.startCurrent()\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // start the current situation\r\n  , startCurrent: function(){\r\n      this.situation.start = +new Date + this.situation.delay/this._speed\r\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\r\n      return this.initAnimations().step()\r\n    }\r\n\r\n    /**\r\n     * adds a function / Situation to the animation queue\r\n     * @param fn function / situation to add\r\n     * @return this\r\n     */\r\n  , queue: function(fn){\r\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\r\n        this.situations.push(fn)\r\n\r\n      if(!this.situation) this.situation = this.situations.shift()\r\n\r\n      return this\r\n    }\r\n\r\n    /**\r\n     * pulls next element from the queue and execute it\r\n     * @return this\r\n     */\r\n  , dequeue: function(){\r\n      // stop current animation\r\n      this.stop()\r\n\r\n      // get next animation from queue\r\n      this.situation = this.situations.shift()\r\n\r\n      if(this.situation){\r\n        if(this.situation instanceof SVG.Situation) {\r\n          this.start()\r\n        } else {\r\n          // If it is not a SVG.Situation, then it is a function, we execute it\r\n          this.situation.call(this)\r\n        }\r\n      }\r\n\r\n      return this\r\n    }\r\n\r\n    // updates all animations to the current state of the element\r\n    // this is important when one property could be changed from another property\r\n  , initAnimations: function() {\r\n      var i, j, source\r\n      var s = this.situation\r\n\r\n      if(s.init) return this\r\n\r\n      for(i in s.animations){\r\n        source = this.target()[i]()\r\n\r\n        if(!Array.isArray(source)) {\r\n          source = [source]\r\n        }\r\n\r\n        if(!Array.isArray(s.animations[i])) {\r\n          s.animations[i] = [s.animations[i]]\r\n        }\r\n\r\n        //if(s.animations[i].length > source.length) {\r\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\r\n        //}\r\n\r\n        for(j = source.length; j--;) {\r\n          // The condition is because some methods return a normal number instead\r\n          // of a SVG.Number\r\n          if(s.animations[i][j] instanceof SVG.Number)\r\n            source[j] = new SVG.Number(source[j])\r\n\r\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\r\n        }\r\n      }\r\n\r\n      for(i in s.attrs){\r\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\r\n      }\r\n\r\n      for(i in s.styles){\r\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\r\n      }\r\n\r\n      s.initialTransformation = this.target().matrixify()\r\n\r\n      s.init = true\r\n      return this\r\n    }\r\n  , clearQueue: function(){\r\n      this.situations = []\r\n      return this\r\n    }\r\n  , clearCurrent: function(){\r\n      this.situation = null\r\n      return this\r\n    }\r\n    /** stops the animation immediately\r\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\r\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\r\n     * @return this\r\n     */\r\n  , stop: function(jumpToEnd, clearQueue){\r\n      var active = this.active\r\n      this.active = false\r\n\r\n      if(clearQueue){\r\n        this.clearQueue()\r\n      }\r\n\r\n      if(jumpToEnd && this.situation){\r\n        // initialize the situation if it was not\r\n        !active && this.startCurrent()\r\n        this.atEnd()\r\n      }\r\n\r\n      this.stopAnimFrame()\r\n\r\n      return this.clearCurrent()\r\n    }\r\n\r\n    /** resets the element to the state where the current element has started\r\n     * @return this\r\n     */\r\n  , reset: function(){\r\n      if(this.situation){\r\n        var temp = this.situation\r\n        this.stop()\r\n        this.situation = temp\r\n        this.atStart()\r\n      }\r\n      return this\r\n    }\r\n\r\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\r\n  , finish: function(){\r\n\r\n      this.stop(true, false)\r\n\r\n      while(this.dequeue().situation && this.stop(true, false));\r\n\r\n      this.clearQueue().clearCurrent()\r\n\r\n      return this\r\n    }\r\n\r\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\r\n  , atStart: function() {\r\n      return this.at(0, true)\r\n    }\r\n\r\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\r\n  , atEnd: function() {\r\n      if (this.situation.loops === true) {\r\n        // If in a infinite loop, we end the current iteration\r\n        this.situation.loops = this.situation.loop + 1\r\n      }\r\n\r\n      if(typeof this.situation.loops == 'number') {\r\n        // If performing a finite number of loops, we go after all the loops\r\n        return this.at(this.situation.loops, true)\r\n      } else {\r\n        // If no loops, we just go at the end\r\n        return this.at(1, true)\r\n      }\r\n    }\r\n\r\n    // set the internal animation pointer to the specified position and updates the visualisation\r\n    // if isAbsPos is true, pos is treated as an absolute position\r\n  , at: function(pos, isAbsPos){\r\n      var durDivSpd = this.situation.duration/this._speed\r\n\r\n      this.absPos = pos\r\n      // If pos is not an absolute position, we convert it into one\r\n      if (!isAbsPos) {\r\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\r\n        this.absPos += this.situation.loop\r\n      }\r\n\r\n      this.situation.start = +new Date - this.absPos * durDivSpd\r\n      this.situation.finish = this.situation.start + durDivSpd\r\n\r\n      return this.step(true)\r\n    }\r\n\r\n    /**\r\n     * sets or returns the speed of the animations\r\n     * @param speed null || Number The new speed of the animations\r\n     * @return Number || this\r\n     */\r\n  , speed: function(speed){\r\n      if (speed === 0) return this.pause()\r\n\r\n      if (speed) {\r\n        this._speed = speed\r\n        // We use an absolute position here so that speed can affect the delay before the animation\r\n        return this.at(this.absPos, true)\r\n      } else return this._speed\r\n    }\r\n\r\n    // Make loopable\r\n  , loop: function(times, reverse) {\r\n      var c = this.last()\r\n\r\n      // store total loops\r\n      c.loops = (times != null) ? times : true\r\n      c.loop = 0\r\n\r\n      if(reverse) c.reversing = true\r\n      return this\r\n    }\r\n\r\n    // pauses the animation\r\n  , pause: function(){\r\n      this.paused = true\r\n      this.stopAnimFrame()\r\n\r\n      return this\r\n    }\r\n\r\n    // unpause the animation\r\n  , play: function(){\r\n      if(!this.paused) return this\r\n      this.paused = false\r\n      // We use an absolute position here so that the delay before the animation can be paused\r\n      return this.at(this.absPos, true)\r\n    }\r\n\r\n    /**\r\n     * toggle or set the direction of the animation\r\n     * true sets direction to backwards while false sets it to forwards\r\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\r\n     * @return this\r\n     */\r\n  , reverse: function(reversed){\r\n      var c = this.last()\r\n\r\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\r\n      else c.reversed = reversed\r\n\r\n      return this\r\n    }\r\n\r\n\r\n    /**\r\n     * returns a float from 0-1 indicating the progress of the current animation\r\n     * @param eased Boolean indicating whether the returned position should be eased or not\r\n     * @return number\r\n     */\r\n  , progress: function(easeIt){\r\n      return easeIt ? this.situation.ease(this.pos) : this.pos\r\n    }\r\n\r\n    /**\r\n     * adds a callback function which is called when the current animation is finished\r\n     * @param fn Function which should be executed as callback\r\n     * @return number\r\n     */\r\n  , after: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function wrapper(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, c)\r\n              this.off('finished.fx', wrapper) // prevent memory leak\r\n            }\r\n          }\r\n\r\n      this.target().on('finished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // adds a callback which is called whenever one animation step is performed\r\n  , during: function(fn){\r\n      var c = this.last()\r\n        , wrapper = function(e){\r\n            if(e.detail.situation == c){\r\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\r\n            }\r\n          }\r\n\r\n      // see above\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.after(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls after ALL animations in the queue are finished\r\n  , afterAll: function(fn){\r\n      var wrapper = function wrapper(e){\r\n            fn.call(this)\r\n            this.off('allfinished.fx', wrapper)\r\n          }\r\n\r\n      // see above\r\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n    // calls on every animation step for all animations\r\n  , duringAll: function(fn){\r\n      var wrapper = function(e){\r\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\r\n          }\r\n\r\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\r\n\r\n      this.afterAll(function(){\r\n        this.off('during.fx', wrapper)\r\n      })\r\n\r\n      return this._callStart()\r\n    }\r\n\r\n  , last: function(){\r\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\r\n    }\r\n\r\n    // adds one property to the animations\r\n  , add: function(method, args, type){\r\n      this.last()[type || 'animations'][method] = args\r\n      return this._callStart()\r\n    }\r\n\r\n    /** perform one step of the animation\r\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\r\n     *  @return this\r\n     */\r\n  , step: function(ignoreTime){\r\n\r\n      // convert current time to an absolute position\r\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\r\n\r\n      // This part convert an absolute position to a position\r\n      if(this.situation.loops !== false) {\r\n        var absPos, absPosInt, lastLoop\r\n\r\n        // If the absolute position is below 0, we just treat it as if it was 0\r\n        absPos = Math.max(this.absPos, 0)\r\n        absPosInt = Math.floor(absPos)\r\n\r\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\r\n          this.pos = absPos - absPosInt\r\n          lastLoop = this.situation.loop\r\n          this.situation.loop = absPosInt\r\n        } else {\r\n          this.absPos = this.situation.loops\r\n          this.pos = 1\r\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\r\n          lastLoop = this.situation.loop - 1\r\n          this.situation.loop = this.situation.loops\r\n        }\r\n\r\n        if(this.situation.reversing) {\r\n          // Toggle reversed if an odd number of loops as occured since the last call of step\r\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\r\n        }\r\n\r\n      } else {\r\n        // If there are no loop, the absolute position must not be above 1\r\n        this.absPos = Math.min(this.absPos, 1)\r\n        this.pos = this.absPos\r\n      }\r\n\r\n      // while the absolute position can be below 0, the position must not be below 0\r\n      if(this.pos < 0) this.pos = 0\r\n\r\n      if(this.situation.reversed) this.pos = 1 - this.pos\r\n\r\n\r\n      // apply easing\r\n      var eased = this.situation.ease(this.pos)\r\n\r\n      // call once-callbacks\r\n      for(var i in this.situation.once){\r\n        if(i > this.lastPos && i <= eased){\r\n          this.situation.once[i].call(this.target(), this.pos, eased)\r\n          delete this.situation.once[i]\r\n        }\r\n      }\r\n\r\n      // fire during callback with position, eased position and current situation as parameter\r\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\r\n\r\n      // the user may call stop or finish in the during callback\r\n      // so make sure that we still have a valid situation\r\n      if(!this.situation){\r\n        return this\r\n      }\r\n\r\n      // apply the actual animation to every property\r\n      this.eachAt()\r\n\r\n      // do final code when situation is finished\r\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\r\n\r\n        // stop animation callback\r\n        this.stopAnimFrame()\r\n\r\n        // fire finished callback with current situation as parameter\r\n        this.target().fire('finished', {fx:this, situation: this.situation})\r\n\r\n        if(!this.situations.length){\r\n          this.target().fire('allfinished')\r\n\r\n          // Recheck the length since the user may call animate in the afterAll callback\r\n          if(!this.situations.length){\r\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\r\n            this.active = false\r\n          }\r\n        }\r\n\r\n        // start next animation\r\n        if(this.active) this.dequeue()\r\n        else this.clearCurrent()\r\n\r\n      }else if(!this.paused && this.active){\r\n        // we continue animating when we are not at the end\r\n        this.startAnimFrame()\r\n      }\r\n\r\n      // save last eased position for once callback triggering\r\n      this.lastPos = eased\r\n      return this\r\n\r\n    }\r\n\r\n    // calculates the step for every property and calls block with it\r\n  , eachAt: function(){\r\n      var i, len, at, self = this, target = this.target(), s = this.situation\r\n\r\n      // apply animations which can be called trough a method\r\n      for(i in s.animations){\r\n\r\n        at = [].concat(s.animations[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target[i].apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with attr()\r\n      for(i in s.attrs){\r\n\r\n        at = [i].concat(s.attrs[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.attr.apply(target, at)\r\n\r\n      }\r\n\r\n      // apply animation which has to be applied with style()\r\n      for(i in s.styles){\r\n\r\n        at = [i].concat(s.styles[i]).map(function(el){\r\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\r\n        })\r\n\r\n        target.style.apply(target, at)\r\n\r\n      }\r\n\r\n      // animate initialTransformation which has to be chained\r\n      if(s.transforms.length){\r\n\r\n        // get initial initialTransformation\r\n        at = s.initialTransformation\r\n        for(i = 0, len = s.transforms.length; i < len; i++){\r\n\r\n          // get next transformation in chain\r\n          var a = s.transforms[i]\r\n\r\n          // multiply matrix directly\r\n          if(a instanceof SVG.Matrix){\r\n\r\n            if(a.relative){\r\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\r\n            }else{\r\n              at = at.morph(a).at(s.ease(this.pos))\r\n            }\r\n            continue\r\n          }\r\n\r\n          // when transformation is absolute we have to reset the needed transformation first\r\n          if(!a.relative)\r\n            a.undo(at.extract())\r\n\r\n          // and reapply it after\r\n          at = at.multiply(a.at(s.ease(this.pos)))\r\n\r\n        }\r\n\r\n        // set new matrix on element\r\n        target.matrix(at)\r\n      }\r\n\r\n      return this\r\n\r\n    }\r\n\r\n\r\n    // adds an once-callback which is called at a specific position and never again\r\n  , once: function(pos, fn, isEased){\r\n      var c = this.last()\r\n      if(!isEased) pos = c.ease(pos)\r\n\r\n      c.once[pos] = fn\r\n\r\n      return this\r\n    }\r\n\r\n  , _callStart: function() {\r\n      setTimeout(function(){this.start()}.bind(this), 0)\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n, parent: SVG.Element\r\n\r\n  // Add method to parent elements\r\n, construct: {\r\n    // Get fx module or create a new one, then animate with given duration and ease\r\n    animate: function(o, ease, delay) {\r\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\r\n    }\r\n  , delay: function(delay){\r\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\r\n    }\r\n  , stop: function(jumpToEnd, clearQueue) {\r\n      if (this.fx)\r\n        this.fx.stop(jumpToEnd, clearQueue)\r\n\r\n      return this\r\n    }\r\n  , finish: function() {\r\n      if (this.fx)\r\n        this.fx.finish()\r\n\r\n      return this\r\n    }\r\n    // Pause current animation\r\n  , pause: function() {\r\n      if (this.fx)\r\n        this.fx.pause()\r\n\r\n      return this\r\n    }\r\n    // Play paused current animation\r\n  , play: function() {\r\n      if (this.fx)\r\n        this.fx.play()\r\n\r\n      return this\r\n    }\r\n    // Set/Get the speed of the animations\r\n  , speed: function(speed) {\r\n      if (this.fx)\r\n        if (speed == null)\r\n          return this.fx.speed()\r\n        else\r\n          this.fx.speed(speed)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\n// MorphObj is used whenever no morphable object is given\r\nSVG.MorphObj = SVG.invent({\r\n\r\n  create: function(from, to){\r\n    // prepare color for morphing\r\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\r\n    // prepare value list for morphing\r\n    if(SVG.regex.delimiter.test(from)) return new SVG.Array(from).morph(to)\r\n    // prepare number for morphing\r\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\r\n\r\n    // prepare for plain morphing\r\n    this.value = from\r\n    this.destination = to\r\n  }\r\n\r\n, extend: {\r\n    at: function(pos, real){\r\n      return real < 1 ? this.value : this.destination\r\n    },\r\n\r\n    valueOf: function(){\r\n      return this.value\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  // Add animatable attributes\r\n  attr: function(a, v, relative) {\r\n    // apply attributes individually\r\n    if (typeof a == 'object') {\r\n      for (var key in a)\r\n        this.attr(key, a[key])\r\n\r\n    } else {\r\n      this.add(a, v, 'attrs')\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable styles\r\n, style: function(s, v) {\r\n    if (typeof s == 'object')\r\n      for (var key in s)\r\n        this.style(key, s[key])\r\n\r\n    else\r\n      this.add(s, v, 'styles')\r\n\r\n    return this\r\n  }\r\n  // Animatable x-axis\r\n, x: function(x, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({x:x}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(x)\r\n    num.relative = relative\r\n    return this.add('x', num)\r\n  }\r\n  // Animatable y-axis\r\n, y: function(y, relative) {\r\n    if(this.target() instanceof SVG.G){\r\n      this.transform({y:y}, relative)\r\n      return this\r\n    }\r\n\r\n    var num = new SVG.Number(y)\r\n    num.relative = relative\r\n    return this.add('y', num)\r\n  }\r\n  // Animatable center x-axis\r\n, cx: function(x) {\r\n    return this.add('cx', new SVG.Number(x))\r\n  }\r\n  // Animatable center y-axis\r\n, cy: function(y) {\r\n    return this.add('cy', new SVG.Number(y))\r\n  }\r\n  // Add animatable move\r\n, move: function(x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n  // Add animatable center\r\n, center: function(x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n  // Add animatable size\r\n, size: function(width, height) {\r\n    if (this.target() instanceof SVG.Text) {\r\n      // animate font size for Text elements\r\n      this.attr('font-size', width)\r\n\r\n    } else {\r\n      // animate bbox based size for all other elements\r\n      var box\r\n\r\n      if(!width || !height){\r\n        box = this.target().bbox()\r\n      }\r\n\r\n      if(!width){\r\n        width = box.width / box.height  * height\r\n      }\r\n\r\n      if(!height){\r\n        height = box.height / box.width  * width\r\n      }\r\n\r\n      this.add('width' , new SVG.Number(width))\r\n          .add('height', new SVG.Number(height))\r\n\r\n    }\r\n\r\n    return this\r\n  }\r\n  // Add animatable width\r\n, width: function(width) {\r\n    return this.add('width', new SVG.Number(width))\r\n  }\r\n  // Add animatable height\r\n, height: function(height) {\r\n    return this.add('height', new SVG.Number(height))\r\n  }\r\n  // Add animatable plot\r\n, plot: function(a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if(arguments.length == 4) {\r\n      return this.plot([a, b, c, d])\r\n    }\r\n\r\n    return this.add('plot', new (this.target().morphArray)(a))\r\n  }\r\n  // Add leading method\r\n, leading: function(value) {\r\n    return this.target().leading ?\r\n      this.add('leading', new SVG.Number(value)) :\r\n      this\r\n  }\r\n  // Add animatable viewbox\r\n, viewbox: function(x, y, width, height) {\r\n    if (this.target() instanceof SVG.Container) {\r\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n    return this\r\n  }\r\n, update: function(o) {\r\n    if (this.target() instanceof SVG.Stop) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        return this.update({\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        })\r\n      }\r\n\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', o.offset)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\r\n\nSVG.Box = SVG.invent({\r\n  create: function(x, y, width, height) {\r\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\r\n      // chromes getBoundingClientRect has no x and y property\r\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\r\n    } else if (arguments.length == 4) {\r\n      this.x = x\r\n      this.y = y\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n\r\n    // add center, right, bottom...\r\n    fullBox(this)\r\n  }\r\n, extend: {\r\n    // Merge rect box with another, return a new instance\r\n    merge: function(box) {\r\n      var b = new this.constructor()\r\n\r\n      // merge boxes\r\n      b.x      = Math.min(this.x, box.x)\r\n      b.y      = Math.min(this.y, box.y)\r\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\r\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\r\n\r\n      return fullBox(b)\r\n    }\r\n\r\n  , transform: function(m) {\r\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\r\n\r\n      var pts = [\r\n        new SVG.Point(this.x, this.y),\r\n        new SVG.Point(this.x2, this.y),\r\n        new SVG.Point(this.x, this.y2),\r\n        new SVG.Point(this.x2, this.y2)\r\n      ]\r\n\r\n      pts.forEach(function(p) {\r\n        p = p.transform(m)\r\n        xMin = Math.min(xMin,p.x)\r\n        xMax = Math.max(xMax,p.x)\r\n        yMin = Math.min(yMin,p.y)\r\n        yMax = Math.max(yMax,p.y)\r\n      })\r\n\r\n      bbox = new this.constructor()\r\n      bbox.x = xMin\r\n      bbox.width = xMax-xMin\r\n      bbox.y = yMin\r\n      bbox.height = yMax-yMin\r\n\r\n      fullBox(bbox)\r\n\r\n      return bbox\r\n    }\r\n  }\r\n})\r\n\r\nSVG.BBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    // get values if element is given\r\n    if (element instanceof SVG.Element) {\r\n      var box\r\n\r\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\r\n      try {\r\n\r\n        if (!document.documentElement.contains){\r\n          // This is IE - it does not support contains() for top-level SVGs\r\n          var topParent = element.node\r\n          while (topParent.parentNode){\r\n            topParent = topParent.parentNode\r\n          }\r\n          if (topParent != document) throw new Exception('Element not in the dom')\r\n        } else {\r\n          // the element is NOT in the dom, throw error\r\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\r\n        }\r\n\r\n        // find native bbox\r\n        box = element.node.getBBox()\r\n      } catch(e) {\r\n        if(element instanceof SVG.Shape){\r\n          var clone = element.clone(SVG.parser.draw.instance).show()\r\n          box = clone.node.getBBox()\r\n          clone.remove()\r\n        }else{\r\n          box = {\r\n            x:      element.node.clientLeft\r\n          , y:      element.node.clientTop\r\n          , width:  element.node.clientWidth\r\n          , height: element.node.clientHeight\r\n          }\r\n        }\r\n      }\r\n\r\n      SVG.Box.call(this, box)\r\n    }\r\n\r\n  }\r\n\r\n  // Define ancestor\r\n, inherit: SVG.Box\r\n\r\n  // Define Parent\r\n, parent: SVG.Element\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get bounding box\r\n    bbox: function() {\r\n      return new SVG.BBox(this)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.BBox.prototype.constructor = SVG.BBox\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  tbox: function(){\r\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\r\n    return this.rbox(this.doc())\r\n  }\r\n})\r\n\r\nSVG.RBox = SVG.invent({\r\n  // Initialize\r\n  create: function(element) {\r\n    SVG.Box.apply(this, [].slice.call(arguments))\r\n\r\n    if (element instanceof SVG.Element) {\r\n      SVG.Box.call(this, element.node.getBoundingClientRect())\r\n    }\r\n  }\r\n\r\n, inherit: SVG.Box\r\n\r\n  // define Parent\r\n, parent: SVG.Element\r\n\r\n, extend: {\r\n    addOffset: function() {\r\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n      this.x += window.pageXOffset\r\n      this.y += window.pageYOffset\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Constructor\r\n, construct: {\r\n    // Get rect box\r\n    rbox: function(el) {\r\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\r\n      return new SVG.RBox(this).addOffset()\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.RBox.prototype.constructor = SVG.RBox\r\n\nSVG.Matrix = SVG.invent({\r\n  // Initialize\r\n  create: function(source) {\r\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\r\n\r\n    // ensure source as object\r\n    source = source instanceof SVG.Element ?\r\n      source.matrixify() :\r\n    typeof source === 'string' ?\r\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\r\n    arguments.length == 6 ?\r\n      arrayToMatrix([].slice.call(arguments)) :\r\n    Array.isArray(source) ?\r\n      arrayToMatrix(source) :\r\n    typeof source === 'object' ?\r\n      source : base\r\n\r\n    // merge source\r\n    for (i = abcdef.length - 1; i >= 0; --i)\r\n      this[abcdef[i]] = source[abcdef[i]] != null ?\r\n        source[abcdef[i]] : base[abcdef[i]]\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Extract individual transformations\r\n    extract: function() {\r\n      // find delta transform points\r\n      var px    = deltaTransformPoint(this, 0, 1)\r\n        , py    = deltaTransformPoint(this, 1, 0)\r\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\r\n\r\n      return {\r\n        // translation\r\n        x:        this.e\r\n      , y:        this.f\r\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // skew\r\n      , skewX:    -skewX\r\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\r\n        // scale\r\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\r\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\r\n        // rotation\r\n      , rotation: skewX\r\n      , a: this.a\r\n      , b: this.b\r\n      , c: this.c\r\n      , d: this.d\r\n      , e: this.e\r\n      , f: this.f\r\n      , matrix: new SVG.Matrix(this)\r\n      }\r\n    }\r\n    // Clone matrix\r\n  , clone: function() {\r\n      return new SVG.Matrix(this)\r\n    }\r\n    // Morph one matrix into another\r\n  , morph: function(matrix) {\r\n      // store new destination\r\n      this.destination = new SVG.Matrix(matrix)\r\n\r\n      return this\r\n    }\r\n    // Get morphed matrix at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var matrix = new SVG.Matrix({\r\n        a: this.a + (this.destination.a - this.a) * pos\r\n      , b: this.b + (this.destination.b - this.b) * pos\r\n      , c: this.c + (this.destination.c - this.c) * pos\r\n      , d: this.d + (this.destination.d - this.d) * pos\r\n      , e: this.e + (this.destination.e - this.e) * pos\r\n      , f: this.f + (this.destination.f - this.f) * pos\r\n      })\r\n\r\n      return matrix\r\n    }\r\n    // Multiplies by given matrix\r\n  , multiply: function(matrix) {\r\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\r\n    }\r\n    // Inverses matrix\r\n  , inverse: function() {\r\n      return new SVG.Matrix(this.native().inverse())\r\n    }\r\n    // Translate matrix\r\n  , translate: function(x, y) {\r\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\r\n    }\r\n    // Scale matrix\r\n  , scale: function(x, y, cx, cy) {\r\n      // support uniformal scale\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\r\n    }\r\n    // Rotate matrix\r\n  , rotate: function(r, cx, cy) {\r\n      // convert degrees to radians\r\n      r = SVG.utils.radians(r)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\r\n    }\r\n    // Flip matrix on x or y, at a given offset\r\n  , flip: function(a, o) {\r\n      return a == 'x' ?\r\n          this.scale(-1, 1, o, 0) :\r\n        a == 'y' ?\r\n          this.scale(1, -1, 0, o) :\r\n          this.scale(-1, -1, a, o != null ? o : a)\r\n    }\r\n    // Skew\r\n  , skew: function(x, y, cx, cy) {\r\n      // support uniformal skew\r\n      if (arguments.length == 1) {\r\n        y = x\r\n      } else if (arguments.length == 3) {\r\n        cy = cx\r\n        cx = y\r\n        y = x\r\n      }\r\n\r\n      // convert degrees to radians\r\n      x = SVG.utils.radians(x)\r\n      y = SVG.utils.radians(y)\r\n\r\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\r\n    }\r\n    // SkewX\r\n  , skewX: function(x, cx, cy) {\r\n      return this.skew(x, 0, cx, cy)\r\n    }\r\n    // SkewY\r\n  , skewY: function(y, cx, cy) {\r\n      return this.skew(0, y, cx, cy)\r\n    }\r\n    // Transform around a center point\r\n  , around: function(cx, cy, matrix) {\r\n      return this\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\r\n        .multiply(matrix)\r\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\r\n    }\r\n    // Convert to native SVGMatrix\r\n  , native: function() {\r\n      // create new matrix\r\n      var matrix = SVG.parser.native.createSVGMatrix()\r\n\r\n      // update with current values\r\n      for (var i = abcdef.length - 1; i >= 0; i--)\r\n        matrix[abcdef[i]] = this[abcdef[i]]\r\n\r\n      return matrix\r\n    }\r\n    // Convert matrix to string\r\n  , toString: function() {\r\n      return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n    }\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Element\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Get current matrix\r\n    ctm: function() {\r\n      return new SVG.Matrix(this.node.getCTM())\r\n    },\r\n    // Get current screen matrix\r\n    screenCTM: function() {\r\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n         This is needed because FF does not return the transformation matrix\r\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n         However all other Browsers do that */\r\n      if(this instanceof SVG.Nested) {\r\n        var rect = this.rect(1,1)\r\n        var m = rect.node.getScreenCTM()\r\n        rect.remove()\r\n        return new SVG.Matrix(m)\r\n      }\r\n      return new SVG.Matrix(this.node.getScreenCTM())\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\nSVG.Point = SVG.invent({\r\n  // Initialize\r\n  create: function(x,y) {\r\n    var i, source, base = {x:0, y:0}\r\n\r\n    // ensure source as object\r\n    source = Array.isArray(x) ?\r\n      {x:x[0], y:x[1]} :\r\n    typeof x === 'object' ?\r\n      {x:x.x, y:x.y} :\r\n    x != null ?\r\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\r\n\r\n    // merge source\r\n    this.x = source.x\r\n    this.y = source.y\r\n  }\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Clone point\r\n    clone: function() {\r\n      return new SVG.Point(this)\r\n    }\r\n    // Morph one point into another\r\n  , morph: function(x, y) {\r\n      // store new destination\r\n      this.destination = new SVG.Point(x, y)\r\n\r\n      return this\r\n    }\r\n    // Get morphed point at a given position\r\n  , at: function(pos) {\r\n      // make sure a destination is defined\r\n      if (!this.destination) return this\r\n\r\n      // calculate morphed matrix at a given position\r\n      var point = new SVG.Point({\r\n        x: this.x + (this.destination.x - this.x) * pos\r\n      , y: this.y + (this.destination.y - this.y) * pos\r\n      })\r\n\r\n      return point\r\n    }\r\n    // Convert to native SVGPoint\r\n  , native: function() {\r\n      // create new point\r\n      var point = SVG.parser.native.createSVGPoint()\r\n\r\n      // update with current values\r\n      point.x = this.x\r\n      point.y = this.y\r\n\r\n      return point\r\n    }\r\n    // transform point with matrix\r\n  , transform: function(matrix) {\r\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n\r\n  // Get point\r\n  point: function(x, y) {\r\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Set svg element attribute\r\n  attr: function(a, v, n) {\r\n    // act as full getter\r\n    if (a == null) {\r\n      // get an object of attributes\r\n      a = {}\r\n      v = this.node.attributes\r\n      for (n = v.length - 1; n >= 0; n--)\r\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\r\n\r\n      return a\r\n\r\n    } else if (typeof a == 'object') {\r\n      // apply every attribute individually if an object is passed\r\n      for (v in a) this.attr(v, a[v])\r\n\r\n    } else if (v === null) {\r\n        // remove value\r\n        this.node.removeAttribute(a)\r\n\r\n    } else if (v == null) {\r\n      // act as a getter if the first and only argument is not an object\r\n      v = this.node.getAttribute(a)\r\n      return v == null ?\r\n        SVG.defaults.attrs[a] :\r\n      SVG.regex.isNumber.test(v) ?\r\n        parseFloat(v) : v\r\n\r\n    } else {\r\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\r\n      if (a == 'stroke-width')\r\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\r\n      else if (a == 'stroke')\r\n        this._stroke = v\r\n\r\n      // convert image fill and stroke to patterns\r\n      if (a == 'fill' || a == 'stroke') {\r\n        if (SVG.regex.isImage.test(v))\r\n          v = this.doc().defs().image(v, 0, 0)\r\n\r\n        if (v instanceof SVG.Image)\r\n          v = this.doc().defs().pattern(0, 0, function() {\r\n            this.add(v)\r\n          })\r\n      }\r\n\r\n      // ensure correct numeric values (also accepts NaN and Infinity)\r\n      if (typeof v === 'number')\r\n        v = new SVG.Number(v)\r\n\r\n      // ensure full hex color\r\n      else if (SVG.Color.isColor(v))\r\n        v = new SVG.Color(v)\r\n\r\n      // parse array values\r\n      else if (Array.isArray(v))\r\n        v = new SVG.Array(v)\r\n\r\n      // if the passed attribute is leading...\r\n      if (a == 'leading') {\r\n        // ... call the leading method instead\r\n        if (this.leading)\r\n          this.leading(v)\r\n      } else {\r\n        // set given attribute on node\r\n        typeof n === 'string' ?\r\n          this.node.setAttributeNS(n, a, v.toString()) :\r\n          this.node.setAttribute(a, v.toString())\r\n      }\r\n\r\n      // rebuild if required\r\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\r\n        this.rebuild(a, v)\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Add transformations\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // get current matrix\r\n    matrix = new SVG.Matrix(target)\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.multiply(new SVG.Matrix(o)) :\r\n        // absolute\r\n        new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = relative ?\r\n        // relative\r\n        matrix.rotate(o.rotation, o.cx, o.cy) :\r\n        // absolute\r\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      if (!relative) {\r\n        // absolute; multiply inversed values\r\n        var e = matrix.extract()\r\n        o.scaleX = o.scaleX * 1 / e.scaleX\r\n        o.scaleY = o.scaleY * 1 / e.scaleY\r\n      }\r\n\r\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\r\n\r\n      if (!relative) {\r\n        // absolute; reset skew values\r\n        var e = matrix.extract()\r\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\r\n      }\r\n\r\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      if (relative) {\r\n        // relative\r\n        matrix = matrix.translate(o.x, o.y)\r\n      } else {\r\n        // absolute\r\n        if (o.x != null) matrix.e = o.x\r\n        if (o.y != null) matrix.f = o.y\r\n      }\r\n    }\r\n\r\n    return this.attr('transform', matrix)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.FX, {\r\n  transform: function(o, relative) {\r\n    // get target in case of the fx module, otherwise reference this\r\n    var target = this.target()\r\n      , matrix, bbox\r\n\r\n    // act as a getter\r\n    if (typeof o !== 'object') {\r\n      // get current matrix\r\n      matrix = new SVG.Matrix(target).extract()\r\n\r\n      return typeof o === 'string' ? matrix[o] : matrix\r\n    }\r\n\r\n    // ensure relative flag\r\n    relative = !!relative || !!o.relative\r\n\r\n    // act on matrix\r\n    if (o.a != null) {\r\n      matrix = new SVG.Matrix(o)\r\n\r\n    // act on rotation\r\n    } else if (o.rotation != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // apply transformation\r\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\r\n\r\n    // act on scale\r\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure scale values on both axes\r\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\r\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\r\n\r\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\r\n\r\n    // act on skew\r\n    } else if (o.skewX != null || o.skewY != null) {\r\n      // ensure centre point\r\n      ensureCentre(o, target)\r\n\r\n      // ensure skew values on both axes\r\n      o.skewX = o.skewX != null ? o.skewX : 0\r\n      o.skewY = o.skewY != null ? o.skewY : 0\r\n\r\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\r\n\r\n    // act on flip\r\n    } else if (o.flip) {\r\n      if(o.flip == 'x' || o.flip == 'y') {\r\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\r\n      } else {\r\n        if(o.offset == null) {\r\n          bbox = target.bbox()\r\n          o.flip = bbox.cx\r\n          o.offset = bbox.cy\r\n        } else {\r\n          o.flip = o.offset\r\n        }\r\n      }\r\n\r\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\r\n\r\n    // act on translate\r\n    } else if (o.x != null || o.y != null) {\r\n      matrix = new SVG.Translate(o.x, o.y)\r\n    }\r\n\r\n    if(!matrix) return this\r\n\r\n    matrix.relative = relative\r\n\r\n    this.last().transforms.push(matrix)\r\n\r\n    return this._callStart()\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Reset all transformations\r\n  untransform: function() {\r\n    return this.attr('transform', null)\r\n  },\r\n  // merge the whole transformation chain into one matrix and returns it\r\n  matrixify: function() {\r\n\r\n    var matrix = (this.attr('transform') || '')\r\n      // split transformations\r\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\r\n        // generate key => value pairs\r\n        var kv = str.trim().split('(')\r\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\r\n      })\r\n      // merge every transformation into one matrix\r\n      .reduce(function(matrix, transform){\r\n\r\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\r\n        return matrix[transform[0]].apply(matrix, transform[1])\r\n\r\n      }, new SVG.Matrix())\r\n\r\n    return matrix\r\n  },\r\n  // add an element to another parent without changing the visual representation on the screen\r\n  toParent: function(parent) {\r\n    if(this == parent) return this\r\n    var ctm = this.screenCTM()\r\n    var pCtm = parent.screenCTM().inverse()\r\n\r\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n    return this\r\n  },\r\n  // same as above with parent equals root-svg\r\n  toDoc: function() {\r\n    return this.toParent(this.doc())\r\n  }\r\n\r\n})\r\n\r\nSVG.Transformation = SVG.invent({\r\n\r\n  create: function(source, inversed){\r\n\r\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\r\n      return this.constructor.call(this, [].slice.call(arguments))\r\n    }\r\n\r\n    if(Array.isArray(source)){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[i]\r\n      }\r\n    } else if(typeof source == 'object'){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        this[this.arguments[i]] = source[this.arguments[i]]\r\n      }\r\n    }\r\n\r\n    this.inversed = false\r\n\r\n    if(inversed === true){\r\n      this.inversed = true\r\n    }\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    arguments: []\r\n  , method: ''\r\n\r\n  , at: function(pos){\r\n\r\n      var params = []\r\n\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        params.push(this[this.arguments[i]])\r\n      }\r\n\r\n      var m = this._undo || new SVG.Matrix()\r\n\r\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\r\n\r\n      return this.inversed ? m.inverse() : m\r\n\r\n    }\r\n\r\n  , undo: function(o){\r\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\r\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\r\n      }\r\n\r\n      // The method SVG.Matrix.extract which was used before calling this\r\n      // method to obtain a value for the parameter o doesn't return a cx and\r\n      // a cy so we use the ones that were provided to this object at its creation\r\n      o.cx = this.cx\r\n      o.cy = this.cy\r\n\r\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\r\n\r\n      return this\r\n    }\r\n\r\n  }\r\n\r\n})\r\n\r\nSVG.Translate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['transformedX', 'transformedY']\r\n  , method: 'translate'\r\n  }\r\n\r\n})\r\n\r\nSVG.Rotate = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['rotation', 'cx', 'cy']\r\n  , method: 'rotate'\r\n  , at: function(pos){\r\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\r\n      return this.inversed ? m.inverse() : m\r\n    }\r\n  , undo: function(o){\r\n      this._undo = o\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Scale = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\r\n  , method: 'scale'\r\n  }\r\n\r\n})\r\n\r\nSVG.Skew = SVG.invent({\r\n\r\n  parent: SVG.Matrix\r\n, inherit: SVG.Transformation\r\n\r\n, create: function(source, inversed){\r\n    this.constructor.apply(this, [].slice.call(arguments))\r\n  }\r\n\r\n, extend: {\r\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\r\n  , method: 'skew'\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Element, {\r\n  // Dynamic style generator\r\n  style: function(s, v) {\r\n    if (arguments.length == 0) {\r\n      // get full style\r\n      return this.node.style.cssText || ''\r\n\r\n    } else if (arguments.length < 2) {\r\n      // apply every style individually if an object is passed\r\n      if (typeof s == 'object') {\r\n        for (v in s) this.style(v, s[v])\r\n\r\n      } else if (SVG.regex.isCss.test(s)) {\r\n        // parse css string\r\n        s = s.split(/\\s*;\\s*/)\r\n          // filter out suffix ; and stuff like ;;\r\n          .filter(function(e) { return !!e })\r\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\r\n\r\n        // apply every definition individually\r\n        while (v = s.pop()) {\r\n          this.style(v[0], v[1])\r\n        }\r\n      } else {\r\n        // act as a getter if the first and only argument is not an object\r\n        return this.node.style[camelCase(s)]\r\n      }\r\n\r\n    } else {\r\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.Parent = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Returns all child elements\r\n    children: function() {\r\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\r\n        return SVG.adopt(node)\r\n      })\r\n    }\r\n    // Add given element at a position\r\n  , add: function(element, i) {\r\n      if (i == null)\r\n        this.node.appendChild(element.node)\r\n      else if (element.node != this.node.childNodes[i])\r\n        this.node.insertBefore(element.node, this.node.childNodes[i])\r\n\r\n      return this\r\n    }\r\n    // Basically does the same as `add()` but returns the added element instead\r\n  , put: function(element, i) {\r\n      this.add(element, i)\r\n      return element\r\n    }\r\n    // Checks if the given element is a child\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // Gets index of given element\r\n  , index: function(element) {\r\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n    }\r\n    // Get a element at the given index\r\n  , get: function(i) {\r\n      return SVG.adopt(this.node.childNodes[i])\r\n    }\r\n    // Get first child\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get the last child\r\n  , last: function() {\r\n      return this.get(this.node.childNodes.length - 1)\r\n    }\r\n    // Iterates over all children and invokes a given block\r\n  , each: function(block, deep) {\r\n      var i, il\r\n        , children = this.children()\r\n\r\n      for (i = 0, il = children.length; i < il; i++) {\r\n        if (children[i] instanceof SVG.Element)\r\n          block.apply(children[i], [i, children])\r\n\r\n        if (deep && (children[i] instanceof SVG.Container))\r\n          children[i].each(block, deep)\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Remove a given child\r\n  , removeElement: function(element) {\r\n      this.node.removeChild(element.node)\r\n\r\n      return this\r\n    }\r\n    // Remove all elements in this container\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      return this\r\n    }\r\n  , // Get defs\r\n    defs: function() {\r\n      return this.doc().defs()\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.extend(SVG.Parent, {\r\n\r\n  ungroup: function(parent, depth) {\r\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\r\n\r\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\r\n    depth = depth || Infinity\r\n\r\n    this.each(function(){\r\n      if(this instanceof SVG.Defs) return this\r\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.node.firstChild || this.remove()\r\n\r\n    return this\r\n  },\r\n\r\n  flatten: function(parent, depth) {\r\n    return this.ungroup(parent, depth)\r\n  }\r\n\r\n})\nSVG.Container = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n})\n\r\nSVG.ViewBox = SVG.invent({\r\n\r\n  create: function(source) {\r\n    var i, base = [0, 0, 0, 0]\r\n\r\n    var x, y, width, height, box, view, we, he\r\n      , wm   = 1 // width multiplier\r\n      , hm   = 1 // height multiplier\r\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\r\n\r\n    if(source instanceof SVG.Element){\r\n\r\n      we = source\r\n      he = source\r\n      view = (source.attr('viewBox') || '').match(reg)\r\n      box = source.bbox\r\n\r\n      // get dimensions of current node\r\n      width  = new SVG.Number(source.width())\r\n      height = new SVG.Number(source.height())\r\n\r\n      // find nearest non-percentual dimensions\r\n      while (width.unit == '%') {\r\n        wm *= width.value\r\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\r\n        we = we.parent()\r\n      }\r\n      while (height.unit == '%') {\r\n        hm *= height.value\r\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\r\n        he = he.parent()\r\n      }\r\n\r\n      // ensure defaults\r\n      this.x      = 0\r\n      this.y      = 0\r\n      this.width  = width  * wm\r\n      this.height = height * hm\r\n      this.zoom   = 1\r\n\r\n      if (view) {\r\n        // get width and height from viewbox\r\n        x      = parseFloat(view[0])\r\n        y      = parseFloat(view[1])\r\n        width  = parseFloat(view[2])\r\n        height = parseFloat(view[3])\r\n\r\n        // calculate zoom accoring to viewbox\r\n        this.zoom = ((this.width / this.height) > (width / height)) ?\r\n          this.height / height :\r\n          this.width  / width\r\n\r\n        // calculate real pixel dimensions on parent SVG.Doc element\r\n        this.x      = x\r\n        this.y      = y\r\n        this.width  = width\r\n        this.height = height\r\n\r\n      }\r\n\r\n    }else{\r\n\r\n      // ensure source as object\r\n      source = typeof source === 'string' ?\r\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\r\n      Array.isArray(source) ?\r\n        source :\r\n      typeof source == 'object' ?\r\n        [source.x, source.y, source.width, source.height] :\r\n      arguments.length == 4 ?\r\n        [].slice.call(arguments) :\r\n        base\r\n\r\n      this.x = source[0]\r\n      this.y = source[1]\r\n      this.width = source[2]\r\n      this.height = source[3]\r\n    }\r\n\r\n\r\n  }\r\n\r\n, extend: {\r\n\r\n    toString: function() {\r\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n    }\r\n  , morph: function(x, y, width, height){\r\n      this.destination = new SVG.ViewBox(x, y, width, height)\r\n      return this\r\n    }\r\n\r\n  , at: function(pos) {\r\n\r\n      if(!this.destination) return this\r\n\r\n      return new SVG.ViewBox([\r\n          this.x + (this.destination.x - this.x) * pos\r\n        , this.y + (this.destination.y - this.y) * pos\r\n        , this.width + (this.destination.width - this.width) * pos\r\n        , this.height + (this.destination.height - this.height) * pos\r\n      ])\r\n\r\n    }\r\n\r\n  }\r\n\r\n  // Define parent\r\n, parent: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n\r\n    // get/set viewbox\r\n    viewbox: function(x, y, width, height) {\r\n      if (arguments.length == 0)\r\n        // act as a getter if there are no arguments\r\n        return new SVG.ViewBox(this)\r\n\r\n      // otherwise act as a setter\r\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\r\n    }\r\n\r\n  }\r\n\r\n})\n// Add events to elements\r\n;[  'click'\r\n  , 'dblclick'\r\n  , 'mousedown'\r\n  , 'mouseup'\r\n  , 'mouseover'\r\n  , 'mouseout'\r\n  , 'mousemove'\r\n  // , 'mouseenter' -> not supported by IE\r\n  // , 'mouseleave' -> not supported by IE\r\n  , 'touchstart'\r\n  , 'touchmove'\r\n  , 'touchleave'\r\n  , 'touchend'\r\n  , 'touchcancel' ].forEach(function(event) {\r\n\r\n  // add event to SVG.Element\r\n  SVG.Element.prototype[event] = function(f) {\r\n    // bind event to element rather than element node\r\n    SVG.on(this.node, event, f)\r\n    return this\r\n  }\r\n})\r\n\r\n// Initialize listeners stack\r\nSVG.listeners = []\r\nSVG.handlerMap = []\r\nSVG.listenerId = 0\r\n\r\n// Add event binder in the SVG namespace\r\nSVG.on = function(node, event, listener, binding, options) {\r\n  // create listener, get object-index\r\n  var l     = listener.bind(binding || node.instance || node)\r\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\r\n    , ev    = event.split('.')[0]\r\n    , ns    = event.split('.')[1] || '*'\r\n\r\n\r\n  // ensure valid object\r\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\r\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\r\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\r\n\r\n  if(!listener._svgjsListenerId)\r\n    listener._svgjsListenerId = ++SVG.listenerId\r\n\r\n  // reference listener\r\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\r\n\r\n  // add listener\r\n  node.addEventListener(ev, l, options || false)\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nSVG.off = function(node, event, listener) {\r\n  var index = SVG.handlerMap.indexOf(node)\r\n    , ev    = event && event.split('.')[0]\r\n    , ns    = event && event.split('.')[1]\r\n    , namespace = ''\r\n\r\n  if(index == -1) return\r\n\r\n  if (listener) {\r\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\r\n    if(!listener) return\r\n\r\n    // remove listener reference\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\r\n      // remove listener\r\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\r\n\r\n      delete SVG.listeners[index][ev][ns || '*'][listener]\r\n    }\r\n\r\n  } else if (ns && ev) {\r\n    // remove all listeners for a namespaced event\r\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\r\n      for (listener in SVG.listeners[index][ev][ns])\r\n        SVG.off(node, [ev, ns].join('.'), listener)\r\n\r\n      delete SVG.listeners[index][ev][ns]\r\n    }\r\n\r\n  } else if (ns){\r\n    // remove all listeners for a specific namespace\r\n    for(event in SVG.listeners[index]){\r\n        for(namespace in SVG.listeners[index][event]){\r\n            if(ns === namespace){\r\n                SVG.off(node, [event, ns].join('.'))\r\n            }\r\n        }\r\n    }\r\n\r\n  } else if (ev) {\r\n    // remove all listeners for the event\r\n    if (SVG.listeners[index][ev]) {\r\n      for (namespace in SVG.listeners[index][ev])\r\n        SVG.off(node, [ev, namespace].join('.'))\r\n\r\n      delete SVG.listeners[index][ev]\r\n    }\r\n\r\n  } else {\r\n    // remove all listeners on a given node\r\n    for (event in SVG.listeners[index])\r\n      SVG.off(node, event)\r\n\r\n    delete SVG.listeners[index]\r\n    delete SVG.handlerMap[index]\r\n\r\n  }\r\n}\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Bind given event to listener\r\n  on: function(event, listener, binding, options) {\r\n    SVG.on(this.node, event, listener, binding, options)\r\n\r\n    return this\r\n  }\r\n  // Unbind event from listener\r\n, off: function(event, listener) {\r\n    SVG.off(this.node, event, listener)\r\n\r\n    return this\r\n  }\r\n  // Fire given event\r\n, fire: function(event, data) {\r\n\r\n    // Dispatch event\r\n    if(event instanceof window.Event){\r\n        this.node.dispatchEvent(event)\r\n    }else{\r\n        this.node.dispatchEvent(event = new window.CustomEvent(event, {detail:data, cancelable: true}))\r\n    }\r\n\r\n    this._event = event\r\n    return this\r\n  }\r\n, event: function() {\r\n    return this._event\r\n  }\r\n})\r\n\n\r\nSVG.Defs = SVG.invent({\r\n  // Initialize node\r\n  create: 'defs'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n})\nSVG.G = SVG.invent({\r\n  // Initialize node\r\n  create: 'g'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\r\n    }\r\n  , gbox: function() {\r\n\r\n      var bbox  = this.bbox()\r\n        , trans = this.transform()\r\n\r\n      bbox.x  += trans.x\r\n      bbox.x2 += trans.x\r\n      bbox.cx += trans.x\r\n\r\n      bbox.y  += trans.y\r\n      bbox.y2 += trans.y\r\n      bbox.cy += trans.y\r\n\r\n      return bbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a group element\r\n    group: function() {\r\n      return this.put(new SVG.G)\r\n    }\r\n  }\r\n})\r\n\n// ### This module adds backward / forward functionality to elements.\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Get all siblings, including myself\r\n  siblings: function() {\r\n    return this.parent().children()\r\n  }\r\n  // Get the curent position siblings\r\n, position: function() {\r\n    return this.parent().index(this)\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, next: function() {\r\n    return this.siblings()[this.position() + 1]\r\n  }\r\n  // Get the next element (will return null if there is none)\r\n, previous: function() {\r\n    return this.siblings()[this.position() - 1]\r\n  }\r\n  // Send given element one step forward\r\n, forward: function() {\r\n    var i = this.position() + 1\r\n      , p = this.parent()\r\n\r\n    // move node one step forward\r\n    p.removeElement(this).add(this, i)\r\n\r\n    // make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element one step backward\r\n, backward: function() {\r\n    var i = this.position()\r\n\r\n    if (i > 0)\r\n      this.parent().removeElement(this).add(this, i - 1)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the front\r\n, front: function() {\r\n    var p = this.parent()\r\n\r\n    // Move node forward\r\n    p.node.appendChild(this.node)\r\n\r\n    // Make sure defs node is always at the top\r\n    if (p instanceof SVG.Doc)\r\n      p.node.appendChild(p.defs().node)\r\n\r\n    return this\r\n  }\r\n  // Send given element all the way to the back\r\n, back: function() {\r\n    if (this.position() > 0)\r\n      this.parent().removeElement(this).add(this, 0)\r\n\r\n    return this\r\n  }\r\n  // Inserts a given element before the targeted element\r\n, before: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i)\r\n\r\n    return this\r\n  }\r\n  // Insters a given element after the targeted element\r\n, after: function(element) {\r\n    element.remove()\r\n\r\n    var i = this.position()\r\n\r\n    this.parent().add(element, i + 1)\r\n\r\n    return this\r\n  }\r\n\r\n})\nSVG.Mask = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('mask'))\r\n\r\n    // keep references to masked elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unmask all masked elements and remove itself\r\n    remove: function() {\r\n      // unmask all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unmask()\r\n      this.targets = []\r\n\r\n      // remove mask from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create masking element\r\n    mask: function() {\r\n      return this.defs().put(new SVG.Mask)\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Distribute mask to svg element\r\n  maskWith: function(element) {\r\n    // use given mask or create a new one\r\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.masker.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\r\n  }\r\n  // Unmask element\r\n, unmask: function() {\r\n    delete this.masker\r\n    return this.attr('mask', null)\r\n  }\r\n\r\n})\r\n\nSVG.ClipPath = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('clipPath'))\r\n\r\n    // keep references to clipped elements\r\n    this.targets = []\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Unclip all clipped elements and remove itself\r\n    remove: function() {\r\n      // unclip all targets\r\n      for (var i = this.targets.length - 1; i >= 0; i--)\r\n        if (this.targets[i])\r\n          this.targets[i].unclip()\r\n      this.targets = []\r\n\r\n      // remove clipPath from parent\r\n      this.parent().removeElement(this)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create clipping element\r\n    clip: function() {\r\n      return this.defs().put(new SVG.ClipPath)\r\n    }\r\n  }\r\n})\r\n\r\n//\r\nSVG.extend(SVG.Element, {\r\n  // Distribute clipPath to svg element\r\n  clipWith: function(element) {\r\n    // use given clip or create a new one\r\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\r\n\r\n    // store reverence on self in mask\r\n    this.clipper.targets.push(this)\r\n\r\n    // apply mask\r\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\r\n  }\r\n  // Unclip element\r\n, unclip: function() {\r\n    delete this.clipper\r\n    return this.attr('clip-path', null)\r\n  }\r\n\r\n})\nSVG.Gradient = SVG.invent({\r\n  // Initialize node\r\n  create: function(type) {\r\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\r\n\r\n    // store type\r\n    this.type = type\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add a color stop\r\n    at: function(offset, color, opacity) {\r\n      return this.put(new SVG.Stop).update(offset, color, opacity)\r\n    }\r\n    // Update gradient\r\n  , update: function(block) {\r\n      // remove all stops\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'gradientTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create gradient element in defs\r\n    gradient: function(type, block) {\r\n      return this.defs().gradient(type, block)\r\n    }\r\n  }\r\n})\r\n\r\n// Add animatable methods to both gradient and fx module\r\nSVG.extend(SVG.Gradient, SVG.FX, {\r\n  // From position\r\n  from: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\r\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\r\n  }\r\n  // To position\r\n, to: function(x, y) {\r\n    return (this._target || this).type == 'radial' ?\r\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\r\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\r\n  }\r\n})\r\n\r\n// Base gradient generation\r\nSVG.extend(SVG.Defs, {\r\n  // define gradient\r\n  gradient: function(type, block) {\r\n    return this.put(new SVG.Gradient(type)).update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.Stop = SVG.invent({\r\n  // Initialize node\r\n  create: 'stop'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // add color stops\r\n    update: function(o) {\r\n      if (typeof o == 'number' || o instanceof SVG.Number) {\r\n        o = {\r\n          offset:  arguments[0]\r\n        , color:   arguments[1]\r\n        , opacity: arguments[2]\r\n        }\r\n      }\r\n\r\n      // set attributes\r\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n      if (o.color   != null) this.attr('stop-color', o.color)\r\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Pattern = SVG.invent({\r\n  // Initialize node\r\n  create: 'pattern'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Return the fill id\r\n    fill: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n    // Update pattern by rebuilding\r\n  , update: function(block) {\r\n      // remove content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Alias string convertion to fill\r\n  , toString: function() {\r\n      return this.fill()\r\n    }\r\n    // custom attr to handle transform\r\n  , attr: function(a, b, c) {\r\n      if(a == 'transform') a = 'patternTransform'\r\n      return SVG.Container.prototype.attr.call(this, a, b, c)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create pattern element in defs\r\n    pattern: function(width, height, block) {\r\n      return this.defs().pattern(width, height, block)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Define gradient\r\n  pattern: function(width, height, block) {\r\n    return this.put(new SVG.Pattern).update(block).attr({\r\n      x:            0\r\n    , y:            0\r\n    , width:        width\r\n    , height:       height\r\n    , patternUnits: 'userSpaceOnUse'\r\n    })\r\n  }\r\n\r\n})\nSVG.Doc = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    if (element) {\r\n      // ensure the presence of a dom element\r\n      element = typeof element == 'string' ?\r\n        document.getElementById(element) :\r\n        element\r\n\r\n      // If the target is an svg element, use that element as the main wrapper.\r\n      // This allows svg.js to work with svg documents as well.\r\n      if (element.nodeName == 'svg') {\r\n        this.constructor.call(this, element)\r\n      } else {\r\n        this.constructor.call(this, SVG.create('svg'))\r\n        element.appendChild(this.node)\r\n        this.size('100%', '100%')\r\n      }\r\n\r\n      // set svg element attributes and ensure defs node\r\n      this.namespace().defs()\r\n    }\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add namespaces\r\n    namespace: function() {\r\n      return this\r\n        .attr({ xmlns: SVG.ns, version: '1.1' })\r\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\r\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\r\n    }\r\n    // Creates and returns defs element\r\n  , defs: function() {\r\n      if (!this._defs) {\r\n        var defs\r\n\r\n        // Find or create a defs element in this instance\r\n        if (defs = this.node.getElementsByTagName('defs')[0])\r\n          this._defs = SVG.adopt(defs)\r\n        else\r\n          this._defs = new SVG.Defs\r\n\r\n        // Make sure the defs node is at the end of the stack\r\n        this.node.appendChild(this._defs.node)\r\n      }\r\n\r\n      return this._defs\r\n    }\r\n    // custom parent method\r\n  , parent: function() {\r\n      return this.node.parentNode.nodeName == '#document' ? null : this.node.parentNode\r\n    }\r\n    // Fix for possible sub-pixel offset. See:\r\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\r\n  , spof: function() {\r\n      var pos = this.node.getScreenCTM()\r\n\r\n      if (pos)\r\n        this\r\n          .style('left', (-pos.e % 1) + 'px')\r\n          .style('top',  (-pos.f % 1) + 'px')\r\n\r\n      return this\r\n    }\r\n\r\n      // Removes the doc from the DOM\r\n  , remove: function() {\r\n      if(this.parent()) {\r\n        this.parent().removeChild(this.node)\r\n      }\r\n\r\n      return this\r\n    }\r\n  , clear: function() {\r\n      // remove children\r\n      while(this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // remove defs reference\r\n      delete this._defs\r\n\r\n      // add back parser\r\n      if(!SVG.parser.draw.parentNode)\r\n        this.node.appendChild(SVG.parser.draw)\r\n\r\n      return this\r\n    }\r\n  }\r\n\r\n})\r\n\nSVG.Shape = SVG.invent({\r\n  // Initialize node\r\n  create: function(element) {\r\n    this.constructor.call(this, element)\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n})\n\r\nSVG.Bare = SVG.invent({\r\n  // Initialize\r\n  create: function(element, inherit) {\r\n    // construct element\r\n    this.constructor.call(this, SVG.create(element))\r\n\r\n    // inherit custom methods\r\n    if (inherit)\r\n      for (var method in inherit.prototype)\r\n        if (typeof inherit.prototype[method] === 'function')\r\n          this[method] = inherit.prototype[method]\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Element\r\n\r\n  // Add methods\r\n, extend: {\r\n    // Insert some plain text\r\n    words: function(text) {\r\n      // remove contents\r\n      while (this.node.hasChildNodes())\r\n        this.node.removeChild(this.node.lastChild)\r\n\r\n      // create text node\r\n      this.node.appendChild(document.createTextNode(text))\r\n\r\n      return this\r\n    }\r\n  }\r\n})\r\n\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Create an element that is not described by SVG.js\r\n  element: function(element, inherit) {\r\n    return this.put(new SVG.Bare(element, inherit))\r\n  }\r\n})\r\n\nSVG.Symbol = SVG.invent({\r\n  // Initialize node\r\n  create: 'symbol'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n, construct: {\r\n    // create symbol\r\n    symbol: function() {\r\n      return this.put(new SVG.Symbol)\r\n    }\r\n  }\r\n})\r\n\nSVG.Use = SVG.invent({\r\n  // Initialize node\r\n  create: 'use'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Use element as a reference\r\n    element: function(element, file) {\r\n      // Set lined element\r\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a use element\r\n    use: function(element, file) {\r\n      return this.put(new SVG.Use).element(element, file)\r\n    }\r\n  }\r\n})\nSVG.Rect = SVG.invent({\r\n  // Initialize node\r\n  create: 'rect'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a rect element\r\n    rect: function(width, height) {\r\n      return this.put(new SVG.Rect()).size(width, height)\r\n    }\r\n  }\r\n})\nSVG.Circle = SVG.invent({\r\n  // Initialize node\r\n  create: 'circle'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create circle element, based on ellipse\r\n    circle: function(size) {\r\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Circle, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n  // Alias radius x value\r\n, ry: function(ry) {\r\n    return this.rx(ry)\r\n  }\r\n})\r\n\r\nSVG.Ellipse = SVG.invent({\r\n  // Initialize node\r\n  create: 'ellipse'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create an ellipse\r\n    ellipse: function(width, height) {\r\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\r\n  // Radius x value\r\n  rx: function(rx) {\r\n    return this.attr('rx', rx)\r\n  }\r\n  // Radius y value\r\n, ry: function(ry) {\r\n    return this.attr('ry', ry)\r\n  }\r\n})\r\n\r\n// Add common method\r\nSVG.extend(SVG.Circle, SVG.Ellipse, {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\r\n    }\r\n    // Move by center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.attr('cx') : this.attr('cx', x)\r\n    }\r\n    // Move by center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.attr('cy') : this.attr('cy', y)\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\r\n    }\r\n    // Custom size function\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this\r\n        .rx(new SVG.Number(p.width).divide(2))\r\n        .ry(new SVG.Number(p.height).divide(2))\r\n    }\r\n})\nSVG.Line = SVG.invent({\r\n  // Initialize node\r\n  create: 'line'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Get array\r\n    array: function() {\r\n      return new SVG.PointArray([\r\n        [ this.attr('x1'), this.attr('y1') ]\r\n      , [ this.attr('x2'), this.attr('y2') ]\r\n      ])\r\n    }\r\n    // Overwrite native plot() method\r\n  , plot: function(x1, y1, x2, y2) {\r\n      if (x1 == null)\r\n        return this.array()\r\n      else if (typeof y1 !== 'undefined')\r\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n      else\r\n        x1 = new SVG.PointArray(x1).toLine()\r\n\r\n      return this.attr(x1)\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr(this.array().move(x, y).toLine())\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr(this.array().size(p.width, p.height).toLine())\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a line element\r\n    line: function(x1, y1, x2, y2) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\r\n      return SVG.Line.prototype.plot.apply(\r\n        this.put(new SVG.Line)\r\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\r\n      )\r\n    }\r\n  }\r\n})\r\n\nSVG.Polyline = SVG.invent({\r\n  // Initialize node\r\n  create: 'polyline'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polyline element\r\n    polyline: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.Polygon = SVG.invent({\r\n  // Initialize node\r\n  create: 'polygon'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped polygon element\r\n    polygon: function(p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\r\n    }\r\n  }\r\n})\r\n\r\n// Add polygon-specific functions\r\nSVG.extend(SVG.Polyline, SVG.Polygon, {\r\n  // Get array\r\n  array: function() {\r\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\r\n  }\r\n  // Plot new path\r\n, plot: function(p) {\r\n    return (p == null) ?\r\n      this.array() :\r\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\r\n  }\r\n  // Clear array cache\r\n, clear: function() {\r\n    delete this._array\r\n    return this\r\n  }\r\n  // Move by left top corner\r\n, move: function(x, y) {\r\n    return this.attr('points', this.array().move(x, y))\r\n  }\r\n  // Set element size to given width and height\r\n, size: function(width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this.attr('points', this.array().size(p.width, p.height))\r\n  }\r\n\r\n})\r\n\n// unify all point to point elements\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\r\n  // Define morphable array\r\n  morphArray:  SVG.PointArray\r\n  // Move by left top corner over x-axis\r\n, x: function(x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n  // Move by left top corner over y-axis\r\n, y: function(y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n  // Set width of element\r\n, width: function(width) {\r\n    var b = this.bbox()\r\n\r\n    return width == null ? b.width : this.size(width, b.height)\r\n  }\r\n  // Set height of element\r\n, height: function(height) {\r\n    var b = this.bbox()\r\n\r\n    return height == null ? b.height : this.size(b.width, height)\r\n  }\r\n})\nSVG.Path = SVG.invent({\r\n  // Initialize node\r\n  create: 'path'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Define morphable array\r\n    morphArray:  SVG.PathArray\r\n    // Get array\r\n  , array: function() {\r\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\r\n    }\r\n    // Plot new path\r\n  , plot: function(d) {\r\n      return (d == null) ?\r\n        this.array() :\r\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\r\n    }\r\n    // Clear array cache\r\n  , clear: function() {\r\n      delete this._array\r\n      return this\r\n    }\r\n    // Move by left top corner\r\n  , move: function(x, y) {\r\n      return this.attr('d', this.array().move(x, y))\r\n    }\r\n    // Move by left top corner over x-axis\r\n  , x: function(x) {\r\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n    }\r\n    // Move by left top corner over y-axis\r\n  , y: function(y) {\r\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n    }\r\n    // Set element size to given width and height\r\n  , size: function(width, height) {\r\n      var p = proportionalSize(this, width, height)\r\n\r\n      return this.attr('d', this.array().size(p.width, p.height))\r\n    }\r\n    // Set width of element\r\n  , width: function(width) {\r\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n    }\r\n\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a wrapped path element\r\n    path: function(d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\r\n    }\r\n  }\r\n})\r\n\nSVG.Image = SVG.invent({\r\n  // Initialize node\r\n  create: 'image'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // (re)load image\r\n    load: function(url) {\r\n      if (!url) return this\r\n\r\n      var self = this\r\n        , img  = new window.Image()\r\n\r\n      // preload image\r\n      SVG.on(img, 'load', function() {\r\n        SVG.off(img)\r\n\r\n        var p = self.parent(SVG.Pattern)\r\n\r\n        if(p === null) return\r\n\r\n        // ensure image size\r\n        if (self.width() == 0 && self.height() == 0)\r\n          self.size(img.width, img.height)\r\n\r\n        // ensure pattern size if not set\r\n        if (p && p.width() == 0 && p.height() == 0)\r\n          p.size(self.width(), self.height())\r\n\r\n        // callback\r\n        if (typeof self._loaded === 'function')\r\n          self._loaded.call(self, {\r\n            width:  img.width\r\n          , height: img.height\r\n          , ratio:  img.width / img.height\r\n          , url:    url\r\n          })\r\n      })\r\n\r\n      SVG.on(img, 'error', function(e){\r\n        SVG.off(img)\r\n\r\n        if (typeof self._error === 'function'){\r\n            self._error.call(self, e)\r\n        }\r\n      })\r\n\r\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\r\n    }\r\n    // Add loaded callback\r\n  , loaded: function(loaded) {\r\n      this._loaded = loaded\r\n      return this\r\n    }\r\n\r\n  , error: function(error) {\r\n      this._error = error\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // create image element, load image and set its size\r\n    image: function(source, width, height) {\r\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\r\n    }\r\n  }\r\n\r\n})\nSVG.Text = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('text'))\r\n\r\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\r\n    this._rebuild = true                      // enable automatic updating of dy values\r\n    this._build   = false                     // disable build mode for adding multiple lines\r\n\r\n    // set default font\r\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Move over x-axis\r\n    x: function(x) {\r\n      // act as getter\r\n      if (x == null)\r\n        return this.attr('x')\r\n\r\n      return this.attr('x', x)\r\n    }\r\n    // Move over y-axis\r\n  , y: function(y) {\r\n      var oy = this.attr('y')\r\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\r\n\r\n      // act as getter\r\n      if (y == null)\r\n        return typeof oy === 'number' ? oy - o : oy\r\n\r\n      return this.attr('y', typeof y === 'number' ? y + o : y)\r\n    }\r\n    // Move center over x-axis\r\n  , cx: function(x) {\r\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\r\n    }\r\n    // Move center over y-axis\r\n  , cy: function(y) {\r\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\r\n    }\r\n    // Set the text content\r\n  , text: function(text) {\r\n      // act as getter\r\n      if (typeof text === 'undefined'){\r\n        var text = ''\r\n        var children = this.node.childNodes\r\n        for(var i = 0, len = children.length; i < len; ++i){\r\n\r\n          // add newline if its not the first child and newLined is set to true\r\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\r\n            text += '\\n'\r\n          }\r\n\r\n          // add content of this node\r\n          text += children[i].textContent\r\n        }\r\n\r\n        return text\r\n      }\r\n\r\n      // remove existing content\r\n      this.clear().build(true)\r\n\r\n      if (typeof text === 'function') {\r\n        // call block\r\n        text.call(this, this)\r\n\r\n      } else {\r\n        // store text and make sure text is not blank\r\n        text = text.split('\\n')\r\n\r\n        // build new lines\r\n        for (var i = 0, il = text.length; i < il; i++)\r\n          this.tspan(text[i]).newLine()\r\n      }\r\n\r\n      // disable build mode and rebuild lines\r\n      return this.build(false).rebuild()\r\n    }\r\n    // Set font size\r\n  , size: function(size) {\r\n      return this.attr('font-size', size).rebuild()\r\n    }\r\n    // Set / get leading\r\n  , leading: function(value) {\r\n      // act as getter\r\n      if (value == null)\r\n        return this.dom.leading\r\n\r\n      // act as setter\r\n      this.dom.leading = new SVG.Number(value)\r\n\r\n      return this.rebuild()\r\n    }\r\n    // Get all the first level lines\r\n  , lines: function() {\r\n      var node = (this.textPath && this.textPath() || this).node\r\n\r\n      // filter tspans and map them to SVG.js instances\r\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\r\n        return SVG.adopt(el)\r\n      })\r\n\r\n      // return an instance of SVG.set\r\n      return new SVG.Set(lines)\r\n    }\r\n    // Rebuild appearance type\r\n  , rebuild: function(rebuild) {\r\n      // store new rebuild flag if given\r\n      if (typeof rebuild == 'boolean')\r\n        this._rebuild = rebuild\r\n\r\n      // define position of all lines\r\n      if (this._rebuild) {\r\n        var self = this\r\n          , blankLineOffset = 0\r\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\r\n\r\n        this.lines().each(function() {\r\n          if (this.dom.newLined) {\r\n            if (!self.textPath())\r\n              this.attr('x', self.attr('x'))\r\n            if(this.text() == '\\n') {\r\n              blankLineOffset += dy\r\n            }else{\r\n              this.attr('dy', dy + blankLineOffset)\r\n              blankLineOffset = 0\r\n            }\r\n          }\r\n        })\r\n\r\n        this.fire('rebuild')\r\n      }\r\n\r\n      return this\r\n    }\r\n    // Enable / disable build mode\r\n  , build: function(build) {\r\n      this._build = !!build\r\n      return this\r\n    }\r\n    // overwrite method from parent to set data properly\r\n  , setData: function(o){\r\n      this.dom = o\r\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\r\n      return this\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create text element\r\n    text: function(text) {\r\n      return this.put(new SVG.Text).text(text)\r\n    }\r\n    // Create plain text element\r\n  , plain: function(text) {\r\n      return this.put(new SVG.Text).plain(text)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.Tspan = SVG.invent({\r\n  // Initialize node\r\n  create: 'tspan'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Shape\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set text content\r\n    text: function(text) {\r\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n      return this\r\n    }\r\n    // Shortcut dx\r\n  , dx: function(dx) {\r\n      return this.attr('dx', dx)\r\n    }\r\n    // Shortcut dy\r\n  , dy: function(dy) {\r\n      return this.attr('dy', dy)\r\n    }\r\n    // Create new line\r\n  , newLine: function() {\r\n      // fetch text parent\r\n      var t = this.parent(SVG.Text)\r\n\r\n      // mark new line\r\n      this.dom.newLined = true\r\n\r\n      // apply new hy¡n\r\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Text, SVG.Tspan, {\r\n  // Create plain text node\r\n  plain: function(text) {\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // create text node\r\n    this.node.appendChild(document.createTextNode(text))\r\n\r\n    return this\r\n  }\r\n  // Create a tspan\r\n, tspan: function(text) {\r\n    var node  = (this.textPath && this.textPath() || this).node\r\n      , tspan = new SVG.Tspan\r\n\r\n    // clear if build mode is disabled\r\n    if (this._build === false)\r\n      this.clear()\r\n\r\n    // add new tspan\r\n    node.appendChild(tspan.node)\r\n\r\n    return tspan.text(text)\r\n  }\r\n  // Clear all lines\r\n, clear: function() {\r\n    var node = (this.textPath && this.textPath() || this).node\r\n\r\n    // remove existing child nodes\r\n    while (node.hasChildNodes())\r\n      node.removeChild(node.lastChild)\r\n\r\n    return this\r\n  }\r\n  // Get length of text element\r\n, length: function() {\r\n    return this.node.getComputedTextLength()\r\n  }\r\n})\r\n\nSVG.TextPath = SVG.invent({\r\n  // Initialize node\r\n  create: 'textPath'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Parent\r\n\r\n  // Define parent class\r\n, parent: SVG.Text\r\n\r\n  // Add parent method\r\n, construct: {\r\n    morphArray: SVG.PathArray\r\n    // Create path for text to run on\r\n  , path: function(d) {\r\n      // create textPath element\r\n      var path  = new SVG.TextPath\r\n        , track = this.doc().defs().path(d)\r\n\r\n      // move lines to textpath\r\n      while (this.node.hasChildNodes())\r\n        path.node.appendChild(this.node.firstChild)\r\n\r\n      // add textPath element as child node\r\n      this.node.appendChild(path.node)\r\n\r\n      // link textPath to path and add content\r\n      path.attr('href', '#' + track, SVG.xlink)\r\n\r\n      return this\r\n    }\r\n    // return the array of the path track element\r\n  , array: function() {\r\n      var track = this.track()\r\n\r\n      return track ? track.array() : null\r\n    }\r\n    // Plot path if any\r\n  , plot: function(d) {\r\n      var track = this.track()\r\n        , pathArray = null\r\n\r\n      if (track) {\r\n        pathArray = track.plot(d)\r\n      }\r\n\r\n      return (d == null) ? pathArray : this\r\n    }\r\n    // Get the path track element\r\n  , track: function() {\r\n      var path = this.textPath()\r\n\r\n      if (path)\r\n        return path.reference('href')\r\n    }\r\n    // Get the textPath child\r\n  , textPath: function() {\r\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\r\n        return SVG.adopt(this.node.firstChild)\r\n    }\r\n  }\r\n})\r\n\nSVG.Nested = SVG.invent({\r\n  // Initialize node\r\n  create: function() {\r\n    this.constructor.call(this, SVG.create('svg'))\r\n\r\n    this.style('overflow', 'visible')\r\n  }\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create nested svg document\r\n    nested: function() {\r\n      return this.put(new SVG.Nested)\r\n    }\r\n  }\r\n})\nSVG.A = SVG.invent({\r\n  // Initialize node\r\n  create: 'a'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Link url\r\n    to: function(url) {\r\n      return this.attr('href', url, SVG.xlink)\r\n    }\r\n    // Link show attribute\r\n  , show: function(target) {\r\n      return this.attr('show', target, SVG.xlink)\r\n    }\r\n    // Link target attribute\r\n  , target: function(target) {\r\n      return this.attr('target', target)\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a hyperlink element\r\n    link: function(url) {\r\n      return this.put(new SVG.A).to(url)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Element, {\r\n  // Create a hyperlink element\r\n  linkTo: function(url) {\r\n    var link = new SVG.A\r\n\r\n    if (typeof url == 'function')\r\n      url.call(link, link)\r\n    else\r\n      link.to(url)\r\n\r\n    return this.parent().put(link).put(this)\r\n  }\r\n\r\n})\nSVG.Marker = SVG.invent({\r\n  // Initialize node\r\n  create: 'marker'\r\n\r\n  // Inherit from\r\n, inherit: SVG.Container\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Set width of element\r\n    width: function(width) {\r\n      return this.attr('markerWidth', width)\r\n    }\r\n    // Set height of element\r\n  , height: function(height) {\r\n      return this.attr('markerHeight', height)\r\n    }\r\n    // Set marker refX and refY\r\n  , ref: function(x, y) {\r\n      return this.attr('refX', x).attr('refY', y)\r\n    }\r\n    // Update marker\r\n  , update: function(block) {\r\n      // remove all content\r\n      this.clear()\r\n\r\n      // invoke passed block\r\n      if (typeof block == 'function')\r\n        block.call(this, this)\r\n\r\n      return this\r\n    }\r\n    // Return the fill id\r\n  , toString: function() {\r\n      return 'url(#' + this.id() + ')'\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    marker: function(width, height, block) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(width, height, block)\r\n    }\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Defs, {\r\n  // Create marker\r\n  marker: function(width, height, block) {\r\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n    return this.put(new SVG.Marker)\r\n      .size(width, height)\r\n      .ref(width / 2, height / 2)\r\n      .viewbox(0, 0, width, height)\r\n      .attr('orient', 'auto')\r\n      .update(block)\r\n  }\r\n\r\n})\r\n\r\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\r\n  // Create and attach markers\r\n  marker: function(marker, width, height, block) {\r\n    var attr = ['marker']\r\n\r\n    // Build attribute name\r\n    if (marker != 'all') attr.push(marker)\r\n    attr = attr.join('-')\r\n\r\n    // Set marker attribute\r\n    marker = arguments[1] instanceof SVG.Marker ?\r\n      arguments[1] :\r\n      this.doc().marker(width, height, block)\r\n\r\n    return this.attr(attr, marker)\r\n  }\r\n\r\n})\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\r\n, fill:   ['color', 'opacity', 'rule']\r\n, prefix: function(t, a) {\r\n    return a == 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;['fill', 'stroke'].forEach(function(m) {\r\n  var i, extension = {}\r\n\r\n  extension[m] = function(o) {\r\n    if (typeof o == 'undefined')\r\n      return this\r\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\r\n      this.attr(m, o)\r\n\r\n    else\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--)\r\n        if (o[sugar[m][i]] != null)\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n\r\n    return this\r\n  }\r\n\r\n  SVG.extend(SVG.Element, SVG.FX, extension)\r\n\r\n})\r\n\r\nSVG.extend(SVG.Element, SVG.FX, {\r\n  // Map rotation to transform\r\n  rotate: function(d, cx, cy) {\r\n    return this.transform({ rotation: d, cx: cx, cy: cy })\r\n  }\r\n  // Map skew to transform\r\n, skew: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ skew: x, cx: y, cy: cx }) :\r\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map scale to transform\r\n, scale: function(x, y, cx, cy) {\r\n    return arguments.length == 1  || arguments.length == 3 ?\r\n      this.transform({ scale: x, cx: y, cy: cx }) :\r\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\r\n  }\r\n  // Map translate to transform\r\n, translate: function(x, y) {\r\n    return this.transform({ x: x, y: y })\r\n  }\r\n  // Map flip to transform\r\n, flip: function(a, o) {\r\n    o = typeof a == 'number' ? a : o\r\n    return this.transform({ flip: a || 'both', offset: o })\r\n  }\r\n  // Map matrix to transform\r\n, matrix: function(m) {\r\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\r\n  }\r\n  // Opacity\r\n, opacity: function(value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n  // Relative move over x axis\r\n, dx: function(x) {\r\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\r\n  }\r\n  // Relative move over y axis\r\n, dy: function(y) {\r\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\r\n  }\r\n  // Relative move over x and y axes\r\n, dmove: function(x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\r\n  // Add x and y radius\r\n  radius: function(x, y) {\r\n    var type = (this._target || this).type;\r\n    return type == 'radial' || type == 'circle' ?\r\n      this.attr('r', new SVG.Number(x)) :\r\n      this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Path, {\r\n  // Get path length\r\n  length: function() {\r\n    return this.node.getTotalLength()\r\n  }\r\n  // Get point at length\r\n, pointAt: function(length) {\r\n    return this.node.getPointAtLength(length)\r\n  }\r\n})\r\n\r\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\r\n  // Set font\r\n  font: function(a, v) {\r\n    if (typeof a == 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n    }\r\n\r\n    return a == 'leading' ?\r\n        this.leading(v) :\r\n      a == 'anchor' ?\r\n        this.attr('text-anchor', v) :\r\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\r\n        this.attr('font-'+ a, v) :\r\n        this.attr(a, v)\r\n  }\r\n})\r\n\nSVG.Set = SVG.invent({\r\n  // Initialize\r\n  create: function(members) {\r\n    // Set initial state\r\n    Array.isArray(members) ? this.members = members : this.clear()\r\n  }\r\n\r\n  // Add class methods\r\n, extend: {\r\n    // Add element to set\r\n    add: function() {\r\n      var i, il, elements = [].slice.call(arguments)\r\n\r\n      for (i = 0, il = elements.length; i < il; i++)\r\n        this.members.push(elements[i])\r\n\r\n      return this\r\n    }\r\n    // Remove element from set\r\n  , remove: function(element) {\r\n      var i = this.index(element)\r\n\r\n      // remove given child\r\n      if (i > -1)\r\n        this.members.splice(i, 1)\r\n\r\n      return this\r\n    }\r\n    // Iterate over all members\r\n  , each: function(block) {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        block.apply(this.members[i], [i, this.members])\r\n\r\n      return this\r\n    }\r\n    // Restore to defaults\r\n  , clear: function() {\r\n      // initialize store\r\n      this.members = []\r\n\r\n      return this\r\n    }\r\n    // Get the length of a set\r\n  , length: function() {\r\n      return this.members.length\r\n    }\r\n    // Checks if a given element is present in set\r\n  , has: function(element) {\r\n      return this.index(element) >= 0\r\n    }\r\n    // retuns index of given element in set\r\n  , index: function(element) {\r\n      return this.members.indexOf(element)\r\n    }\r\n    // Get member at given index\r\n  , get: function(i) {\r\n      return this.members[i]\r\n    }\r\n    // Get first member\r\n  , first: function() {\r\n      return this.get(0)\r\n    }\r\n    // Get last member\r\n  , last: function() {\r\n      return this.get(this.members.length - 1)\r\n    }\r\n    // Default value\r\n  , valueOf: function() {\r\n      return this.members\r\n    }\r\n    // Get the bounding box of all members included or empty box if set has no items\r\n  , bbox: function(){\r\n      // return an empty box of there are no members\r\n      if (this.members.length == 0)\r\n        return new SVG.RBox()\r\n\r\n      // get the first rbox and update the target bbox\r\n      var rbox = this.members[0].rbox(this.members[0].doc())\r\n\r\n      this.each(function() {\r\n        // user rbox for correct position and visual representation\r\n        rbox = rbox.merge(this.rbox(this.doc()))\r\n      })\r\n\r\n      return rbox\r\n    }\r\n  }\r\n\r\n  // Add parent method\r\n, construct: {\r\n    // Create a new set\r\n    set: function(members) {\r\n      return new SVG.Set(members)\r\n    }\r\n  }\r\n})\r\n\r\nSVG.FX.Set = SVG.invent({\r\n  // Initialize node\r\n  create: function(set) {\r\n    // store reference to set\r\n    this.set = set\r\n  }\r\n\r\n})\r\n\r\n// Alias methods\r\nSVG.Set.inherit = function() {\r\n  var m\r\n    , methods = []\r\n\r\n  // gather shape methods\r\n  for(var m in SVG.Shape.prototype)\r\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply shape aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.members.length; i < il; i++)\r\n        if (this.members[i] && typeof this.members[i][method] == 'function')\r\n          this.members[i][method].apply(this.members[i], arguments)\r\n\r\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\r\n    }\r\n  })\r\n\r\n  // clear methods for the next round\r\n  methods = []\r\n\r\n  // gather fx methods\r\n  for(var m in SVG.FX.prototype)\r\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\r\n      methods.push(m)\r\n\r\n  // apply fx aliasses\r\n  methods.forEach(function(method) {\r\n    SVG.FX.Set.prototype[method] = function() {\r\n      for (var i = 0, il = this.set.members.length; i < il; i++)\r\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\r\n\r\n      return this\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\n\r\nSVG.extend(SVG.Element, {\r\n  // Store data values on svg nodes\r\n  data: function(a, v, r) {\r\n    if (typeof a == 'object') {\r\n      for (v in a)\r\n        this.data(v, a[v])\r\n\r\n    } else if (arguments.length < 2) {\r\n      try {\r\n        return JSON.parse(this.attr('data-' + a))\r\n      } catch(e) {\r\n        return this.attr('data-' + a)\r\n      }\r\n\r\n    } else {\r\n      this.attr(\r\n        'data-' + a\r\n      , v === null ?\r\n          null :\r\n        r === true || typeof v === 'string' || typeof v === 'number' ?\r\n          v :\r\n          JSON.stringify(v)\r\n      )\r\n    }\r\n\r\n    return this\r\n  }\r\n})\nSVG.extend(SVG.Element, {\r\n  // Remember arbitrary data\r\n  remember: function(k, v) {\r\n    // remember every item in an object individually\r\n    if (typeof arguments[0] == 'object')\r\n      for (var v in k)\r\n        this.remember(v, k[v])\r\n\r\n    // retrieve memory\r\n    else if (arguments.length == 1)\r\n      return this.memory()[k]\r\n\r\n    // store memory\r\n    else\r\n      this.memory()[k] = v\r\n\r\n    return this\r\n  }\r\n\r\n  // Erase a given memory\r\n, forget: function() {\r\n    if (arguments.length == 0)\r\n      this._memory = {}\r\n    else\r\n      for (var i = arguments.length - 1; i >= 0; i--)\r\n        delete this.memory()[arguments[i]]\r\n\r\n    return this\r\n  }\r\n\r\n  // Initialize or return local memory object\r\n, memory: function() {\r\n    return this._memory || (this._memory = {})\r\n  }\r\n\r\n})\n// Method for getting an element by id\r\nSVG.get = function(id) {\r\n  var node = document.getElementById(idFromReference(id) || id)\r\n  return SVG.adopt(node)\r\n}\r\n\r\n// Select elements by query string\r\nSVG.select = function(query, parent) {\r\n  return new SVG.Set(\r\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\r\n      return SVG.adopt(node)\r\n    })\r\n  )\r\n}\r\n\r\nSVG.extend(SVG.Parent, {\r\n  // Scoped select method\r\n  select: function(query) {\r\n    return SVG.select(query, this.node)\r\n  }\r\n\r\n})\nfunction pathRegReplace(a, b, c, d) {\r\n  return c + d.replace(SVG.regex.dots, ' .')\r\n}\r\n\r\n// creates deep clone of array\r\nfunction array_clone(arr){\r\n  var clone = arr.slice(0)\r\n  for(var i = clone.length; i--;){\r\n    if(Array.isArray(clone[i])){\r\n      clone[i] = array_clone(clone[i])\r\n    }\r\n  }\r\n  return clone\r\n}\r\n\r\n// tests if a given element is instance of an object\r\nfunction is(el, obj){\r\n  return el instanceof obj\r\n}\r\n\r\n// tests if a given selector matches an element\r\nfunction matches(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nfunction camelCase(s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nfunction capitalize(s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Ensure to six-based hex\r\nfunction fullHex(hex) {\r\n  return hex.length == 4 ?\r\n    [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2)\r\n    , hex.substring(2, 3), hex.substring(2, 3)\r\n    , hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('') : hex\r\n}\r\n\r\n// Component to hex value\r\nfunction compToHex(comp) {\r\n  var hex = comp.toString(16)\r\n  return hex.length == 1 ? '0' + hex : hex\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nfunction proportionalSize(element, width, height) {\r\n  if (width == null || height == null) {\r\n    var box = element.bbox()\r\n\r\n    if (width == null)\r\n      width = box.width / box.height * height\r\n    else if (height == null)\r\n      height = box.height / box.width * width\r\n  }\r\n\r\n  return {\r\n    width:  width\r\n  , height: height\r\n  }\r\n}\r\n\r\n// Delta transform point\r\nfunction deltaTransformPoint(matrix, x, y) {\r\n  return {\r\n    x: x * matrix.a + y * matrix.c + 0\r\n  , y: x * matrix.b + y * matrix.d + 0\r\n  }\r\n}\r\n\r\n// Map matrix array to object\r\nfunction arrayToMatrix(a) {\r\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n}\r\n\r\n// Parse matrix if required\r\nfunction parseMatrix(matrix) {\r\n  if (!(matrix instanceof SVG.Matrix))\r\n    matrix = new SVG.Matrix(matrix)\r\n\r\n  return matrix\r\n}\r\n\r\n// Add centre point to transform object\r\nfunction ensureCentre(o, target) {\r\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\r\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\r\n}\r\n\r\n// PathArray Helpers\r\nfunction arrayToString(a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\n// Deep new id assignment\r\nfunction assignNewId(node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\r\n    if (node.childNodes[i] instanceof window.SVGElement)\r\n      assignNewId(node.childNodes[i])\r\n\r\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\r\n}\r\n\r\n// Add more bounding box properties\r\nfunction fullBox(b) {\r\n  if (b.x == null) {\r\n    b.x      = 0\r\n    b.y      = 0\r\n    b.width  = 0\r\n    b.height = 0\r\n  }\r\n\r\n  b.w  = b.width\r\n  b.h  = b.height\r\n  b.x2 = b.x + b.width\r\n  b.y2 = b.y + b.height\r\n  b.cx = b.x + b.width / 2\r\n  b.cy = b.y + b.height / 2\r\n\r\n  return b\r\n}\r\n\r\n// Get id from reference string\r\nfunction idFromReference(url) {\r\n  var m = url.toString().match(SVG.regex.reference)\r\n\r\n  if (m) return m[1]\r\n}\r\n\r\n// Create matrix array for looping\r\nvar abcdef = 'abcdef'.split('')\n// Add CustomEvent to IE9 and IE10\r\nif (typeof window.CustomEvent !== 'function') {\r\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\r\n  var CustomEvent = function(event, options) {\r\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\r\n    var e = document.createEvent('CustomEvent')\r\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\r\n    return e\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n}\r\n\r\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\r\n(function(w) {\r\n  var lastTime = 0\r\n  var vendors = ['moz', 'webkit']\r\n\r\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\r\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\r\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\r\n  }\r\n\r\n  w.requestAnimationFrame = w.requestAnimationFrame ||\r\n    function(callback) {\r\n      var currTime = new Date().getTime()\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n      var id = w.setTimeout(function() {\r\n        callback(currTime + timeToCall)\r\n      }, timeToCall)\r\n\r\n      lastTime = currTime + timeToCall\r\n      return id\r\n    }\r\n\r\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\r\n\r\n}(window))\r\n\r\nreturn SVG\r\n\r\n}));\r","import Random from \"random-js\";\r\n\r\nconst random = new Random();\r\n\r\nexport class Ball{\r\n    constructor(ballSvg, autoRespawn = true, isMute = false){\r\n        this.ballSvg = ballSvg;\r\n        this.autoRespawnInternal = autoRespawn;\r\n        this.isMute = isMute;\r\n\r\n        this.cx = this.originalCX = ballSvg.cx();\r\n        this.cy = this.originalCY = ballSvg.cy();\r\n        this.direction = this.vx = this.vy = 0;\r\n        this.reset();\r\n\r\n        this.pingSounds = [ new Audio(\"public/sounds/pong-01.wav\"),\r\n                            new Audio(\"public/sounds/pong-02.wav\"),\r\n                            new Audio(\"public/sounds/pong-03.wav\")];\r\n    }\r\n\r\n    static createNewBallElement(boardSvg, radiusSize = 6, autoRespawn = true, isMute = false, cx = null, cy = null) {\r\n        const ballSvg = boardSvg.circle(radiusSize*2)\r\n                                .center(cx || boardSvg.width()/2, cy || boardSvg.height()/2)\r\n                                .addClass(\"ball\");\r\n        return new Ball(ballSvg, autoRespawn, isMute);\r\n    }\r\n\r\n    removeBall(){\r\n        this.ballSvg.remove();\r\n    }\r\n\r\n    get autoRespawn() {\r\n        return this.autoRespawnInternal;\r\n    }\r\n    get box() {\r\n        return this.ballSvg.bbox();\r\n    }\r\n\r\n    get isMoving(){\r\n        return (this.vx !== 0 || this.vy !== 0)\r\n    }\r\n\r\n    reset() {\r\n        this.isDirty = true;\r\n\r\n        this.cx = this.originalCX;\r\n        this.cy = this.originalCY;\r\n        this.direction = this.vx = this.vy = 0;\r\n    }\r\n\r\n    startMoving(direction = null) {\r\n        if(this.isMoving){\r\n            return;\r\n        }\r\n        this.isDirty = true;\r\n\r\n        this.direction = direction || (random.bool() ? 1 : -1);\r\n        while(Math.abs(this.vy) < 0.8){\r\n            this.vy = random.real(-5, 5, true);\r\n        }\r\n        this.vx = this.direction * (random.real(Math.abs(this.vy), this.box.height/4));\r\n    }\r\n    startMovingTo(direction = null) {\r\n        if(this.isMoving){\r\n            return;\r\n        }\r\n        this.isDirty = true;\r\n\r\n        this.direction = direction;\r\n        this.vy = 0;\r\n        this.vx = (this.direction * 5);\r\n    }\r\n\r\n    updatePos(boardBox, paddle1Box, paddle2Box){\r\n        this.isDirty = true;\r\n\r\n        const ballBox = this.box\r\n        const hitSide = this.checkforWallCollision(ballBox, boardBox);\r\n        this.checkforPaddleCollision(ballBox, paddle1Box, paddle2Box)\r\n\r\n        this.cx += this.vx;\r\n        this.cy += this.vy;\r\n\r\n        return hitSide;\r\n    }\r\n\r\n    checkforWallCollision(ballBox, boardBox) {\r\n\t\tconst hitLeft = ballBox.x <= 0;\r\n\t\tconst hitRight = ballBox.x2 >= boardBox.width;\r\n\t\tconst hitTop = ballBox.y <= 0;\r\n\t\tconst hitBottom = ballBox.y2 >= boardBox.height;\r\n\r\n\t\tif (hitLeft) {\r\n            return -1;\r\n        } else if (hitRight) {\r\n            return 1;\r\n\t\t} else if (hitTop || hitBottom) {\r\n            this.vy *= -1;\r\n            this.collisionDetected();\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    checkforPaddleCollision(ballBox, paddle1Box, paddle2Box){\r\n\r\n        const hitP1PadBySide  = ballBox.x <= paddle1Box.x2 && ballBox.y2 >= paddle1Box.y && ballBox.y  <= paddle1Box.y2 && this.vx < 0;\r\n        // const hitP1FromTop    = ballBox.x <= paddle1Box.x2 && ballBox.x2 >= paddle1Box.x && ballBox.y  <  paddle1Box.y  && ballBox.y2 >= paddle1Box.y  && ballBox.cy <= paddle1Box.cy && this.vy > 0;\r\n        // const hitP1FromBotton = ballBox.x <= paddle1Box.x2 && ballBox.x2 >= paddle1Box.x && ballBox.y2 >  paddle1Box.y2 && ballBox.y  <= paddle1Box.y2 && ballBox.cy >= paddle1Box.cy && this.vy < 0;\r\n\r\n        const hitP2PadBySide  = ballBox.x2 >= paddle2Box.x && ballBox.y2 >= paddle2Box.y  && ballBox.y  <= paddle2Box.y2 && this.vx > 0;\r\n        // const hitP2FromTop    = ballBox.x2 >= paddle2Box.x && ballBox.x  >= paddle2Box.x2 && ballBox.y  <  paddle1Box.y  && ballBox.y2 >= paddle1Box.y  && ballBox.cy <= paddle1Box.cy && this.vy > 0;\r\n        // const hitP2FromBotton = ballBox.x2 >= paddle2Box.x && ballBox.x  >= paddle1Box.x2 && ballBox.y2 >  paddle2Box.y2 && ballBox.y  <= paddle2Box.y2 && ballBox.cy >= paddle2Box.cy && this.vy < 0;\r\n\r\n        // if(hitP1FromTop || hitP2FromTop){\r\n        //     this.vy *= -1;\r\n        //     this.collisionDetected();\r\n        //     console.log(\"HitPaddle! Front Top\");\r\n        //     return;\r\n        // }\r\n        // if(hitP1FromBotton || hitP2FromBotton){\r\n        //     this.vy *= -1;\r\n        //     this.collisionDetected();\r\n        //     console.log(\"HitPaddle! Front Botton\");\r\n        //     return;\r\n        // }\r\n        if(hitP1PadBySide || hitP2PadBySide){\r\n            this.vx *= -1;\r\n            this.direction *= -1;\r\n            this.collisionDetected();\r\n            // console.log(\"HitPaddle! Front Side\");\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    collisionDetected(){\r\n        const sound = this.pingSounds.shift();\r\n        this.pingSounds.push(sound);\r\n        if(!this.isMute){\r\n            sound.play();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.isDirty){\r\n            return;\r\n        }\r\n        this.ballSvg.center(this.cx, this.cy);\r\n\r\n        this.isDirty = this.isMoving;\r\n    }\r\n}\r\n","export default class Score {\r\n    constructor(scoreSvg) {\r\n        this.scoreSvg = scoreSvg;\r\n        this.scoreInternal = 0;\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        this.isDirty = true;\r\n\r\n        this.scoreInternal = 0;\r\n    }\r\n\r\n    scores(){\r\n        this.isDirty = true;\r\n\r\n        this.scoreInternal++;\r\n    }\r\n\r\n    get score () {\r\n        return this.scoreInternal;\r\n    }\r\n\r\n    render() {\r\n        if(!this.isDirty){\r\n            return;\r\n        }\r\n\r\n        this.scoreSvg.text(this.score.toString());\r\n        this.isDirty = false;\r\n    }\r\n}\r\n","import Score from \"./Score\";\r\n\r\nexport class ScoreBoard{\r\n    constructor(score1Svg, score2Svg){\r\n        this.player1 = new Score(score1Svg);\r\n        this.player2 = new Score(score2Svg);\r\n\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        this.player1.reset();\r\n        this.player2.reset();\r\n    }\r\n\r\n    get player1Score(){\r\n        return this.player1.score;\r\n    }\r\n\r\n    get player2Score(){\r\n        return this.player2.score;\r\n    }\r\n\r\n    get maxScore(){\r\n        return Math.max(this.player1.score, this.player2.score);\r\n    }\r\n\r\n    get winningPalyer() {\r\n        return this.player1Score === this.player2Score ? 0 : this.player1Score > this.player2Score ? 1 : 2;\r\n    }\r\n\r\n    scores(playerThatScore){\r\n        if(playerThatScore === 1){\r\n            this.player1.scores();\r\n        }\r\n        if(playerThatScore === 2){\r\n            this.player2.scores();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        this.player1.render();\r\n        this.player2.render();\r\n    }\r\n}\r\n","export class Paddle{\r\n    constructor(paddleSvg, boardHeight, paddleSpeedFunction) {\r\n        this.paddleSvg = paddleSvg;\r\n        this.boardHeight = boardHeight;\r\n\r\n        this.originHeight = paddleSvg.height();\r\n        this.originalY = this.y = paddleSvg.y();\r\n\r\n        this.paddleSpeedFunction = paddleSpeedFunction;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    get box() {\r\n        return this.paddleSvg.bbox();\r\n    }\r\n\r\n    calculateSpeed() {\r\n        return this.paddleSpeedFunction(this.box.height);\r\n    }\r\n\r\n    moveUp() {\r\n        this.isDirty = true;\r\n\r\n        this.y = Math.max(0, (this.y - this.calculateSpeed()));\r\n    }\r\n\r\n    moveDown() {\r\n        this.isDirty = true;\r\n\r\n        this.y = Math.min((this.boardHeight - this.box.height), (this.y + this.calculateSpeed()));\r\n    }\r\n\r\n    reset() {\r\n        this.isDirty = true;\r\n\r\n        this.updateSize();\r\n        this.y = this.originalY;\r\n    }\r\n\r\n    updateSize(myScore=0, opponentScore=0){\r\n        this.isDirty = true;\r\n\r\n        const ajust = (5 * (opponentScore-myScore));\r\n        let newH = this.originHeight + ajust;\r\n        newH = Math.max(Math.min(newH, (this.boardHeight*0.7)), (this.boardHeight*0.1));\r\n        this.paddleSvg.height(newH);\r\n\r\n        if(this.box.y2 >= this.boardHeight){\r\n            this.moveDown();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(!this.isDirty){\r\n            return;\r\n        }\r\n        this.paddleSvg.y(this.y);\r\n\r\n        this.isDirty = false;\r\n    }\r\n}\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmeidate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","import { setTimeout } from \"timers\";\r\nimport Random from \"random-js\";\r\n\r\nimport { Paddle } from \"./Paddle.js\";\r\nimport { ScoreBoard } from \"./ScoreBoard.js\";\r\nimport { Ball } from \"./Ball.js\";\r\n\r\nconst random = new Random();\r\n\r\nexport class Board{\r\n    constructor(gameSettings, boardSvg, p1PaddleSvg, p2PaddleSvg, ballSvg, score1Svg, score2Svg, p1WinnerSvg, p2WinnerSvg){\r\n        this.gameSettings = gameSettings;\r\n\r\n        this.boardSvg = boardSvg;\r\n        this.boardBox = this.boardSvg.rbox();\r\n\r\n        this.p1WinnerSvg = p1WinnerSvg;\r\n        this.p2WinnerSvg = p2WinnerSvg;\r\n\r\n        this.score = new ScoreBoard(score1Svg, score2Svg);\r\n        this.paddle1 = new Paddle(p1PaddleSvg, this.boardBox.height, gameSettings.paddleSpeedCalculatorFunc);\r\n        this.paddle2 = new Paddle(p2PaddleSvg, this.boardBox.height, gameSettings.paddleSpeedCalculatorFunc);\r\n\r\n        this.balls = [];\r\n        this.reset();\r\n    }\r\n\r\n    get player1() {\r\n        return this.paddle1;\r\n    }\r\n    get player2() {\r\n        return this.paddle2;\r\n    }\r\n    get scoreBoard() {\r\n        return this.score;\r\n    }\r\n\r\n    player1FireBall() {\r\n        this.fireBall(1);\r\n    }\r\n    player2FireBall() {\r\n        this.fireBall(-1);\r\n    }\r\n    fireBall(direction){\r\n        const playerFired = (direction < 0 ? this.player2 : this.player1);\r\n        const ball = Ball.createNewBallElement(this.boardSvg, this.gameSettings.firstBallRadius, false, this.gameSettings.isGameMute, playerFired.box.cx, playerFired.box.cy);\r\n        this.balls.push(ball);\r\n        setTimeout(()=> ball.startMovingTo(direction), 1);\r\n        return true;\r\n    }\r\n\r\n    addBall(radius = random.integer(this.gameSettings.randomBallMinRadius, this.gameSettings.randomBallMaxRadius)){\r\n        if(this.balls.length >= this.gameSettings.maxOfBallsInGame){\r\n            return false;\r\n        }\r\n\r\n        const ball = Ball.createNewBallElement(this.boardSvg, radius, true, this.gameSettings.isGameMute);\r\n        this.balls.push(ball);\r\n\r\n        const isExtraBall = (this.balls.length > 1);\r\n        if(isExtraBall){\r\n            setTimeout(()=> ball.startMoving(), this.gameSettings.intervalToNewBallStartInARoundInMs);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    reset() {\r\n        this.p1WinnerSvg.addClass(\"hidden\");\r\n        this.p2WinnerSvg.addClass(\"hidden\");\r\n        this.score.reset()\r\n        this.paddle1.reset();\r\n        this.paddle2.reset();\r\n        this.removeBalls();\r\n        this.addBall(this.gameSettings.firstBallRadius);\r\n    }\r\n\r\n    removeBalls() {\r\n        this.balls.map(b => b.removeBall())\r\n        this.balls = [];\r\n    }\r\n\r\n    start() {\r\n        this.balls.map(b => b.startMoving());\r\n    }\r\n\r\n    update() {\r\n        const paddle1Box = this.paddle1.box;\r\n        const paddle2Box = this.paddle2.box;\r\n\r\n        this.balls.map(ball => {\r\n            const hitSide = ball.updatePos(this.boardBox, paddle1Box, paddle2Box);\r\n            if(hitSide !== 0){\r\n                this.scores(ball, hitSide);\r\n            }\r\n        });\r\n    }\r\n\r\n    scores(ball, hitSide){\r\n        if(ball.autoRespawn){\r\n            ball.reset();\r\n            setTimeout(()=> ball.startMoving(hitSide*-1), this.gameSettings.intervalToWaitAfterScoreToNewRoundInMs);\r\n        }else{\r\n            ball.removeBall();\r\n            this.balls.splice(this.balls.indexOf(ball), 1); //Remove from Board\r\n        }\r\n\r\n        this.score.scores(hitSide === -1 ? 2 : 1);\r\n\r\n        this.paddle1.updateSize(this.score.player1.score, this.score.player2.score);\r\n        this.paddle2.updateSize(this.score.player2.score, this.score.player1.score);\r\n\r\n        const gameEnd = (this.score.maxScore === this.gameSettings.maxScore);\r\n        if(gameEnd){\r\n            this.endOfGame();\r\n        }\r\n    }\r\n\r\n    endOfGame(){\r\n        this.removeBalls();\r\n        if(this.scoreBoard.winningPalyer === 1){\r\n            this.p1WinnerSvg.removeClass(\"hidden\");\r\n        }else{\r\n            this.p2WinnerSvg.removeClass(\"hidden\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.score.render()\r\n        this.paddle1.render();\r\n        this.paddle2.render();\r\n        this.balls.map(b => b.render());\r\n    }\r\n}\r\n","import { Board } from \"./Board.js\";\r\nimport SVG from \"svg.js\";\r\n\r\nexport default class Game {\r\n\r\n\tconstructor(gameSettings) {\r\n        const boardSvg = SVG.get(\"game-svg\");\r\n        const p1PaddleSvg = SVG.get(\"p1Paddle\");\r\n        const p2PaddleSvg = SVG.get(\"p2Paddle\");\r\n        const ballSvg = SVG.get(\"ball\");\r\n        const score1Svg = SVG.get(\"p1Score\");\r\n        const score2Svg = SVG.get(\"p2Score\");\r\n        const p1WinnerSvg = SVG.get(\"p1Winner\");\r\n        const p2WinnerSvg = SVG.get(\"p2Winner\");\r\n\r\n        this.gamePauseTextSvg = SVG.get(\"gamePauseText\");\r\n\r\n        this.gameSettings = gameSettings;\r\n        this.board = new Board(gameSettings, boardSvg, p1PaddleSvg, p2PaddleSvg, ballSvg, score1Svg, score2Svg, p1WinnerSvg, p2WinnerSvg);\r\n\r\n        this.reset();\r\n\t}\r\n\r\n    player1MoveUp() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.player1.moveUp();\r\n    }\r\n    player1MoveDown() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.player1.moveDown();\r\n    }\r\n    player1FireBall() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.player1FireBall();\r\n    }\r\n    player2MoveUp() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.player2.moveUp();\r\n    }\r\n    player2MoveDown() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.player2.moveDown();\r\n    }\r\n    player2FireBall() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.player2FireBall();\r\n    }\r\n\r\n    reset() {\r\n        this.gamePauseTextSvg.addClass(\"hidden\");\r\n        this.board.reset()\r\n        this.isStarted = false;\r\n        this.isPaused = true;\r\n    }\r\n\r\n    startOrPause() {\r\n        if(!this.isStarted){\r\n            this.reset();\r\n            this.board.start();\r\n        }else{\r\n            this.gamePauseTextSvg.toggleClass(\"hidden\");\r\n        }\r\n        this.isPaused = !this.isPaused;\r\n        this.isStarted = true;\r\n    }\r\n\r\n    addBall() {\r\n        if(this.isPaused){\r\n            return;\r\n        }\r\n        return this.board.addBall();\r\n    }\r\n\r\n\tgameloop() {\r\n        if(!this.isPaused && this.isStarted){\r\n            this.board.update();\r\n        }\r\n        this.board.render();\r\n\t}\r\n}\r\n","export const KEYS = {\r\n    p1Up: \"KeyA\",\r\n    p1Down: \"KeyZ\",\r\n    p1Fire: \"KeyS\",\r\n    p2Up: \"ArrowUp\",\r\n    p2Down: \"ArrowDown\",\r\n    p2Fire: \"ArrowLeft\",\r\n    gameStart: \"Space\",\r\n    addBall: \"KeyB\",\r\n    reset: \"KeyR\"\r\n}\r\n\r\nexport const GameSettings = {\r\n    isGameMute: false,\r\n    maxScore: 10,\r\n    intervalToWaitAfterScoreToNewRoundInMs: 250,\r\n\r\n    maxOfBallsInGame: 5,\r\n    firstBallRadius: 6,\r\n    randomBallMinRadius: 3,\r\n    randomBallMaxRadius: 16,\r\n    intervalToNewBallStartInARoundInMs: 500,\r\n\r\n    paddleSpeedCalculatorFunc: (size) => {\r\n        return Math.max(2, Math.min( (8/size*100) , 50))\r\n    }\r\n}\r\n","export default class KeyPressMapCallBack {\r\n\r\n    constructor(allowedKeysCodesAndCallBacks){\r\n        this.allowedKeysCodesAndCallBacks = allowedKeysCodesAndCallBacks;\r\n        this.keyPressedMap = new Map();\r\n        for (const key of allowedKeysCodesAndCallBacks.keys()) {\r\n            this.keyPressedMap.set(key, false);\r\n        }\r\n    }\r\n\r\n    release(code){\r\n        if(!this.keyPressedMap.has(code)){\r\n            return false;\r\n        }\r\n        this.keyPressedMap.set(code, false);\r\n        return true;\r\n    }\r\n\r\n    press(code){\r\n        if(!this.keyPressedMap.has(code)){\r\n            return false;\r\n        }\r\n        this.keyPressedMap.set(code, true);\r\n        this.callBackFromAllPressedKeys();\r\n        return true;\r\n    }\r\n\r\n    callBackFromAllPressedKeys() {\r\n        for (const [keyCode, isPressed] of this.keyPressedMap) {\r\n            if(isPressed){\r\n                this.allowedKeysCodesAndCallBacks.get(keyCode)();\r\n            }\r\n        }\r\n    }\r\n}\r\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\toptions.attrs.type = \"text/css\";\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\toptions.attrs.type = \"text/css\";\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","module.exports = __webpack_public_path__ + \"public/fonts/slkscr-webfont.svg\";","module.exports = __webpack_public_path__ + \"public/fonts/slkscr-webfont.ttf\";","module.exports = __webpack_public_path__ + \"public/fonts/slkscr-webfont.woff\";","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","module.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"'\n    }\n\n    return url\n}\n","var escape = require(\"../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:\\\"\\\";content:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:Silkscreen Web;src:url(\" + escape(require(\"../../public/fonts/slkscr-webfont.eot\")) + \");src:url(\" + escape(require(\"../../public/fonts/slkscr-webfont.eot\")) + \"?#iefix) format(\\\"embedded-opentype\\\"),url(\" + escape(require(\"../../public/fonts/slkscr-webfont.woff\")) + \") format(\\\"woff\\\"),url(\" + escape(require(\"../../public/fonts/slkscr-webfont.ttf\")) + \") format(\\\"truetype\\\"),url(\" + escape(require(\"../../public/fonts/slkscr-webfont.svg\")) + \"#silkscreennormal) format(\\\"svg\\\");font-weight:400;font-style:normal}html{font-size:16px}body{align-items:center;display:flex;font-family:Silkscreen Web,monotype;height:100vh;justify-content:center;width:100%}h1{font-size:2.5rem;margin-bottom:1rem;text-align:center}main{max-width:512px}@keyframes blinker{50%{opacity:0}}@keyframes blinkerCrazy{50%{fill-opacity:0}25%,95%{stroke-opacity:0}}@keyframes blinkerBorder{50%{stroke-opacity:0}}.game-board svg{background:#353535;color:#fff;stroke:#fff;fill:#fff;font-size:2rem}.winner-text{font-size:3rem;fill:#ff0;stroke:gray}svg .hidden{opacity:0}#gamePauseText{fill:#daa520;stroke:gray;stroke-width:2px;font-size:3.2rem;text-transform:uppercase;letter-spacing:.1rem;animation:blinkerBorder 1s linear infinite}.ball{stroke:#fff;stroke-width:0px;fill-opacity:1}.ball:first-of-type{fill:#fff}.ball:nth-of-type(2){fill:tan}.ball:nth-of-type(3){fill:salmon;animation:blinker 1s linear infinite}.ball:nth-of-type(4){fill:thistle;animation:blinker 1s ease-in-out infinite}.ball:nth-of-type(5){fill:#ff0;stroke-width:3px;animation:blinkerCrazy 1s linear infinite}.ball:nth-of-type(6){fill:#9acd32}.ball:nth-of-type(7){fill:teal;stroke-width:3px;animation:blinkerCrazy 1s linear infinite}.ball:nth-of-type(8){fill:#6a5acd}.ball:nth-of-type(9){fill:#2e8b57;animation:blinker 3s ease-in-out infinite}.ball:nth-of-type(10){fill:#4682b4;stroke-width:3px;animation:blinkerCrazy 2s linear infinite}.keymap{display:flex;flex-flow:row wrap;justify-content:space-around}.keymap>*{margin:.6rem}.player1-keymap{text-align:left}.main-keymap{text-align:center;order:3}.player2-keymap{text-align:right}\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!./game.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./game.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./game.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import \"./styles/game.css\";\r\nimport KeyPressMapCallBack from \"./util/KeyPressMapCallBack.js\"\r\nimport {KEYS, GameSettings} from \"./settings.js\";\r\nimport Game from \"./Pong/Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\r\n    const game = new Game(GameSettings);\r\n\r\n    const keyMapCallBack = new KeyPressMapCallBack(new Map([\r\n        [ KEYS.p1Up     , () => game.player1MoveUp()   ],\r\n        [ KEYS.p1Down   , () => game.player1MoveDown() ],\r\n        [ KEYS.p1Fire   , () => game.player1FireBall() ],\r\n        [ KEYS.p2Up     , () => game.player2MoveUp()   ],\r\n        [ KEYS.p2Down   , () => game.player2MoveDown() ],\r\n        [ KEYS.p2Fire   , () => game.player2FireBall() ],\r\n        [ KEYS.gameStart, () => game.startOrPause()    ],\r\n        [ KEYS.addBall  , () => game.addBall()         ],\r\n        [ KEYS.reset    , () => game.reset()           ]\r\n    ]));\r\n\r\n    document.body.addEventListener(\"keydown\", function (e) {\r\n        const isKeyIsMapped = keyMapCallBack.press(e.code);\r\n        if(isKeyIsMapped){\r\n            e.preventDefault();\r\n        }\r\n    });\r\n    document.body.addEventListener(\"keyup\", function (e) {\r\n        keyMapCallBack.release(e.code);\r\n    });\r\n\r\n\r\n    (function gameLoop() {\r\n        game.gameloop();\r\n        requestAnimationFrame(gameLoop);\r\n    })();\r\n\r\n\r\n});\r\n"],"sourceRoot":""}